root = "."
testdata_dir = "testdata"
tmp_dir = "tmp"

[build]
args_bin = []
bin = "./tmp/overmind"
# build with additional flags for debugging
# cmd = "go generate ./... && go build -gcflags='all=-N -l' -o ./tmp/overmind main.go"
cmd = "go generate ./... && cp $(which terraform) main.tf ./tmp/ && go build -o ./tmp/overmind main.go"
delay = 1000
exclude_dir = ["assets", "build", "tmp", "vendor", "test", "testdata"]
exclude_file = ["server/admin/assets/dist.css"]
exclude_regex = [
  "_test\\.go",
  "_templ\\.go",
  "\\.sql\\.go",
  ".*models/(models|copyfrom|db).go",
  "cmd/datamaps",
]
exclude_unchanged = false
follow_symlink = false
# contrary to other repos, this does wait for the debugger to attach, as cli processes are very shortlived
# full_bin = "dlv exec --accept-multiclient --continue --headless --listen :9087 --api-version 2 ./tmp/overmind -- terraform plan"
# full_bin = "dlv exec --accept-multiclient --headless --listen :9087 --api-version 2 --tty /dev/pts/3 ./tmp/overmind -- terraform plan"
full_bin = "docker run --rm -e AWS_PROFILE=sso-david -e OVM_API_KEY -e APP -e RESET_STORED_CONFIG=true -e TEABUG=true -e LOG=trace -v $PWD:/vhs -v ~/.aws:/root/.aws ghcr.io/charmbracelet/vhs /vhs/demos/plan.tape && code demos/plan.gif"
include_dir = []
include_ext = ["go", "tpl", "tmpl", "templ", "html", "sql", "css", "md", "tape"]
include_file = ["sqlc.yaml"]
kill_delay = "0s"
log = "build-errors.log"
poll = false
poll_interval = 0
post_cmd = []
pre_cmd = []
rerun = false
rerun_delay = 500
send_interrupt = false
stop_on_error = true

[color]
app = ""
build = "yellow"
main = "magenta"
runner = "green"
watcher = "cyan"

[log]
main_only = false
time = false

[misc]
clean_on_exit = false

[screen]
clear_on_rebuild = false
keep_scroll = true
