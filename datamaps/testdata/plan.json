{
    "planned_values": {
        "root_module": {
            "resources": [
                {
                    "address": "kubernetes_deployment.api_server",
                    "mode": "managed",
                    "type": "kubernetes_deployment",
                    "name": "api_server",
                    "provider_name": "registry.terraform.io/hashicorp/kubernetes",
                    "schema_version": 1,
                    "values": {
                        "id": "default/api-server",
                        "metadata": [
                            {
                                "annotations": {},
                                "generate_name": "",
                                "generation": 18,
                                "labels": {},
                                "name": "api-server",
                                "namespace": "default",
                                "resource_version": "16505436",
                                "uid": "cd11a255-2964-434a-b366-063ea673bbd2"
                            }
                        ],
                        "spec": [
                            {
                                "min_ready_seconds": 0,
                                "paused": false,
                                "progress_deadline_seconds": 600,
                                "replicas": "1",
                                "revision_history_limit": 10,
                                "selector": [
                                    {
                                        "match_expressions": [],
                                        "match_labels": {
                                            "app": "api-server"
                                        }
                                    }
                                ],
                                "strategy": [
                                    {
                                        "rolling_update": [
                                            {
                                                "max_surge": "25%",
                                                "max_unavailable": "25%"
                                            }
                                        ],
                                        "type": "RollingUpdate"
                                    }
                                ],
                                "template": [
                                    {
                                        "metadata": [
                                            {
                                                "annotations": {},
                                                "generate_name": "",
                                                "generation": 0,
                                                "labels": {
                                                    "app": "api-server"
                                                },
                                                "name": "",
                                                "namespace": "",
                                                "resource_version": "",
                                                "uid": ""
                                            }
                                        ],
                                        "spec": [
                                            {
                                                "active_deadline_seconds": 0,
                                                "affinity": [],
                                                "automount_service_account_token": true,
                                                "container": [
                                                    {
                                                        "args": [],
                                                        "command": [],
                                                        "env": [],
                                                        "env_from": [],
                                                        "image": "ghcr.io/overmindtech/api-server@sha256:d10d15d0bce640a7e4e505b57652d7a7e46f8092a3dbd64408de4368cda40270",
                                                        "image_pull_policy": "IfNotPresent",
                                                        "lifecycle": [],
                                                        "liveness_probe": [],
                                                        "name": "api-server",
                                                        "port": [
                                                            {
                                                                "container_port": 8080,
                                                                "host_ip": "",
                                                                "host_port": 0,
                                                                "name": "",
                                                                "protocol": "TCP"
                                                            }
                                                        ],
                                                        "readiness_probe": [],
                                                        "resources": [
                                                            {
                                                                "limits": {
                                                                    "memory": "2Gi"
                                                                },
                                                                "requests": {
                                                                    "cpu": "250m",
                                                                    "memory": "200Mi"
                                                                }
                                                            }
                                                        ],
                                                        "security_context": [],
                                                        "startup_probe": [],
                                                        "stdin": false,
                                                        "stdin_once": false,
                                                        "termination_message_path": "/dev/termination-log",
                                                        "termination_message_policy": "File",
                                                        "tty": false,
                                                        "volume_mount": [
                                                            {
                                                                "mount_path": "/nats-nkeys",
                                                                "mount_propagation": "None",
                                                                "name": "nats-nkeys",
                                                                "read_only": false,
                                                                "sub_path": ""
                                                            }
                                                        ],
                                                        "working_dir": ""
                                                    }
                                                ],
                                                "dns_config": [],
                                                "dns_policy": "ClusterFirst",
                                                "enable_service_links": true,
                                                "host_aliases": [],
                                                "host_ipc": false,
                                                "host_network": false,
                                                "host_pid": false,
                                                "hostname": "",
                                                "image_pull_secrets": [
                                                    {
                                                        "name": "srcman-registry-credentials"
                                                    }
                                                ],
                                                "init_container": [
                                                    {
                                                        "args": [],
                                                        "command": [
                                                            "/bin/mkdir",
                                                            "-p",
                                                            "/nats-nkeys/nsc"
                                                        ],
                                                        "env": [],
                                                        "env_from": [],
                                                        "image": "alpine:latest",
                                                        "image_pull_policy": "Always",
                                                        "lifecycle": [],
                                                        "liveness_probe": [],
                                                        "name": "create-folder",
                                                        "port": [],
                                                        "readiness_probe": [],
                                                        "resources": [
                                                            {
                                                                "limits": {},
                                                                "requests": {}
                                                            }
                                                        ],
                                                        "security_context": [],
                                                        "startup_probe": [],
                                                        "stdin": false,
                                                        "stdin_once": false,
                                                        "termination_message_path": "/dev/termination-log",
                                                        "termination_message_policy": "File",
                                                        "tty": false,
                                                        "volume_mount": [
                                                            {
                                                                "mount_path": "/nats-nkeys",
                                                                "mount_propagation": "None",
                                                                "name": "nats-nkeys",
                                                                "read_only": false,
                                                                "sub_path": ""
                                                            }
                                                        ],
                                                        "working_dir": ""
                                                    },
                                                    {
                                                        "args": [
                                                            "init",
                                                            "--nsc-location",
                                                            "/nats-nkeys/nsc",
                                                            "--nsc-operator",
                                                            "dogfood",
                                                            "--revlink-account",
                                                            "revlink"
                                                        ],
                                                        "command": [],
                                                        "env": [],
                                                        "env_from": [],
                                                        "image": "ghcr.io/overmindtech/api-server@sha256:d10d15d0bce640a7e4e505b57652d7a7e46f8092a3dbd64408de4368cda40270",
                                                        "image_pull_policy": "IfNotPresent",
                                                        "lifecycle": [],
                                                        "liveness_probe": [],
                                                        "name": "generate-nkeys",
                                                        "port": [],
                                                        "readiness_probe": [],
                                                        "resources": [
                                                            {
                                                                "limits": {},
                                                                "requests": {}
                                                            }
                                                        ],
                                                        "security_context": [],
                                                        "startup_probe": [],
                                                        "stdin": false,
                                                        "stdin_once": false,
                                                        "termination_message_path": "/dev/termination-log",
                                                        "termination_message_policy": "File",
                                                        "tty": false,
                                                        "volume_mount": [
                                                            {
                                                                "mount_path": "/nats-nkeys",
                                                                "mount_propagation": "None",
                                                                "name": "nats-nkeys",
                                                                "read_only": false,
                                                                "sub_path": ""
                                                            }
                                                        ],
                                                        "working_dir": ""
                                                    }
                                                ],
                                                "node_name": "",
                                                "node_selector": {},
                                                "priority_class_name": "",
                                                "readiness_gate": [],
                                                "restart_policy": "Always",
                                                "runtime_class_name": "",
                                                "scheduler_name": "default-scheduler",
                                                "security_context": [],
                                                "service_account_name": "api-server-service-account",
                                                "share_process_namespace": false,
                                                "subdomain": "",
                                                "termination_grace_period_seconds": 30,
                                                "toleration": [],
                                                "topology_spread_constraint": [],
                                                "volume": [
                                                    {
                                                        "aws_elastic_block_store": [],
                                                        "azure_disk": [],
                                                        "azure_file": [],
                                                        "ceph_fs": [],
                                                        "cinder": [],
                                                        "config_map": [],
                                                        "csi": [],
                                                        "downward_api": [],
                                                        "empty_dir": [],
                                                        "fc": [],
                                                        "flex_volume": [],
                                                        "flocker": [],
                                                        "gce_persistent_disk": [],
                                                        "git_repo": [],
                                                        "glusterfs": [],
                                                        "host_path": [],
                                                        "iscsi": [],
                                                        "local": [],
                                                        "name": "nats-nkeys",
                                                        "nfs": [],
                                                        "persistent_volume_claim": [
                                                            {
                                                                "claim_name": "nats-nkeys",
                                                                "read_only": false
                                                            }
                                                        ],
                                                        "photon_persistent_disk": [],
                                                        "projected": [],
                                                        "quobyte": [],
                                                        "rbd": [],
                                                        "secret": [],
                                                        "vsphere_volume": []
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ],
                        "timeouts": {
                            "create": "2m",
                            "delete": "2m",
                            "update": "2m"
                        },
                        "wait_for_rollout": true
                    },
                    "sensitive_values": {
                        "metadata": [
                            {
                                "annotations": {},
                                "labels": {}
                            }
                        ],
                        "spec": [
                            {
                                "selector": [
                                    {
                                        "match_expressions": [],
                                        "match_labels": {}
                                    }
                                ],
                                "strategy": [
                                    {
                                        "rolling_update": [
                                            {}
                                        ]
                                    }
                                ],
                                "template": [
                                    {
                                        "metadata": [
                                            {
                                                "annotations": {},
                                                "labels": {}
                                            }
                                        ],
                                        "spec": [
                                            {
                                                "affinity": [],
                                                "container": [
                                                    {
                                                        "args": [],
                                                        "command": [],
                                                        "env": [
                                                            {
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value": true,
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value": true,
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value": true,
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value_from": []
                                                            },
                                                            {
                                                                "value_from": [
                                                                    {
                                                                        "config_map_key_ref": [],
                                                                        "field_ref": [],
                                                                        "resource_field_ref": [],
                                                                        "secret_key_ref": [
                                                                            {}
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "value_from": [
                                                                    {
                                                                        "config_map_key_ref": [],
                                                                        "field_ref": [],
                                                                        "resource_field_ref": [],
                                                                        "secret_key_ref": [
                                                                            {}
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "value_from": []
                                                            }
                                                        ],
                                                        "env_from": [],
                                                        "lifecycle": [],
                                                        "liveness_probe": [],
                                                        "port": [
                                                            {}
                                                        ],
                                                        "readiness_probe": [],
                                                        "resources": [
                                                            {
                                                                "limits": {},
                                                                "requests": {}
                                                            }
                                                        ],
                                                        "security_context": [],
                                                        "startup_probe": [],
                                                        "volume_mount": [
                                                            {}
                                                        ]
                                                    }
                                                ],
                                                "dns_config": [],
                                                "host_aliases": [],
                                                "image_pull_secrets": [
                                                    {}
                                                ],
                                                "init_container": [
                                                    {
                                                        "args": [],
                                                        "command": [
                                                            false,
                                                            false,
                                                            false
                                                        ],
                                                        "env": [],
                                                        "env_from": [],
                                                        "lifecycle": [],
                                                        "liveness_probe": [],
                                                        "port": [],
                                                        "readiness_probe": [],
                                                        "resources": [
                                                            {
                                                                "limits": {},
                                                                "requests": {}
                                                            }
                                                        ],
                                                        "security_context": [],
                                                        "startup_probe": [],
                                                        "volume_mount": [
                                                            {}
                                                        ]
                                                    },
                                                    {
                                                        "args": [
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false,
                                                            false
                                                        ],
                                                        "command": [],
                                                        "env": [],
                                                        "env_from": [],
                                                        "lifecycle": [],
                                                        "liveness_probe": [],
                                                        "port": [],
                                                        "readiness_probe": [],
                                                        "resources": [
                                                            {
                                                                "limits": {},
                                                                "requests": {}
                                                            }
                                                        ],
                                                        "security_context": [],
                                                        "startup_probe": [],
                                                        "volume_mount": [
                                                            {}
                                                        ]
                                                    }
                                                ],
                                                "node_selector": {},
                                                "readiness_gate": [],
                                                "security_context": [],
                                                "toleration": [],
                                                "topology_spread_constraint": [],
                                                "volume": [
                                                    {
                                                        "aws_elastic_block_store": [],
                                                        "azure_disk": [],
                                                        "azure_file": [],
                                                        "ceph_fs": [],
                                                        "cinder": [],
                                                        "config_map": [],
                                                        "csi": [],
                                                        "downward_api": [],
                                                        "empty_dir": [],
                                                        "fc": [],
                                                        "flex_volume": [],
                                                        "flocker": [],
                                                        "gce_persistent_disk": [],
                                                        "git_repo": [],
                                                        "glusterfs": [],
                                                        "host_path": [],
                                                        "iscsi": [],
                                                        "local": [],
                                                        "nfs": [],
                                                        "persistent_volume_claim": [
                                                            {}
                                                        ],
                                                        "photon_persistent_disk": [],
                                                        "projected": [],
                                                        "quobyte": [],
                                                        "rbd": [],
                                                        "secret": [],
                                                        "vsphere_volume": []
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ],
                        "timeouts": {}
                    }
                },
                {
                    "address": "module.eks_elb_controller.aws_iam_policy.lb_controller[0]",
                    "mode": "managed",
                    "type": "aws_iam_policy",
                    "name": "lb_controller",
                    "index": 0,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "arn": "arn:aws:iam::123456789012:policy/test-alb-ingress",
                        "description": "Policy for alb-ingress service",
                        "id": "arn:aws:iam::123456789012:policy/test-alb-ingress",
                        "name": "test-alb-ingress",
                        "name_prefix": "",
                        "path": "/",
                        "policy_id": "ANPA5X4M7MOYCYTEF5VUE",
                        "tags": {},
                        "tags_all": {}
                    },
                    "sensitive_values": {
                        "tags": {},
                        "tags_all": {}
                    }
                },
                {
                    "address": "aws_iam_policy.auth0_ses_send_emails",
                    "mode": "managed",
                    "type": "aws_iam_policy",
                    "name": "auth0_ses_send_emails",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "arn": "arn:aws:iam::123456789012:policy/auth0-ses-send-emails",
                        "description": "Allows Auth0 to send emails via SES",
                        "id": "arn:aws:iam::123456789012:policy/auth0-ses-send-emails",
                        "name": "auth0-ses-send-emails",
                        "name_prefix": "",
                        "path": "/",
                        "policy": "{\"Statement\":[{\"Action\":[\"ses:SendRawEmail\",\"ses:SendEmail\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
                        "policy_id": "ANPA5X4M7MOYO7KE6G4J4",
                        "tags": {},
                        "tags_all": {}
                    },
                    "sensitive_values": {
                        "tags": {},
                        "tags_all": {}
                    }
                },
                {
                    "address": "module.eks.aws_iam_policy.cluster_encryption[0]",
                    "mode": "managed",
                    "type": "aws_iam_policy",
                    "name": "cluster_encryption",
                    "index": 0,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "arn": "arn:aws:iam::123456789012:policy/test-cluster-ClusterEncryption2023061613390591120000000e",
                        "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
                        "id": "arn:aws:iam::123456789012:policy/test-cluster-ClusterEncryption2023061613390591120000000e",
                        "name": "test-cluster-ClusterEncryption2023061613390591120000000e",
                        "name_prefix": "test-cluster-ClusterEncryption",
                        "path": "/",
                        "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:eu-west-2:12345678901:key/1234567\"}],\"Version\":\"2012-10-17\"}",
                        "policy_id": "foobar",
                        "tags": {},
                        "tags_all": {}
                    },
                    "sensitive_values": {
                        "tags": {},
                        "tags_all": {}
                    }
                },
                {
                    "address": "module.eks.aws_iam_policy.cni_ipv6_policy[0]",
                    "mode": "managed",
                    "type": "aws_iam_policy",
                    "name": "cni_ipv6_policy",
                    "index": 0,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "arn": "arn:aws:iam::123456789012:policy/AmazonEKS_CNI_IPv6_Policy",
                        "description": "IAM policy for EKS CNI to assign IPV6 addresses",
                        "id": "arn:aws:iam::123456789012:policy/AmazonEKS_CNI_IPv6_Policy",
                        "name": "AmazonEKS_CNI_IPv6_Policy",
                        "name_prefix": "",
                        "path": "/",
                        "policy": "{\"Statement\":[{\"Action\":[\"ec2:DescribeTags\",\"ec2:DescribeNetworkInterfaces\",\"ec2:DescribeInstances\",\"ec2:DescribeInstanceTypes\",\"ec2:AssignIpv6Addresses\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"AssignDescribe\"},{\"Action\":\"ec2:CreateTags\",\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:network-interface/*\",\"Sid\":\"CreateTags\"}],\"Version\":\"2012-10-17\"}",
                        "policy_id": "ANPA5X4M7MOYIF2MVJEGJ",
                        "tags": {},
                        "tags_all": {}
                    },
                    "sensitive_values": {
                        "tags": {},
                        "tags_all": {}
                    }
                },
                {
                    "address": "module.eks_elb_controller.data.aws_iam_policy_document.lb_controller[0]",
                    "mode": "data",
                    "type": "aws_iam_policy_document",
                    "name": "lb_controller",
                    "index": 0,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "override_policy_documents": null,
                        "policy_id": null,
                        "source_policy_documents": null,
                        "statement": [
                            {
                                "actions": [
                                    "iam:CreateServiceLinkedRole"
                                ],
                                "condition": [
                                    {
                                        "test": "StringEquals",
                                        "values": [
                                            "elasticloadbalancing.amazonaws.com"
                                        ],
                                        "variable": "iam:AWSServiceName"
                                    }
                                ],
                                "effect": "Allow",
                                "not_actions": null,
                                "not_principals": [],
                                "not_resources": null,
                                "principals": [],
                                "resources": [
                                    "*"
                                ],
                                "sid": null
                            },
                            {
                                "actions": [
                                    "ec2:DescribeAccountAttributes",
                                    "ec2:DescribeAddresses",
                                    "ec2:DescribeAvailabilityZones",
                                    "ec2:DescribeCoipPools",
                                    "ec2:DescribeInstances",
                                    "ec2:DescribeInternetGateways",
                                    "ec2:DescribeNetworkInterfaces",
                                    "ec2:DescribeSecurityGroups",
                                    "ec2:DescribeSubnets",
                                    "ec2:DescribeTags",
                                    "ec2:DescribeVpcPeeringConnections",
                                    "ec2:DescribeVpcs",
                                    "ec2:GetCoipPoolUsage",
                                    "elasticloadbalancing:DescribeListenerCertificates",
                                    "elasticloadbalancing:DescribeListeners",
                                    "elasticloadbalancing:DescribeLoadBalancerAttributes",
                                    "elasticloadbalancing:DescribeLoadBalancers",
                                    "elasticloadbalancing:DescribeRules",
                                    "elasticloadbalancing:DescribeSSLPolicies",
                                    "elasticloadbalancing:DescribeTags",
                                    "elasticloadbalancing:DescribeTargetGroupAttributes",
                                    "elasticloadbalancing:DescribeTargetGroups",
                                    "elasticloadbalancing:DescribeTargetHealth"
                                ],
                                "condition": [],
                                "effect": "Allow",
                                "not_actions": null,
                                "not_principals": [],
                                "not_resources": null,
                                "principals": [],
                                "resources": [
                                    "*"
                                ],
                                "sid": null
                            },
                            {
                                "actions": [
                                    "acm:DescribeCertificate",
                                    "acm:ListCertificates",
                                    "cognito-idp:DescribeUserPoolClient",
                                    "iam:GetServerCertificate",
                                    "iam:ListServerCertificates",
                                    "shield:CreateProtection",
                                    "shield:DeleteProtection",
                                    "shield:DescribeProtection",
                                    "shield:GetSubscriptionState",
                                    "waf-regional:AssociateWebACL",
                                    "waf-regional:DisassociateWebACL",
                                    "waf-regional:GetWebACL",
                                    "waf-regional:GetWebACLForResource",
                                    "wafv2:AssociateWebACL",
                                    "wafv2:DisassociateWebACL",
                                    "wafv2:GetWebACL",
                                    "wafv2:GetWebACLForResource"
                                ],
                                "condition": [],
                                "effect": "Allow",
                                "not_actions": null,
                                "not_principals": [],
                                "not_resources": null,
                                "principals": [],
                                "resources": [
                                    "*"
                                ],
                                "sid": null
                            },
                            {
                                "actions": [
                                    "ec2:AuthorizeSecurityGroupIngress",
                                    "ec2:RevokeSecurityGroupIngress"
                                ],
                                "condition": [],
                                "effect": "Allow",
                                "not_actions": null,
                                "not_principals": [],
                                "not_resources": null,
                                "principals": [],
                                "resources": [
                                    "*"
                                ],
                                "sid": null
                            },
                            {
                                "actions": [
                                    "ec2:CreateSecurityGroup"
                                ],
                                "condition": [],
                                "effect": "Allow",
                                "not_actions": null,
                                "not_principals": [],
                                "not_resources": null,
                                "principals": [],
                                "resources": [
                                    "*"
                                ],
                                "sid": null
                            },
                            {
                                "actions": [
                                    "ec2:CreateTags"
                                ],
                                "condition": [
                                    {
                                        "test": "Null",
                                        "values": [
                                            "false"
                                        ],
                                        "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                                    },
                                    {
                                        "test": "StringEquals",
                                        "values": [
                                            "CreateSecurityGroup"
                                        ],
                                        "variable": "ec2:CreateAction"
                                    }
                                ],
                                "effect": "Allow",
                                "not_actions": null,
                                "not_principals": [],
                                "not_resources": null,
                                "principals": [],
                                "resources": [
                                    "arn:aws:ec2:*:*:security-group/*"
                                ],
                                "sid": null
                            },
                            {
                                "actions": [
                                    "ec2:CreateTags",
                                    "ec2:DeleteTags"
                                ],
                                "condition": [
                                    {
                                        "test": "Null",
                                        "values": [
                                            "false"
                                        ],
                                        "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                                    },
                                    {
                                        "test": "Null",
                                        "values": [
                                            "true"
                                        ],
                                        "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                                    }
                                ],
                                "effect": "Allow",
                                "not_actions": null,
                                "not_principals": [],
                                "not_resources": null,
                                "principals": [],
                                "resources": [
                                    "arn:aws:ec2:*:*:security-group/*"
                                ],
                                "sid": null
                            },
                            {
                                "actions": [
                                    "ec2:AuthorizeSecurityGroupIngress",
                                    "ec2:DeleteSecurityGroup",
                                    "ec2:RevokeSecurityGroupIngress"
                                ],
                                "condition": [
                                    {
                                        "test": "Null",
                                        "values": [
                                            "false"
                                        ],
                                        "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                                    }
                                ],
                                "effect": "Allow",
                                "not_actions": null,
                                "not_principals": [],
                                "not_resources": null,
                                "principals": [],
                                "resources": [
                                    "*"
                                ],
                                "sid": null
                            },
                            {
                                "actions": [
                                    "elasticloadbalancing:CreateLoadBalancer",
                                    "elasticloadbalancing:CreateTargetGroup"
                                ],
                                "condition": [
                                    {
                                        "test": "Null",
                                        "values": [
                                            "false"
                                        ],
                                        "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                                    }
                                ],
                                "effect": "Allow",
                                "not_actions": null,
                                "not_principals": [],
                                "not_resources": null,
                                "principals": [],
                                "resources": [
                                    "*"
                                ],
                                "sid": null
                            },
                            {
                                "actions": [
                                    "elasticloadbalancing:CreateListener",
                                    "elasticloadbalancing:CreateRule",
                                    "elasticloadbalancing:DeleteListener",
                                    "elasticloadbalancing:DeleteRule"
                                ],
                                "condition": [],
                                "effect": "Allow",
                                "not_actions": null,
                                "not_principals": [],
                                "not_resources": null,
                                "principals": [],
                                "resources": [
                                    "*"
                                ],
                                "sid": null
                            },
                            {
                                "actions": [
                                    "elasticloadbalancing:AddTags",
                                    "elasticloadbalancing:RemoveTags"
                                ],
                                "condition": [
                                    {
                                        "test": "Null",
                                        "values": [
                                            "false"
                                        ],
                                        "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                                    },
                                    {
                                        "test": "Null",
                                        "values": [
                                            "true"
                                        ],
                                        "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                                    }
                                ],
                                "effect": "Allow",
                                "not_actions": null,
                                "not_principals": [],
                                "not_resources": null,
                                "principals": [],
                                "resources": [
                                    "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                                    "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                                    "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                                ],
                                "sid": null
                            },
                            {
                                "actions": [
                                    "elasticloadbalancing:AddTags",
                                    "elasticloadbalancing:RemoveTags"
                                ],
                                "condition": [],
                                "effect": "Allow",
                                "not_actions": null,
                                "not_principals": [],
                                "not_resources": null,
                                "principals": [],
                                "resources": [
                                    "arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*",
                                    "arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*",
                                    "arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
                                    "arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*"
                                ],
                                "sid": null
                            },
                            {
                                "actions": [
                                    "elasticloadbalancing:DeleteLoadBalancer",
                                    "elasticloadbalancing:DeleteTargetGroup",
                                    "elasticloadbalancing:ModifyLoadBalancerAttributes",
                                    "elasticloadbalancing:ModifyTargetGroup",
                                    "elasticloadbalancing:ModifyTargetGroupAttributes",
                                    "elasticloadbalancing:SetIpAddressType",
                                    "elasticloadbalancing:SetSecurityGroups",
                                    "elasticloadbalancing:SetSubnets"
                                ],
                                "condition": [
                                    {
                                        "test": "Null",
                                        "values": [
                                            "false"
                                        ],
                                        "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                                    }
                                ],
                                "effect": "Allow",
                                "not_actions": null,
                                "not_principals": [],
                                "not_resources": null,
                                "principals": [],
                                "resources": [
                                    "*"
                                ],
                                "sid": null
                            },
                            {
                                "actions": [
                                    "elasticloadbalancing:DeregisterTargets",
                                    "elasticloadbalancing:RegisterTargets"
                                ],
                                "condition": [],
                                "effect": "Allow",
                                "not_actions": null,
                                "not_principals": [],
                                "not_resources": null,
                                "principals": [],
                                "resources": [
                                    "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                                ],
                                "sid": null
                            },
                            {
                                "actions": [
                                    "elasticloadbalancing:AddListenerCertificates",
                                    "elasticloadbalancing:ModifyListener",
                                    "elasticloadbalancing:ModifyRule",
                                    "elasticloadbalancing:RemoveListenerCertificates",
                                    "elasticloadbalancing:SetWebAcl"
                                ],
                                "condition": [],
                                "effect": "Allow",
                                "not_actions": null,
                                "not_principals": [],
                                "not_resources": null,
                                "principals": [],
                                "resources": [
                                    "*"
                                ],
                                "sid": null
                            }
                        ],
                        "version": null
                    },
                    "sensitive_values": {
                        "statement": [
                            {
                                "actions": [
                                    false
                                ],
                                "condition": [
                                    {
                                        "values": [
                                            false
                                        ]
                                    }
                                ],
                                "not_principals": [],
                                "principals": [],
                                "resources": [
                                    false
                                ]
                            },
                            {
                                "actions": [
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false
                                ],
                                "condition": [],
                                "not_principals": [],
                                "principals": [],
                                "resources": [
                                    false
                                ]
                            },
                            {
                                "actions": [
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false
                                ],
                                "condition": [],
                                "not_principals": [],
                                "principals": [],
                                "resources": [
                                    false
                                ]
                            },
                            {
                                "actions": [
                                    false,
                                    false
                                ],
                                "condition": [],
                                "not_principals": [],
                                "principals": [],
                                "resources": [
                                    false
                                ]
                            },
                            {
                                "actions": [
                                    false
                                ],
                                "condition": [],
                                "not_principals": [],
                                "principals": [],
                                "resources": [
                                    false
                                ]
                            },
                            {
                                "actions": [
                                    false
                                ],
                                "condition": [
                                    {
                                        "values": [
                                            false
                                        ]
                                    },
                                    {
                                        "values": [
                                            false
                                        ]
                                    }
                                ],
                                "not_principals": [],
                                "principals": [],
                                "resources": [
                                    false
                                ]
                            },
                            {
                                "actions": [
                                    false,
                                    false
                                ],
                                "condition": [
                                    {
                                        "values": [
                                            false
                                        ]
                                    },
                                    {
                                        "values": [
                                            false
                                        ]
                                    }
                                ],
                                "not_principals": [],
                                "principals": [],
                                "resources": [
                                    false
                                ]
                            },
                            {
                                "actions": [
                                    false,
                                    false,
                                    false
                                ],
                                "condition": [
                                    {
                                        "values": [
                                            false
                                        ]
                                    }
                                ],
                                "not_principals": [],
                                "principals": [],
                                "resources": [
                                    false
                                ]
                            },
                            {
                                "actions": [
                                    false,
                                    false
                                ],
                                "condition": [
                                    {
                                        "values": [
                                            false
                                        ]
                                    }
                                ],
                                "not_principals": [],
                                "principals": [],
                                "resources": [
                                    false
                                ]
                            },
                            {
                                "actions": [
                                    false,
                                    false,
                                    false,
                                    false
                                ],
                                "condition": [],
                                "not_principals": [],
                                "principals": [],
                                "resources": [
                                    false
                                ]
                            },
                            {
                                "actions": [
                                    false,
                                    false
                                ],
                                "condition": [
                                    {
                                        "values": [
                                            false
                                        ]
                                    },
                                    {
                                        "values": [
                                            false
                                        ]
                                    }
                                ],
                                "not_principals": [],
                                "principals": [],
                                "resources": [
                                    false,
                                    false,
                                    false
                                ]
                            },
                            {
                                "actions": [
                                    false,
                                    false
                                ],
                                "condition": [],
                                "not_principals": [],
                                "principals": [],
                                "resources": [
                                    false,
                                    false,
                                    false,
                                    false
                                ]
                            },
                            {
                                "actions": [
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false
                                ],
                                "condition": [
                                    {
                                        "values": [
                                            false
                                        ]
                                    }
                                ],
                                "not_principals": [],
                                "principals": [],
                                "resources": [
                                    false
                                ]
                            },
                            {
                                "actions": [
                                    false,
                                    false
                                ],
                                "condition": [],
                                "not_principals": [],
                                "principals": [],
                                "resources": [
                                    false
                                ]
                            },
                            {
                                "actions": [
                                    false,
                                    false,
                                    false,
                                    false,
                                    false
                                ],
                                "condition": [],
                                "not_principals": [],
                                "principals": [],
                                "resources": [
                                    false
                                ]
                            }
                        ]
                    }
                }
            ],
            "child_modules": [
                {
                    "resources": [
                        {
                            "address": "module.core.kubernetes_secret.apiserver-secrets",
                            "mode": "managed",
                            "type": "kubernetes_secret",
                            "name": "apiserver-secrets",
                            "provider_name": "registry.terraform.io/hashicorp/kubernetes",
                            "schema_version": 0,
                            "values": {
                                "binary_data": null,
                                "id": "default/apiserver-secrets",
                                "immutable": false,
                                "metadata": [
                                    {
                                        "annotations": {},
                                        "generate_name": "",
                                        "generation": 0,
                                        "labels": {},
                                        "name": "apiserver-secrets",
                                        "namespace": "default",
                                        "resource_version": "67487020",
                                        "uid": "7a9fce0b-b6a2-4464-8f3a-33a93c2fdeb9"
                                    }
                                ],
                                "timeouts": null,
                                "type": "Opaque",
                                "wait_for_service_account_token": true
                            },
                            "sensitive_values": {
                                "data": {},
                                "metadata": [
                                    {
                                        "annotations": {},
                                        "labels": {}
                                    }
                                ]
                            }
                        },
                        {
                            "address": "module.efs_csi_irsa_role.aws_iam_policy.efs_csi[0]",
                            "mode": "managed",
                            "type": "aws_iam_policy",
                            "name": "efs_csi",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "arn": "arn:aws:iam::123456789012:policy/AmazonEKS_EFS_CSI_Policy-20230317134301609600000001",
                                "description": "Provides permissions to manage EFS volumes via the container storage interface driver",
                                "id": "arn:aws:iam::123456789012:policy/AmazonEKS_EFS_CSI_Policy-20230317134301609600000001",
                                "name": "AmazonEKS_EFS_CSI_Policy-20230317134301609600000001",
                                "name_prefix": "AmazonEKS_EFS_CSI_Policy-",
                                "path": "/",
                                "policy": "{\"Statement\":[{\"Action\":[\"elasticfilesystem:DescribeMountTargets\",\"elasticfilesystem:DescribeFileSystems\",\"elasticfilesystem:DescribeAccessPoints\",\"ec2:DescribeAvailabilityZones\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":\"elasticfilesystem:CreateAccessPoint\",\"Condition\":{\"StringLike\":{\"aws:RequestTag/efs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":\"elasticfilesystem:TagResource\",\"Condition\":{\"StringLike\":{\"aws:RequestTag/efs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":\"elasticfilesystem:DeleteAccessPoint\",\"Condition\":{\"StringEquals\":{\"aws:ResourceTag/efs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
                                "policy_id": "foobar",
                                "tags": {},
                                "tags_all": {}
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.efs_csi_irsa_role.aws_iam_role.this[0]",
                            "mode": "managed",
                            "type": "aws_iam_role",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "arn": "arn:aws:iam::123456789012:role/efs-csi",
                                "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"foobar:aud\":\"sts.amazonaws.com\",\"foobar:sub\":[\"system:serviceaccount:kube-system:efs-csi-controller-sa\",\"system:serviceaccount:kube-system:efs-csi-node-sa\"]}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::123456789012:oidc-provider/foobar\"}}],\"Version\":\"2012-10-17\"}",
                                "create_date": "2023-03-17T13:43:01Z",
                                "description": "",
                                "force_detach_policies": true,
                                "id": "efs-csi",
                                "inline_policy": [],
                                "managed_policy_arns": [
                                    "arn:aws:iam::123456789012:policy/AmazonEKS_EFS_CSI_Policy-20230317134301609600000001"
                                ],
                                "max_session_duration": 3600,
                                "name": "efs-csi",
                                "name_prefix": "",
                                "path": "/",
                                "permissions_boundary": null,
                                "tags": {},
                                "tags_all": {},
                                "unique_id": "AROA5X4M7MOYP6QYXIIVP"
                            },
                            "sensitive_values": {
                                "inline_policy": [],
                                "managed_policy_arns": [
                                    false
                                ],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.efs_csi_irsa_role.aws_iam_role_policy_attachment.efs_csi[0]",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "efs_csi",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "id": "efs-csi-20230317134302181300000003",
                                "policy_arn": "arn:aws:iam::123456789012:policy/AmazonEKS_EFS_CSI_Policy-20230317134301609600000001",
                                "role": "efs-csi"
                            },
                            "sensitive_values": {}
                        }
                    ],
                    "address": "module.efs_csi_irsa_role"
                },
                {
                    "resources": [
                        {
                            "address": "module.eks_elb_controller.aws_iam_policy.lb_controller[0]",
                            "mode": "managed",
                            "type": "aws_iam_policy",
                            "name": "lb_controller",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "arn": "arn:aws:iam::123456789012:policy/test-alb-ingress",
                                "description": "Policy for alb-ingress service",
                                "id": "arn:aws:iam::123456789012:policy/test-alb-ingress",
                                "name": "test-alb-ingress",
                                "name_prefix": "",
                                "path": "/",
                                "policy_id": "ANPA5X4M7MOYCYTEF5VUE",
                                "tags": {},
                                "tags_all": {}
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.eks_elb_controller.aws_iam_role.lb_controller[0]",
                            "mode": "managed",
                            "type": "aws_iam_role",
                            "name": "lb_controller",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "arn": "arn:aws:iam::123456789012:role/test-alb-ingress",
                                "create_date": "2023-06-16T14:41:17Z",
                                "description": "",
                                "force_detach_policies": false,
                                "id": "test-alb-ingress",
                                "inline_policy": [],
                                "managed_policy_arns": [
                                    "arn:aws:iam::123456789012:policy/test-alb-ingress"
                                ],
                                "max_session_duration": 3600,
                                "name": "test-alb-ingress",
                                "name_prefix": "",
                                "path": "/",
                                "permissions_boundary": null,
                                "tags": {},
                                "tags_all": {},
                                "unique_id": "AROA5X4M7MOYDU5GZ7DFT"
                            },
                            "sensitive_values": {
                                "inline_policy": [],
                                "managed_policy_arns": [
                                    false
                                ],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.eks_elb_controller.aws_iam_role_policy_attachment.lb_controller[0]",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "lb_controller",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "id": "test-alb-ingress-20230616144117244100000001",
                                "policy_arn": "arn:aws:iam::123456789012:policy/test-alb-ingress",
                                "role": "test-alb-ingress"
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.eks_elb_controller.data.aws_iam_policy_document.lb_controller[0]",
                            "mode": "data",
                            "type": "aws_iam_policy_document",
                            "name": "lb_controller",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "override_policy_documents": null,
                                "policy_id": null,
                                "source_policy_documents": null,
                                "statement": [
                                    {
                                        "actions": [
                                            "iam:CreateServiceLinkedRole"
                                        ],
                                        "condition": [
                                            {
                                                "test": "StringEquals",
                                                "values": [
                                                    "elasticloadbalancing.amazonaws.com"
                                                ],
                                                "variable": "iam:AWSServiceName"
                                            }
                                        ],
                                        "effect": "Allow",
                                        "not_actions": null,
                                        "not_principals": [],
                                        "not_resources": null,
                                        "principals": [],
                                        "resources": [
                                            "*"
                                        ],
                                        "sid": null
                                    },
                                    {
                                        "actions": [
                                            "ec2:DescribeAccountAttributes",
                                            "ec2:DescribeAddresses",
                                            "ec2:DescribeAvailabilityZones",
                                            "ec2:DescribeCoipPools",
                                            "ec2:DescribeInstances",
                                            "ec2:DescribeInternetGateways",
                                            "ec2:DescribeNetworkInterfaces",
                                            "ec2:DescribeSecurityGroups",
                                            "ec2:DescribeSubnets",
                                            "ec2:DescribeTags",
                                            "ec2:DescribeVpcPeeringConnections",
                                            "ec2:DescribeVpcs",
                                            "ec2:GetCoipPoolUsage",
                                            "elasticloadbalancing:DescribeListenerCertificates",
                                            "elasticloadbalancing:DescribeListeners",
                                            "elasticloadbalancing:DescribeLoadBalancerAttributes",
                                            "elasticloadbalancing:DescribeLoadBalancers",
                                            "elasticloadbalancing:DescribeRules",
                                            "elasticloadbalancing:DescribeSSLPolicies",
                                            "elasticloadbalancing:DescribeTags",
                                            "elasticloadbalancing:DescribeTargetGroupAttributes",
                                            "elasticloadbalancing:DescribeTargetGroups",
                                            "elasticloadbalancing:DescribeTargetHealth"
                                        ],
                                        "condition": [],
                                        "effect": "Allow",
                                        "not_actions": null,
                                        "not_principals": [],
                                        "not_resources": null,
                                        "principals": [],
                                        "resources": [
                                            "*"
                                        ],
                                        "sid": null
                                    },
                                    {
                                        "actions": [
                                            "acm:DescribeCertificate",
                                            "acm:ListCertificates",
                                            "cognito-idp:DescribeUserPoolClient",
                                            "iam:GetServerCertificate",
                                            "iam:ListServerCertificates",
                                            "shield:CreateProtection",
                                            "shield:DeleteProtection",
                                            "shield:DescribeProtection",
                                            "shield:GetSubscriptionState",
                                            "waf-regional:AssociateWebACL",
                                            "waf-regional:DisassociateWebACL",
                                            "waf-regional:GetWebACL",
                                            "waf-regional:GetWebACLForResource",
                                            "wafv2:AssociateWebACL",
                                            "wafv2:DisassociateWebACL",
                                            "wafv2:GetWebACL",
                                            "wafv2:GetWebACLForResource"
                                        ],
                                        "condition": [],
                                        "effect": "Allow",
                                        "not_actions": null,
                                        "not_principals": [],
                                        "not_resources": null,
                                        "principals": [],
                                        "resources": [
                                            "*"
                                        ],
                                        "sid": null
                                    },
                                    {
                                        "actions": [
                                            "ec2:AuthorizeSecurityGroupIngress",
                                            "ec2:RevokeSecurityGroupIngress"
                                        ],
                                        "condition": [],
                                        "effect": "Allow",
                                        "not_actions": null,
                                        "not_principals": [],
                                        "not_resources": null,
                                        "principals": [],
                                        "resources": [
                                            "*"
                                        ],
                                        "sid": null
                                    },
                                    {
                                        "actions": [
                                            "ec2:CreateSecurityGroup"
                                        ],
                                        "condition": [],
                                        "effect": "Allow",
                                        "not_actions": null,
                                        "not_principals": [],
                                        "not_resources": null,
                                        "principals": [],
                                        "resources": [
                                            "*"
                                        ],
                                        "sid": null
                                    },
                                    {
                                        "actions": [
                                            "ec2:CreateTags"
                                        ],
                                        "condition": [
                                            {
                                                "test": "Null",
                                                "values": [
                                                    "false"
                                                ],
                                                "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                                            },
                                            {
                                                "test": "StringEquals",
                                                "values": [
                                                    "CreateSecurityGroup"
                                                ],
                                                "variable": "ec2:CreateAction"
                                            }
                                        ],
                                        "effect": "Allow",
                                        "not_actions": null,
                                        "not_principals": [],
                                        "not_resources": null,
                                        "principals": [],
                                        "resources": [
                                            "arn:aws:ec2:*:*:security-group/*"
                                        ],
                                        "sid": null
                                    },
                                    {
                                        "actions": [
                                            "ec2:CreateTags",
                                            "ec2:DeleteTags"
                                        ],
                                        "condition": [
                                            {
                                                "test": "Null",
                                                "values": [
                                                    "false"
                                                ],
                                                "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                                            },
                                            {
                                                "test": "Null",
                                                "values": [
                                                    "true"
                                                ],
                                                "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                                            }
                                        ],
                                        "effect": "Allow",
                                        "not_actions": null,
                                        "not_principals": [],
                                        "not_resources": null,
                                        "principals": [],
                                        "resources": [
                                            "arn:aws:ec2:*:*:security-group/*"
                                        ],
                                        "sid": null
                                    },
                                    {
                                        "actions": [
                                            "ec2:AuthorizeSecurityGroupIngress",
                                            "ec2:DeleteSecurityGroup",
                                            "ec2:RevokeSecurityGroupIngress"
                                        ],
                                        "condition": [
                                            {
                                                "test": "Null",
                                                "values": [
                                                    "false"
                                                ],
                                                "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                                            }
                                        ],
                                        "effect": "Allow",
                                        "not_actions": null,
                                        "not_principals": [],
                                        "not_resources": null,
                                        "principals": [],
                                        "resources": [
                                            "*"
                                        ],
                                        "sid": null
                                    },
                                    {
                                        "actions": [
                                            "elasticloadbalancing:CreateLoadBalancer",
                                            "elasticloadbalancing:CreateTargetGroup"
                                        ],
                                        "condition": [
                                            {
                                                "test": "Null",
                                                "values": [
                                                    "false"
                                                ],
                                                "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                                            }
                                        ],
                                        "effect": "Allow",
                                        "not_actions": null,
                                        "not_principals": [],
                                        "not_resources": null,
                                        "principals": [],
                                        "resources": [
                                            "*"
                                        ],
                                        "sid": null
                                    },
                                    {
                                        "actions": [
                                            "elasticloadbalancing:CreateListener",
                                            "elasticloadbalancing:CreateRule",
                                            "elasticloadbalancing:DeleteListener",
                                            "elasticloadbalancing:DeleteRule"
                                        ],
                                        "condition": [],
                                        "effect": "Allow",
                                        "not_actions": null,
                                        "not_principals": [],
                                        "not_resources": null,
                                        "principals": [],
                                        "resources": [
                                            "*"
                                        ],
                                        "sid": null
                                    },
                                    {
                                        "actions": [
                                            "elasticloadbalancing:AddTags",
                                            "elasticloadbalancing:RemoveTags"
                                        ],
                                        "condition": [
                                            {
                                                "test": "Null",
                                                "values": [
                                                    "false"
                                                ],
                                                "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                                            },
                                            {
                                                "test": "Null",
                                                "values": [
                                                    "true"
                                                ],
                                                "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                                            }
                                        ],
                                        "effect": "Allow",
                                        "not_actions": null,
                                        "not_principals": [],
                                        "not_resources": null,
                                        "principals": [],
                                        "resources": [
                                            "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                                            "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                                            "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                                        ],
                                        "sid": null
                                    },
                                    {
                                        "actions": [
                                            "elasticloadbalancing:AddTags",
                                            "elasticloadbalancing:RemoveTags"
                                        ],
                                        "condition": [],
                                        "effect": "Allow",
                                        "not_actions": null,
                                        "not_principals": [],
                                        "not_resources": null,
                                        "principals": [],
                                        "resources": [
                                            "arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*",
                                            "arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*",
                                            "arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
                                            "arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*"
                                        ],
                                        "sid": null
                                    },
                                    {
                                        "actions": [
                                            "elasticloadbalancing:DeleteLoadBalancer",
                                            "elasticloadbalancing:DeleteTargetGroup",
                                            "elasticloadbalancing:ModifyLoadBalancerAttributes",
                                            "elasticloadbalancing:ModifyTargetGroup",
                                            "elasticloadbalancing:ModifyTargetGroupAttributes",
                                            "elasticloadbalancing:SetIpAddressType",
                                            "elasticloadbalancing:SetSecurityGroups",
                                            "elasticloadbalancing:SetSubnets"
                                        ],
                                        "condition": [
                                            {
                                                "test": "Null",
                                                "values": [
                                                    "false"
                                                ],
                                                "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                                            }
                                        ],
                                        "effect": "Allow",
                                        "not_actions": null,
                                        "not_principals": [],
                                        "not_resources": null,
                                        "principals": [],
                                        "resources": [
                                            "*"
                                        ],
                                        "sid": null
                                    },
                                    {
                                        "actions": [
                                            "elasticloadbalancing:DeregisterTargets",
                                            "elasticloadbalancing:RegisterTargets"
                                        ],
                                        "condition": [],
                                        "effect": "Allow",
                                        "not_actions": null,
                                        "not_principals": [],
                                        "not_resources": null,
                                        "principals": [],
                                        "resources": [
                                            "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                                        ],
                                        "sid": null
                                    },
                                    {
                                        "actions": [
                                            "elasticloadbalancing:AddListenerCertificates",
                                            "elasticloadbalancing:ModifyListener",
                                            "elasticloadbalancing:ModifyRule",
                                            "elasticloadbalancing:RemoveListenerCertificates",
                                            "elasticloadbalancing:SetWebAcl"
                                        ],
                                        "condition": [],
                                        "effect": "Allow",
                                        "not_actions": null,
                                        "not_principals": [],
                                        "not_resources": null,
                                        "principals": [],
                                        "resources": [
                                            "*"
                                        ],
                                        "sid": null
                                    }
                                ],
                                "version": null
                            },
                            "sensitive_values": {
                                "statement": [
                                    {
                                        "actions": [
                                            false
                                        ],
                                        "condition": [
                                            {
                                                "values": [
                                                    false
                                                ]
                                            }
                                        ],
                                        "not_principals": [],
                                        "principals": [],
                                        "resources": [
                                            false
                                        ]
                                    },
                                    {
                                        "actions": [
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false
                                        ],
                                        "condition": [],
                                        "not_principals": [],
                                        "principals": [],
                                        "resources": [
                                            false
                                        ]
                                    },
                                    {
                                        "actions": [
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false
                                        ],
                                        "condition": [],
                                        "not_principals": [],
                                        "principals": [],
                                        "resources": [
                                            false
                                        ]
                                    },
                                    {
                                        "actions": [
                                            false,
                                            false
                                        ],
                                        "condition": [],
                                        "not_principals": [],
                                        "principals": [],
                                        "resources": [
                                            false
                                        ]
                                    },
                                    {
                                        "actions": [
                                            false
                                        ],
                                        "condition": [],
                                        "not_principals": [],
                                        "principals": [],
                                        "resources": [
                                            false
                                        ]
                                    },
                                    {
                                        "actions": [
                                            false
                                        ],
                                        "condition": [
                                            {
                                                "values": [
                                                    false
                                                ]
                                            },
                                            {
                                                "values": [
                                                    false
                                                ]
                                            }
                                        ],
                                        "not_principals": [],
                                        "principals": [],
                                        "resources": [
                                            false
                                        ]
                                    },
                                    {
                                        "actions": [
                                            false,
                                            false
                                        ],
                                        "condition": [
                                            {
                                                "values": [
                                                    false
                                                ]
                                            },
                                            {
                                                "values": [
                                                    false
                                                ]
                                            }
                                        ],
                                        "not_principals": [],
                                        "principals": [],
                                        "resources": [
                                            false
                                        ]
                                    },
                                    {
                                        "actions": [
                                            false,
                                            false,
                                            false
                                        ],
                                        "condition": [
                                            {
                                                "values": [
                                                    false
                                                ]
                                            }
                                        ],
                                        "not_principals": [],
                                        "principals": [],
                                        "resources": [
                                            false
                                        ]
                                    },
                                    {
                                        "actions": [
                                            false,
                                            false
                                        ],
                                        "condition": [
                                            {
                                                "values": [
                                                    false
                                                ]
                                            }
                                        ],
                                        "not_principals": [],
                                        "principals": [],
                                        "resources": [
                                            false
                                        ]
                                    },
                                    {
                                        "actions": [
                                            false,
                                            false,
                                            false,
                                            false
                                        ],
                                        "condition": [],
                                        "not_principals": [],
                                        "principals": [],
                                        "resources": [
                                            false
                                        ]
                                    },
                                    {
                                        "actions": [
                                            false,
                                            false
                                        ],
                                        "condition": [
                                            {
                                                "values": [
                                                    false
                                                ]
                                            },
                                            {
                                                "values": [
                                                    false
                                                ]
                                            }
                                        ],
                                        "not_principals": [],
                                        "principals": [],
                                        "resources": [
                                            false,
                                            false,
                                            false
                                        ]
                                    },
                                    {
                                        "actions": [
                                            false,
                                            false
                                        ],
                                        "condition": [],
                                        "not_principals": [],
                                        "principals": [],
                                        "resources": [
                                            false,
                                            false,
                                            false,
                                            false
                                        ]
                                    },
                                    {
                                        "actions": [
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false,
                                            false
                                        ],
                                        "condition": [
                                            {
                                                "values": [
                                                    false
                                                ]
                                            }
                                        ],
                                        "not_principals": [],
                                        "principals": [],
                                        "resources": [
                                            false
                                        ]
                                    },
                                    {
                                        "actions": [
                                            false,
                                            false
                                        ],
                                        "condition": [],
                                        "not_principals": [],
                                        "principals": [],
                                        "resources": [
                                            false
                                        ]
                                    },
                                    {
                                        "actions": [
                                            false,
                                            false,
                                            false,
                                            false,
                                            false
                                        ],
                                        "condition": [],
                                        "not_principals": [],
                                        "principals": [],
                                        "resources": [
                                            false
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "address": "module.eks_elb_controller.data.aws_iam_policy_document.lb_controller_assume[0]",
                            "mode": "data",
                            "type": "aws_iam_policy_document",
                            "name": "lb_controller_assume",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "override_policy_documents": null,
                                "policy_id": null,
                                "source_policy_documents": null,
                                "statement": [
                                    {
                                        "actions": [
                                            "sts:AssumeRoleWithWebIdentity"
                                        ],
                                        "condition": [
                                            {
                                                "test": "StringEquals",
                                                "values": [
                                                    "system:serviceaccount:kube-system:aws-alb-ingress-controller"
                                                ],
                                                "variable": "foobar:sub"
                                            }
                                        ],
                                        "effect": "Allow",
                                        "not_actions": null,
                                        "not_principals": [],
                                        "not_resources": null,
                                        "principals": [
                                            {
                                                "identifiers": [
                                                    "arn:aws:iam::123456789012:oidc-provider/foobar"
                                                ],
                                                "type": "Federated"
                                            }
                                        ],
                                        "resources": null,
                                        "sid": null
                                    }
                                ],
                                "version": null
                            },
                            "sensitive_values": {
                                "statement": [
                                    {
                                        "actions": [
                                            false
                                        ],
                                        "condition": [
                                            {
                                                "values": [
                                                    false
                                                ]
                                            }
                                        ],
                                        "not_principals": [],
                                        "principals": [
                                            {
                                                "identifiers": [
                                                    false
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "address": "module.eks_elb_controller.helm_release.lb_controller[0]",
                            "mode": "managed",
                            "type": "helm_release",
                            "name": "lb_controller",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/helm",
                            "schema_version": 1,
                            "values": {
                                "atomic": false,
                                "chart": "aws-load-balancer-controller",
                                "cleanup_on_fail": false,
                                "create_namespace": false,
                                "dependency_update": false,
                                "description": null,
                                "devel": null,
                                "disable_crd_hooks": false,
                                "disable_openapi_validation": false,
                                "disable_webhooks": false,
                                "force_update": false,
                                "id": "aws-load-balancer-controller",
                                "keyring": null,
                                "lint": false,
                                "manifest": null,
                                "max_history": 0,
                                "metadata": [
                                    {
                                        "app_version": "v2.4.3",
                                        "chart": "aws-load-balancer-controller",
                                        "name": "aws-load-balancer-controller",
                                        "namespace": "kube-system",
                                        "revision": 1,
                                        "values": "{\"clusterName\":\"test\",\"rbac\":{\"create\":true},\"serviceAccount\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::123456789012:role/test-alb-ingress\"},\"create\":true,\"name\":\"aws-alb-ingress-controller\"}}",
                                        "version": "1.4.4"
                                    }
                                ],
                                "name": "aws-load-balancer-controller",
                                "namespace": "kube-system",
                                "pass_credentials": false,
                                "postrender": [],
                                "recreate_pods": false,
                                "render_subchart_notes": true,
                                "replace": false,
                                "repository": "https://aws.github.io/eks-charts",
                                "repository_ca_file": null,
                                "repository_cert_file": null,
                                "repository_key_file": null,
                                "repository_password": null,
                                "repository_username": null,
                                "reset_values": false,
                                "reuse_values": false,
                                "set": [
                                    {
                                        "name": "clusterName",
                                        "type": "",
                                        "value": "test"
                                    },
                                    {
                                        "name": "rbac.create",
                                        "type": "",
                                        "value": "true"
                                    },
                                    {
                                        "name": "serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn",
                                        "type": "",
                                        "value": "arn:aws:iam::123456789012:role/test-alb-ingress"
                                    },
                                    {
                                        "name": "serviceAccount.create",
                                        "type": "",
                                        "value": "true"
                                    },
                                    {
                                        "name": "serviceAccount.name",
                                        "type": "",
                                        "value": "aws-alb-ingress-controller"
                                    }
                                ],
                                "set_list": [],
                                "set_sensitive": [],
                                "skip_crds": false,
                                "status": "deployed",
                                "timeout": 300,
                                "values": [
                                    "{}\n"
                                ],
                                "verify": false,
                                "version": "1.4.4",
                                "wait": true,
                                "wait_for_jobs": false
                            },
                            "sensitive_values": {
                                "metadata": [
                                    {}
                                ],
                                "postrender": [],
                                "set": [
                                    {},
                                    {},
                                    {},
                                    {},
                                    {}
                                ],
                                "set_list": [],
                                "set_sensitive": [],
                                "values": [
                                    false
                                ]
                            }
                        }
                    ],
                    "address": "module.eks_elb_controller"
                }
            ]
        },
        "outputs": {
            "overmind_mappings": {
                "sensitive": false,
                "type": [
                    "object",
                    {
                        "kubernetes": [
                            "object",
                            {
                                "cluster_name": "string"
                            }
                        ]
                    }
                ],
                "value": {
                    "kubernetes": {
                        "cluster_name": "dogfood"
                    }
                }
            },
            "test_secret": {
                "sensitive": true,
                "type": "string",
                "value": "test_secret"
            }
        }
    },
    "resource_changes": [
        {
            "address": "module.infra.aws_route53_record.frontend_on_vercel[0]",
            "module_address": "module.infra",
            "mode": "managed",
            "type": "aws_route53_record",
            "name": "frontend_on_vercel",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "delete"
                ],
                "before": {
                    "alias": [],
                    "allow_overwrite": null,
                    "cidr_routing_policy": [],
                    "failover_routing_policy": [],
                    "fqdn": "app.overmind.tech",
                    "geolocation_routing_policy": [],
                    "geoproximity_routing_policy": [],
                    "health_check_id": "",
                    "id": "BLAH_app.overmind.tech_A",
                    "latency_routing_policy": [],
                    "multivalue_answer_routing_policy": false,
                    "name": "app.overmind.tech",
                    "records": [
                        "76.76.21.21"
                    ],
                    "set_identifier": "",
                    "ttl": 300,
                    "type": "A",
                    "weighted_routing_policy": [],
                    "zone_id": "BLAH"
                },
                "after": null,
                "after_unknown": {},
                "before_sensitive": {
                    "alias": [],
                    "cidr_routing_policy": [],
                    "failover_routing_policy": [],
                    "geolocation_routing_policy": [],
                    "geoproximity_routing_policy": [],
                    "latency_routing_policy": [],
                    "records": [
                        false
                    ],
                    "weighted_routing_policy": []
                },
                "after_sensitive": false
            },
            "action_reason": "delete_because_count_index"
        },
        {
            "address": "module.core.kubernetes_secret.apiserver-secrets",
            "module_address": "module.core",
            "mode": "managed",
            "type": "kubernetes_secret",
            "name": "apiserver-secrets",
            "provider_name": "registry.terraform.io/hashicorp/kubernetes",
            "change": {
                "actions": [
                    "update"
                ],
                "before": {
                    "binary_data": null,
                    "data": {},
                    "id": "default/apiserver-secrets",
                    "immutable": false,
                    "metadata": [
                        {
                            "annotations": {},
                            "generate_name": "",
                            "generation": 0,
                            "labels": {},
                            "name": "apiserver-secrets",
                            "namespace": "default",
                            "resource_version": "67487020",
                            "uid": "FOO"
                        }
                    ],
                    "timeouts": null,
                    "type": "Opaque",
                    "wait_for_service_account_token": true
                },
                "after": {
                    "binary_data": null,
                    "id": "default/apiserver-secrets",
                    "immutable": false,
                    "metadata": [
                        {
                            "annotations": {},
                            "generate_name": "",
                            "generation": 0,
                            "labels": {},
                            "name": "apiserver-secrets",
                            "namespace": "default",
                            "resource_version": "67487020",
                            "uid": "FOO"
                        }
                    ],
                    "timeouts": null,
                    "type": "Opaque",
                    "wait_for_service_account_token": true
                },
                "after_unknown": {
                    "data": true,
                    "metadata": [
                        {
                            "annotations": {},
                            "labels": {}
                        }
                    ]
                },
                "before_sensitive": {
                    "binary_data": true,
                    "data": true,
                    "metadata": [
                        {
                            "annotations": {},
                            "labels": {}
                        }
                    ]
                },
                "after_sensitive": {
                    "binary_data": true,
                    "data": true,
                    "metadata": [
                        {
                            "annotations": {},
                            "labels": {}
                        }
                    ]
                }
            }
        },
        {
            "address": "kubernetes_deployment.nats_box",
            "mode": "managed",
            "type": "kubernetes_deployment",
            "name": "nats_box",
            "provider_name": "registry.terraform.io/hashicorp/kubernetes",
            "change": {
                "actions": [
                    "delete"
                ],
                "before": {
                    "id": "default/nats-box",
                    "metadata": [
                        {
                            "annotations": {},
                            "generate_name": "",
                            "generation": 9,
                            "labels": {
                                "app": "nats-box"
                            },
                            "name": "nats-box",
                            "namespace": "default",
                            "resource_version": "20425079",
                            "uid": "25e4fce6-06a8-435b-90f3-ad0c1d8b52f1"
                        }
                    ],
                    "spec": [
                        {
                            "min_ready_seconds": 0,
                            "paused": false,
                            "progress_deadline_seconds": 600,
                            "replicas": "0",
                            "revision_history_limit": 10,
                            "selector": [
                                {
                                    "match_expressions": [],
                                    "match_labels": {
                                        "app": "nats-box"
                                    }
                                }
                            ],
                            "strategy": [
                                {
                                    "rolling_update": [
                                        {
                                            "max_surge": "25%",
                                            "max_unavailable": "25%"
                                        }
                                    ],
                                    "type": "RollingUpdate"
                                }
                            ],
                            "template": [
                                {
                                    "metadata": [
                                        {
                                            "annotations": {},
                                            "generate_name": "",
                                            "generation": 0,
                                            "labels": {
                                                "app": "nats-box"
                                            },
                                            "name": "",
                                            "namespace": "",
                                            "resource_version": "",
                                            "uid": ""
                                        }
                                    ],
                                    "spec": [
                                        {
                                            "active_deadline_seconds": 0,
                                            "affinity": [],
                                            "automount_service_account_token": true,
                                            "container": [
                                                {
                                                    "args": [],
                                                    "command": [
                                                        "tail",
                                                        "-f",
                                                        "/dev/null"
                                                    ],
                                                    "env": [],
                                                    "env_from": [],
                                                    "image": "natsio/nats-box:latest",
                                                    "image_pull_policy": "Always",
                                                    "lifecycle": [],
                                                    "liveness_probe": [],
                                                    "name": "nats",
                                                    "port": [],
                                                    "readiness_probe": [],
                                                    "resources": [
                                                        {
                                                            "limits": {},
                                                            "requests": {}
                                                        }
                                                    ],
                                                    "security_context": [],
                                                    "startup_probe": [],
                                                    "stdin": false,
                                                    "stdin_once": false,
                                                    "termination_message_path": "/dev/termination-log",
                                                    "termination_message_policy": "File",
                                                    "tty": false,
                                                    "volume_mount": [
                                                        {
                                                            "mount_path": "/etc/nats",
                                                            "mount_propagation": "None",
                                                            "name": "nats-config",
                                                            "read_only": false,
                                                            "sub_path": ""
                                                        },
                                                        {
                                                            "mount_path": "/etc/nats-nkeys",
                                                            "mount_propagation": "None",
                                                            "name": "nats-nkeys",
                                                            "read_only": false,
                                                            "sub_path": ""
                                                        }
                                                    ],
                                                    "working_dir": ""
                                                }
                                            ],
                                            "dns_config": [],
                                            "dns_policy": "ClusterFirst",
                                            "enable_service_links": true,
                                            "host_aliases": [],
                                            "host_ipc": false,
                                            "host_network": false,
                                            "host_pid": false,
                                            "hostname": "",
                                            "image_pull_secrets": [],
                                            "init_container": [],
                                            "node_name": "",
                                            "node_selector": {},
                                            "priority_class_name": "",
                                            "readiness_gate": [],
                                            "restart_policy": "Always",
                                            "runtime_class_name": "",
                                            "scheduler_name": "default-scheduler",
                                            "security_context": [],
                                            "service_account_name": "",
                                            "share_process_namespace": false,
                                            "subdomain": "",
                                            "termination_grace_period_seconds": 30,
                                            "toleration": [],
                                            "topology_spread_constraint": [],
                                            "volume": [
                                                {
                                                    "aws_elastic_block_store": [],
                                                    "azure_disk": [],
                                                    "azure_file": [],
                                                    "ceph_fs": [],
                                                    "cinder": [],
                                                    "config_map": [],
                                                    "csi": [],
                                                    "downward_api": [],
                                                    "empty_dir": [],
                                                    "fc": [],
                                                    "flex_volume": [],
                                                    "flocker": [],
                                                    "gce_persistent_disk": [],
                                                    "git_repo": [],
                                                    "glusterfs": [],
                                                    "host_path": [],
                                                    "iscsi": [],
                                                    "local": [],
                                                    "name": "nats-nkeys",
                                                    "nfs": [],
                                                    "persistent_volume_claim": [
                                                        {
                                                            "claim_name": "nats-nkeys",
                                                            "read_only": false
                                                        }
                                                    ],
                                                    "photon_persistent_disk": [],
                                                    "projected": [],
                                                    "quobyte": [],
                                                    "rbd": [],
                                                    "secret": [],
                                                    "vsphere_volume": []
                                                },
                                                {
                                                    "aws_elastic_block_store": [],
                                                    "azure_disk": [],
                                                    "azure_file": [],
                                                    "ceph_fs": [],
                                                    "cinder": [],
                                                    "config_map": [],
                                                    "csi": [],
                                                    "downward_api": [],
                                                    "empty_dir": [],
                                                    "fc": [],
                                                    "flex_volume": [],
                                                    "flocker": [],
                                                    "gce_persistent_disk": [],
                                                    "git_repo": [],
                                                    "glusterfs": [],
                                                    "host_path": [],
                                                    "iscsi": [],
                                                    "local": [],
                                                    "name": "nats-config",
                                                    "nfs": [],
                                                    "persistent_volume_claim": [
                                                        {
                                                            "claim_name": "nats-config",
                                                            "read_only": false
                                                        }
                                                    ],
                                                    "photon_persistent_disk": [],
                                                    "projected": [],
                                                    "quobyte": [],
                                                    "rbd": [],
                                                    "secret": [],
                                                    "vsphere_volume": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "timeouts": {
                        "create": "2m",
                        "delete": "2m",
                        "update": "2m"
                    },
                    "wait_for_rollout": true
                },
                "after": null,
                "after_unknown": {},
                "before_sensitive": {
                    "metadata": [
                        {
                            "annotations": {},
                            "labels": {}
                        }
                    ],
                    "spec": [
                        {
                            "selector": [
                                {
                                    "match_expressions": [],
                                    "match_labels": {}
                                }
                            ],
                            "strategy": [
                                {
                                    "rolling_update": [
                                        {}
                                    ]
                                }
                            ],
                            "template": [
                                {
                                    "metadata": [
                                        {
                                            "annotations": {},
                                            "labels": {}
                                        }
                                    ],
                                    "spec": [
                                        {
                                            "affinity": [],
                                            "container": [
                                                {
                                                    "args": [],
                                                    "command": [
                                                        false,
                                                        false,
                                                        false
                                                    ],
                                                    "env": [],
                                                    "env_from": [],
                                                    "lifecycle": [],
                                                    "liveness_probe": [],
                                                    "port": [],
                                                    "readiness_probe": [],
                                                    "resources": [
                                                        {
                                                            "limits": {},
                                                            "requests": {}
                                                        }
                                                    ],
                                                    "security_context": [],
                                                    "startup_probe": [],
                                                    "volume_mount": [
                                                        {},
                                                        {}
                                                    ]
                                                }
                                            ],
                                            "dns_config": [],
                                            "host_aliases": [],
                                            "image_pull_secrets": [],
                                            "init_container": [],
                                            "node_selector": {},
                                            "readiness_gate": [],
                                            "security_context": [],
                                            "toleration": [],
                                            "topology_spread_constraint": [],
                                            "volume": [
                                                {
                                                    "aws_elastic_block_store": [],
                                                    "azure_disk": [],
                                                    "azure_file": [],
                                                    "ceph_fs": [],
                                                    "cinder": [],
                                                    "config_map": [],
                                                    "csi": [],
                                                    "downward_api": [],
                                                    "empty_dir": [],
                                                    "fc": [],
                                                    "flex_volume": [],
                                                    "flocker": [],
                                                    "gce_persistent_disk": [],
                                                    "git_repo": [],
                                                    "glusterfs": [],
                                                    "host_path": [],
                                                    "iscsi": [],
                                                    "local": [],
                                                    "nfs": [],
                                                    "persistent_volume_claim": [
                                                        {}
                                                    ],
                                                    "photon_persistent_disk": [],
                                                    "projected": [],
                                                    "quobyte": [],
                                                    "rbd": [],
                                                    "secret": [],
                                                    "vsphere_volume": []
                                                },
                                                {
                                                    "aws_elastic_block_store": [],
                                                    "azure_disk": [],
                                                    "azure_file": [],
                                                    "ceph_fs": [],
                                                    "cinder": [],
                                                    "config_map": [],
                                                    "csi": [],
                                                    "downward_api": [],
                                                    "empty_dir": [],
                                                    "fc": [],
                                                    "flex_volume": [],
                                                    "flocker": [],
                                                    "gce_persistent_disk": [],
                                                    "git_repo": [],
                                                    "glusterfs": [],
                                                    "host_path": [],
                                                    "iscsi": [],
                                                    "local": [],
                                                    "nfs": [],
                                                    "persistent_volume_claim": [
                                                        {}
                                                    ],
                                                    "photon_persistent_disk": [],
                                                    "projected": [],
                                                    "quobyte": [],
                                                    "rbd": [],
                                                    "secret": [],
                                                    "vsphere_volume": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "timeouts": {}
                },
                "after_sensitive": false
            },
            "action_reason": "delete_because_no_resource_config"
        },
        {
            "address": "kubernetes_deployment.api_server",
            "mode": "managed",
            "type": "kubernetes_deployment",
            "name": "api_server",
            "provider_name": "registry.terraform.io/hashicorp/kubernetes",
            "change": {
                "actions": [
                    "update"
                ],
                "before": {
                    "id": "default/api-server",
                    "metadata": [
                        {
                            "annotations": {},
                            "generate_name": "",
                            "generation": 18,
                            "labels": {},
                            "name": "api-server",
                            "namespace": "default",
                            "resource_version": "16505436",
                            "uid": "cd11a255-2964-434a-b366-063ea673bbd2"
                        }
                    ],
                    "spec": [
                        {
                            "min_ready_seconds": 0,
                            "paused": false,
                            "progress_deadline_seconds": 600,
                            "replicas": "1",
                            "revision_history_limit": 10,
                            "selector": [
                                {
                                    "match_expressions": [],
                                    "match_labels": {
                                        "app": "api-server"
                                    }
                                }
                            ],
                            "strategy": [
                                {
                                    "rolling_update": [
                                        {
                                            "max_surge": "25%",
                                            "max_unavailable": "25%"
                                        }
                                    ],
                                    "type": "RollingUpdate"
                                }
                            ],
                            "template": [
                                {
                                    "metadata": [
                                        {
                                            "annotations": {},
                                            "generate_name": "",
                                            "generation": 0,
                                            "labels": {
                                                "app": "api-server"
                                            },
                                            "name": "",
                                            "namespace": "",
                                            "resource_version": "",
                                            "uid": ""
                                        }
                                    ],
                                    "spec": [
                                        {
                                            "active_deadline_seconds": 0,
                                            "affinity": [],
                                            "automount_service_account_token": true,
                                            "container": [
                                                {
                                                    "args": [],
                                                    "command": [],
                                                    "env": [],
                                                    "env_from": [],
                                                    "image": "ghcr.io/overmindtech/api-server@sha256:41be6bab8dc65bf19fe3771fa9cf54e51621d93161056db8091ca2ff905be24a",
                                                    "image_pull_policy": "IfNotPresent",
                                                    "lifecycle": [],
                                                    "liveness_probe": [],
                                                    "name": "api-server",
                                                    "port": [
                                                        {
                                                            "container_port": 8080,
                                                            "host_ip": "",
                                                            "host_port": 0,
                                                            "name": "",
                                                            "protocol": "TCP"
                                                        }
                                                    ],
                                                    "readiness_probe": [],
                                                    "resources": [
                                                        {
                                                            "limits": {
                                                                "memory": "2Gi"
                                                            },
                                                            "requests": {
                                                                "cpu": "250m",
                                                                "memory": "200Mi"
                                                            }
                                                        }
                                                    ],
                                                    "security_context": [],
                                                    "startup_probe": [],
                                                    "stdin": false,
                                                    "stdin_once": false,
                                                    "termination_message_path": "/dev/termination-log",
                                                    "termination_message_policy": "File",
                                                    "tty": false,
                                                    "volume_mount": [
                                                        {
                                                            "mount_path": "/nats-nkeys",
                                                            "mount_propagation": "None",
                                                            "name": "nats-nkeys",
                                                            "read_only": false,
                                                            "sub_path": ""
                                                        }
                                                    ],
                                                    "working_dir": ""
                                                }
                                            ],
                                            "dns_config": [],
                                            "dns_policy": "ClusterFirst",
                                            "enable_service_links": true,
                                            "host_aliases": [],
                                            "host_ipc": false,
                                            "host_network": false,
                                            "host_pid": false,
                                            "hostname": "",
                                            "image_pull_secrets": [
                                                {
                                                    "name": "srcman-registry-credentials"
                                                }
                                            ],
                                            "init_container": [
                                                {
                                                    "args": [],
                                                    "command": [
                                                        "/bin/mkdir",
                                                        "-p",
                                                        "/nats-nkeys/nsc"
                                                    ],
                                                    "env": [],
                                                    "env_from": [],
                                                    "image": "alpine:latest",
                                                    "image_pull_policy": "Always",
                                                    "lifecycle": [],
                                                    "liveness_probe": [],
                                                    "name": "create-folder",
                                                    "port": [],
                                                    "readiness_probe": [],
                                                    "resources": [
                                                        {
                                                            "limits": {},
                                                            "requests": {}
                                                        }
                                                    ],
                                                    "security_context": [],
                                                    "startup_probe": [],
                                                    "stdin": false,
                                                    "stdin_once": false,
                                                    "termination_message_path": "/dev/termination-log",
                                                    "termination_message_policy": "File",
                                                    "tty": false,
                                                    "volume_mount": [
                                                        {
                                                            "mount_path": "/nats-nkeys",
                                                            "mount_propagation": "None",
                                                            "name": "nats-nkeys",
                                                            "read_only": false,
                                                            "sub_path": ""
                                                        }
                                                    ],
                                                    "working_dir": ""
                                                },
                                                {
                                                    "args": [
                                                        "init",
                                                        "--nsc-location",
                                                        "/nats-nkeys/nsc",
                                                        "--nsc-operator",
                                                        "dogfood",
                                                        "--revlink-account",
                                                        "revlink"
                                                    ],
                                                    "command": [],
                                                    "env": [],
                                                    "env_from": [],
                                                    "image": "ghcr.io/overmindtech/api-server@sha256:41be6bab8dc65bf19fe3771fa9cf54e51621d93161056db8091ca2ff905be24a",
                                                    "image_pull_policy": "IfNotPresent",
                                                    "lifecycle": [],
                                                    "liveness_probe": [],
                                                    "name": "generate-nkeys",
                                                    "port": [],
                                                    "readiness_probe": [],
                                                    "resources": [
                                                        {
                                                            "limits": {},
                                                            "requests": {}
                                                        }
                                                    ],
                                                    "security_context": [],
                                                    "startup_probe": [],
                                                    "stdin": false,
                                                    "stdin_once": false,
                                                    "termination_message_path": "/dev/termination-log",
                                                    "termination_message_policy": "File",
                                                    "tty": false,
                                                    "volume_mount": [
                                                        {
                                                            "mount_path": "/nats-nkeys",
                                                            "mount_propagation": "None",
                                                            "name": "nats-nkeys",
                                                            "read_only": false,
                                                            "sub_path": ""
                                                        }
                                                    ],
                                                    "working_dir": ""
                                                }
                                            ],
                                            "node_name": "",
                                            "node_selector": {},
                                            "priority_class_name": "",
                                            "readiness_gate": [],
                                            "restart_policy": "Always",
                                            "runtime_class_name": "",
                                            "scheduler_name": "default-scheduler",
                                            "security_context": [],
                                            "service_account_name": "api-server-service-account",
                                            "share_process_namespace": false,
                                            "subdomain": "",
                                            "termination_grace_period_seconds": 30,
                                            "toleration": [],
                                            "topology_spread_constraint": [],
                                            "volume": [
                                                {
                                                    "aws_elastic_block_store": [],
                                                    "azure_disk": [],
                                                    "azure_file": [],
                                                    "ceph_fs": [],
                                                    "cinder": [],
                                                    "config_map": [],
                                                    "csi": [],
                                                    "downward_api": [],
                                                    "empty_dir": [],
                                                    "fc": [],
                                                    "flex_volume": [],
                                                    "flocker": [],
                                                    "gce_persistent_disk": [],
                                                    "git_repo": [],
                                                    "glusterfs": [],
                                                    "host_path": [],
                                                    "iscsi": [],
                                                    "local": [],
                                                    "name": "nats-nkeys",
                                                    "nfs": [],
                                                    "persistent_volume_claim": [
                                                        {
                                                            "claim_name": "nats-nkeys",
                                                            "read_only": false
                                                        }
                                                    ],
                                                    "photon_persistent_disk": [],
                                                    "projected": [],
                                                    "quobyte": [],
                                                    "rbd": [],
                                                    "secret": [],
                                                    "vsphere_volume": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "timeouts": {
                        "create": "2m",
                        "delete": "2m",
                        "update": "2m"
                    },
                    "wait_for_rollout": true
                },
                "after": {
                    "id": "default/api-server",
                    "metadata": [
                        {
                            "annotations": {},
                            "generate_name": "",
                            "generation": 18,
                            "labels": {},
                            "name": "api-server",
                            "namespace": "default",
                            "resource_version": "16505436",
                            "uid": "cd11a255-2964-434a-b366-063ea673bbd2"
                        }
                    ],
                    "spec": [
                        {
                            "min_ready_seconds": 0,
                            "paused": false,
                            "progress_deadline_seconds": 600,
                            "replicas": "1",
                            "revision_history_limit": 10,
                            "selector": [
                                {
                                    "match_expressions": [],
                                    "match_labels": {
                                        "app": "api-server"
                                    }
                                }
                            ],
                            "strategy": [
                                {
                                    "rolling_update": [
                                        {
                                            "max_surge": "25%",
                                            "max_unavailable": "25%"
                                        }
                                    ],
                                    "type": "RollingUpdate"
                                }
                            ],
                            "template": [
                                {
                                    "metadata": [
                                        {
                                            "annotations": {},
                                            "generate_name": "",
                                            "generation": 0,
                                            "labels": {
                                                "app": "api-server"
                                            },
                                            "name": "",
                                            "namespace": "",
                                            "resource_version": "",
                                            "uid": ""
                                        }
                                    ],
                                    "spec": [
                                        {
                                            "active_deadline_seconds": 0,
                                            "affinity": [],
                                            "automount_service_account_token": true,
                                            "container": [
                                                {
                                                    "args": [],
                                                    "command": [],
                                                    "env": [],
                                                    "env_from": [],
                                                    "image": "ghcr.io/overmindtech/api-server@sha256:d10d15d0bce640a7e4e505b57652d7a7e46f8092a3dbd64408de4368cda40270",
                                                    "image_pull_policy": "IfNotPresent",
                                                    "lifecycle": [],
                                                    "liveness_probe": [],
                                                    "name": "api-server",
                                                    "port": [
                                                        {
                                                            "container_port": 8080,
                                                            "host_ip": "",
                                                            "host_port": 0,
                                                            "name": "",
                                                            "protocol": "TCP"
                                                        }
                                                    ],
                                                    "readiness_probe": [],
                                                    "resources": [
                                                        {
                                                            "limits": {
                                                                "memory": "2Gi"
                                                            },
                                                            "requests": {
                                                                "cpu": "250m",
                                                                "memory": "200Mi"
                                                            }
                                                        }
                                                    ],
                                                    "security_context": [],
                                                    "startup_probe": [],
                                                    "stdin": false,
                                                    "stdin_once": false,
                                                    "termination_message_path": "/dev/termination-log",
                                                    "termination_message_policy": "File",
                                                    "tty": false,
                                                    "volume_mount": [
                                                        {
                                                            "mount_path": "/nats-nkeys",
                                                            "mount_propagation": "None",
                                                            "name": "nats-nkeys",
                                                            "read_only": false,
                                                            "sub_path": ""
                                                        }
                                                    ],
                                                    "working_dir": ""
                                                }
                                            ],
                                            "dns_config": [],
                                            "dns_policy": "ClusterFirst",
                                            "enable_service_links": true,
                                            "host_aliases": [],
                                            "host_ipc": false,
                                            "host_network": false,
                                            "host_pid": false,
                                            "hostname": "",
                                            "image_pull_secrets": [
                                                {
                                                    "name": "srcman-registry-credentials"
                                                }
                                            ],
                                            "init_container": [
                                                {
                                                    "args": [],
                                                    "command": [
                                                        "/bin/mkdir",
                                                        "-p",
                                                        "/nats-nkeys/nsc"
                                                    ],
                                                    "env": [],
                                                    "env_from": [],
                                                    "image": "alpine:latest",
                                                    "image_pull_policy": "Always",
                                                    "lifecycle": [],
                                                    "liveness_probe": [],
                                                    "name": "create-folder",
                                                    "port": [],
                                                    "readiness_probe": [],
                                                    "resources": [
                                                        {
                                                            "limits": {},
                                                            "requests": {}
                                                        }
                                                    ],
                                                    "security_context": [],
                                                    "startup_probe": [],
                                                    "stdin": false,
                                                    "stdin_once": false,
                                                    "termination_message_path": "/dev/termination-log",
                                                    "termination_message_policy": "File",
                                                    "tty": false,
                                                    "volume_mount": [
                                                        {
                                                            "mount_path": "/nats-nkeys",
                                                            "mount_propagation": "None",
                                                            "name": "nats-nkeys",
                                                            "read_only": false,
                                                            "sub_path": ""
                                                        }
                                                    ],
                                                    "working_dir": ""
                                                },
                                                {
                                                    "args": [
                                                        "init",
                                                        "--nsc-location",
                                                        "/nats-nkeys/nsc",
                                                        "--nsc-operator",
                                                        "dogfood",
                                                        "--revlink-account",
                                                        "revlink"
                                                    ],
                                                    "command": [],
                                                    "env": [],
                                                    "env_from": [],
                                                    "image": "ghcr.io/overmindtech/api-server@sha256:d10d15d0bce640a7e4e505b57652d7a7e46f8092a3dbd64408de4368cda40270",
                                                    "image_pull_policy": "IfNotPresent",
                                                    "lifecycle": [],
                                                    "liveness_probe": [],
                                                    "name": "generate-nkeys",
                                                    "port": [],
                                                    "readiness_probe": [],
                                                    "resources": [
                                                        {
                                                            "limits": {},
                                                            "requests": {}
                                                        }
                                                    ],
                                                    "security_context": [],
                                                    "startup_probe": [],
                                                    "stdin": false,
                                                    "stdin_once": false,
                                                    "termination_message_path": "/dev/termination-log",
                                                    "termination_message_policy": "File",
                                                    "tty": false,
                                                    "volume_mount": [
                                                        {
                                                            "mount_path": "/nats-nkeys",
                                                            "mount_propagation": "None",
                                                            "name": "nats-nkeys",
                                                            "read_only": false,
                                                            "sub_path": ""
                                                        }
                                                    ],
                                                    "working_dir": ""
                                                }
                                            ],
                                            "node_name": "",
                                            "node_selector": {},
                                            "priority_class_name": "",
                                            "readiness_gate": [],
                                            "restart_policy": "Always",
                                            "runtime_class_name": "",
                                            "scheduler_name": "default-scheduler",
                                            "security_context": [],
                                            "service_account_name": "api-server-service-account",
                                            "share_process_namespace": false,
                                            "subdomain": "",
                                            "termination_grace_period_seconds": 30,
                                            "toleration": [],
                                            "topology_spread_constraint": [],
                                            "volume": [
                                                {
                                                    "aws_elastic_block_store": [],
                                                    "azure_disk": [],
                                                    "azure_file": [],
                                                    "ceph_fs": [],
                                                    "cinder": [],
                                                    "config_map": [],
                                                    "csi": [],
                                                    "downward_api": [],
                                                    "empty_dir": [],
                                                    "fc": [],
                                                    "flex_volume": [],
                                                    "flocker": [],
                                                    "gce_persistent_disk": [],
                                                    "git_repo": [],
                                                    "glusterfs": [],
                                                    "host_path": [],
                                                    "iscsi": [],
                                                    "local": [],
                                                    "name": "nats-nkeys",
                                                    "nfs": [],
                                                    "persistent_volume_claim": [
                                                        {
                                                            "claim_name": "nats-nkeys",
                                                            "read_only": false
                                                        }
                                                    ],
                                                    "photon_persistent_disk": [],
                                                    "projected": [],
                                                    "quobyte": [],
                                                    "rbd": [],
                                                    "secret": [],
                                                    "vsphere_volume": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "timeouts": {
                        "create": "2m",
                        "delete": "2m",
                        "update": "2m"
                    },
                    "wait_for_rollout": true
                },
                "after_unknown": {},
                "before_sensitive": {
                    "metadata": [
                        {
                            "annotations": {},
                            "labels": {}
                        }
                    ],
                    "spec": [
                        {
                            "selector": [
                                {
                                    "match_expressions": [],
                                    "match_labels": {}
                                }
                            ],
                            "strategy": [
                                {
                                    "rolling_update": [
                                        {}
                                    ]
                                }
                            ],
                            "template": [
                                {
                                    "metadata": [
                                        {
                                            "annotations": {},
                                            "labels": {}
                                        }
                                    ],
                                    "spec": [
                                        {
                                            "affinity": [],
                                            "container": [
                                                {
                                                    "args": [],
                                                    "command": [],
                                                    "env": [
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value": true,
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value": true,
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value": true,
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": [
                                                                {
                                                                    "config_map_key_ref": [],
                                                                    "field_ref": [],
                                                                    "resource_field_ref": [],
                                                                    "secret_key_ref": [
                                                                        {}
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "value_from": [
                                                                {
                                                                    "config_map_key_ref": [],
                                                                    "field_ref": [],
                                                                    "resource_field_ref": [],
                                                                    "secret_key_ref": [
                                                                        {}
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "value_from": []
                                                        }
                                                    ],
                                                    "env_from": [],
                                                    "lifecycle": [],
                                                    "liveness_probe": [],
                                                    "port": [
                                                        {}
                                                    ],
                                                    "readiness_probe": [],
                                                    "resources": [
                                                        {
                                                            "limits": {},
                                                            "requests": {}
                                                        }
                                                    ],
                                                    "security_context": [],
                                                    "startup_probe": [],
                                                    "volume_mount": [
                                                        {}
                                                    ]
                                                }
                                            ],
                                            "dns_config": [],
                                            "host_aliases": [],
                                            "image_pull_secrets": [
                                                {}
                                            ],
                                            "init_container": [
                                                {
                                                    "args": [],
                                                    "command": [
                                                        false,
                                                        false,
                                                        false
                                                    ],
                                                    "env": [],
                                                    "env_from": [],
                                                    "lifecycle": [],
                                                    "liveness_probe": [],
                                                    "port": [],
                                                    "readiness_probe": [],
                                                    "resources": [
                                                        {
                                                            "limits": {},
                                                            "requests": {}
                                                        }
                                                    ],
                                                    "security_context": [],
                                                    "startup_probe": [],
                                                    "volume_mount": [
                                                        {}
                                                    ]
                                                },
                                                {
                                                    "args": [
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false
                                                    ],
                                                    "command": [],
                                                    "env": [],
                                                    "env_from": [],
                                                    "lifecycle": [],
                                                    "liveness_probe": [],
                                                    "port": [],
                                                    "readiness_probe": [],
                                                    "resources": [
                                                        {
                                                            "limits": {},
                                                            "requests": {}
                                                        }
                                                    ],
                                                    "security_context": [],
                                                    "startup_probe": [],
                                                    "volume_mount": [
                                                        {}
                                                    ]
                                                }
                                            ],
                                            "node_selector": {},
                                            "readiness_gate": [],
                                            "security_context": [],
                                            "toleration": [],
                                            "topology_spread_constraint": [],
                                            "volume": [
                                                {
                                                    "aws_elastic_block_store": [],
                                                    "azure_disk": [],
                                                    "azure_file": [],
                                                    "ceph_fs": [],
                                                    "cinder": [],
                                                    "config_map": [],
                                                    "csi": [],
                                                    "downward_api": [],
                                                    "empty_dir": [],
                                                    "fc": [],
                                                    "flex_volume": [],
                                                    "flocker": [],
                                                    "gce_persistent_disk": [],
                                                    "git_repo": [],
                                                    "glusterfs": [],
                                                    "host_path": [],
                                                    "iscsi": [],
                                                    "local": [],
                                                    "nfs": [],
                                                    "persistent_volume_claim": [
                                                        {}
                                                    ],
                                                    "photon_persistent_disk": [],
                                                    "projected": [],
                                                    "quobyte": [],
                                                    "rbd": [],
                                                    "secret": [],
                                                    "vsphere_volume": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "timeouts": {}
                },
                "after_sensitive": {
                    "metadata": [
                        {
                            "annotations": {},
                            "labels": {}
                        }
                    ],
                    "spec": [
                        {
                            "selector": [
                                {
                                    "match_expressions": [],
                                    "match_labels": {}
                                }
                            ],
                            "strategy": [
                                {
                                    "rolling_update": [
                                        {}
                                    ]
                                }
                            ],
                            "template": [
                                {
                                    "metadata": [
                                        {
                                            "annotations": {},
                                            "labels": {}
                                        }
                                    ],
                                    "spec": [
                                        {
                                            "affinity": [],
                                            "container": [
                                                {
                                                    "args": [],
                                                    "command": [],
                                                    "env": [
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value": true,
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value": true,
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value": true,
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": []
                                                        },
                                                        {
                                                            "value_from": [
                                                                {
                                                                    "config_map_key_ref": [],
                                                                    "field_ref": [],
                                                                    "resource_field_ref": [],
                                                                    "secret_key_ref": [
                                                                        {}
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "value_from": [
                                                                {
                                                                    "config_map_key_ref": [],
                                                                    "field_ref": [],
                                                                    "resource_field_ref": [],
                                                                    "secret_key_ref": [
                                                                        {}
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "value_from": []
                                                        }
                                                    ],
                                                    "env_from": [],
                                                    "lifecycle": [],
                                                    "liveness_probe": [],
                                                    "port": [
                                                        {}
                                                    ],
                                                    "readiness_probe": [],
                                                    "resources": [
                                                        {
                                                            "limits": {},
                                                            "requests": {}
                                                        }
                                                    ],
                                                    "security_context": [],
                                                    "startup_probe": [],
                                                    "volume_mount": [
                                                        {}
                                                    ]
                                                }
                                            ],
                                            "dns_config": [],
                                            "host_aliases": [],
                                            "image_pull_secrets": [
                                                {}
                                            ],
                                            "init_container": [
                                                {
                                                    "args": [],
                                                    "command": [
                                                        false,
                                                        false,
                                                        false
                                                    ],
                                                    "env": [],
                                                    "env_from": [],
                                                    "lifecycle": [],
                                                    "liveness_probe": [],
                                                    "port": [],
                                                    "readiness_probe": [],
                                                    "resources": [
                                                        {
                                                            "limits": {},
                                                            "requests": {}
                                                        }
                                                    ],
                                                    "security_context": [],
                                                    "startup_probe": [],
                                                    "volume_mount": [
                                                        {}
                                                    ]
                                                },
                                                {
                                                    "args": [
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false
                                                    ],
                                                    "command": [],
                                                    "env": [],
                                                    "env_from": [],
                                                    "lifecycle": [],
                                                    "liveness_probe": [],
                                                    "port": [],
                                                    "readiness_probe": [],
                                                    "resources": [
                                                        {
                                                            "limits": {},
                                                            "requests": {}
                                                        }
                                                    ],
                                                    "security_context": [],
                                                    "startup_probe": [],
                                                    "volume_mount": [
                                                        {}
                                                    ]
                                                }
                                            ],
                                            "node_selector": {},
                                            "readiness_gate": [],
                                            "security_context": [],
                                            "toleration": [],
                                            "topology_spread_constraint": [],
                                            "volume": [
                                                {
                                                    "aws_elastic_block_store": [],
                                                    "azure_disk": [],
                                                    "azure_file": [],
                                                    "ceph_fs": [],
                                                    "cinder": [],
                                                    "config_map": [],
                                                    "csi": [],
                                                    "downward_api": [],
                                                    "empty_dir": [],
                                                    "fc": [],
                                                    "flex_volume": [],
                                                    "flocker": [],
                                                    "gce_persistent_disk": [],
                                                    "git_repo": [],
                                                    "glusterfs": [],
                                                    "host_path": [],
                                                    "iscsi": [],
                                                    "local": [],
                                                    "nfs": [],
                                                    "persistent_volume_claim": [
                                                        {}
                                                    ],
                                                    "photon_persistent_disk": [],
                                                    "projected": [],
                                                    "quobyte": [],
                                                    "rbd": [],
                                                    "secret": [],
                                                    "vsphere_volume": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "timeouts": {}
                }
            }
        },
        {
            "address": "aws_iam_policy.auth0_ses_send_emails",
            "mode": "managed",
            "type": "aws_iam_policy",
            "name": "auth0_ses_send_emails",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "arn": "arn:aws:iam::123456789012:policy/auth0-ses-send-emails",
                    "description": "Allows Auth0 to send emails via SES",
                    "id": "arn:aws:iam::123456789012:policy/auth0-ses-send-emails",
                    "name": "auth0-ses-send-emails",
                    "name_prefix": "",
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"ses:SendRawEmail\",\"ses:SendEmail\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
                    "policy_id": "ANPA5X4M7MOYO7KE6G4J4",
                    "tags": {},
                    "tags_all": {}
                },
                "after": {
                    "arn": "arn:aws:iam::123456789012:policy/auth0-ses-send-emails",
                    "description": "Allows Auth0 to send emails via SES",
                    "id": "arn:aws:iam::123456789012:policy/auth0-ses-send-emails",
                    "name": "auth0-ses-send-emails",
                    "name_prefix": "",
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"ses:SendRawEmail\",\"ses:SendEmail\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
                    "policy_id": "ANPA5X4M7MOYO7KE6G4J4",
                    "tags": {},
                    "tags_all": {}
                },
                "after_unknown": {},
                "before_sensitive": {
                    "tags": {},
                    "tags_all": {}
                },
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.efs_csi_irsa_role.aws_iam_policy.efs_csi[0]",
            "module_address": "module.efs_csi_irsa_role",
            "mode": "managed",
            "type": "aws_iam_policy",
            "name": "efs_csi",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "arn": "arn:aws:iam::123456789012:policy/AmazonEKS_EFS_CSI_Policy-20230317134301609600000001",
                    "description": "Provides permissions to manage EFS volumes via the container storage interface driver",
                    "id": "arn:aws:iam::123456789012:policy/AmazonEKS_EFS_CSI_Policy-20230317134301609600000001",
                    "name": "AmazonEKS_EFS_CSI_Policy-20230317134301609600000001",
                    "name_prefix": "AmazonEKS_EFS_CSI_Policy-",
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"elasticfilesystem:DescribeMountTargets\",\"elasticfilesystem:DescribeFileSystems\",\"elasticfilesystem:DescribeAccessPoints\",\"ec2:DescribeAvailabilityZones\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":\"elasticfilesystem:CreateAccessPoint\",\"Condition\":{\"StringLike\":{\"aws:RequestTag/efs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":\"elasticfilesystem:TagResource\",\"Condition\":{\"StringLike\":{\"aws:RequestTag/efs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":\"elasticfilesystem:DeleteAccessPoint\",\"Condition\":{\"StringEquals\":{\"aws:ResourceTag/efs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
                    "policy_id": "foobar",
                    "tags": {},
                    "tags_all": {}
                },
                "after": {
                    "arn": "arn:aws:iam::123456789012:policy/AmazonEKS_EFS_CSI_Policy-20230317134301609600000001",
                    "description": "Provides permissions to manage EFS volumes via the container storage interface driver",
                    "id": "arn:aws:iam::123456789012:policy/AmazonEKS_EFS_CSI_Policy-20230317134301609600000001",
                    "name": "AmazonEKS_EFS_CSI_Policy-20230317134301609600000001",
                    "name_prefix": "AmazonEKS_EFS_CSI_Policy-",
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"elasticfilesystem:DescribeMountTargets\",\"elasticfilesystem:DescribeFileSystems\",\"elasticfilesystem:DescribeAccessPoints\",\"ec2:DescribeAvailabilityZones\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":\"elasticfilesystem:CreateAccessPoint\",\"Condition\":{\"StringLike\":{\"aws:RequestTag/efs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":\"elasticfilesystem:TagResource\",\"Condition\":{\"StringLike\":{\"aws:RequestTag/efs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":\"elasticfilesystem:DeleteAccessPoint\",\"Condition\":{\"StringEquals\":{\"aws:ResourceTag/efs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
                    "policy_id": "foobar",
                    "tags": {},
                    "tags_all": {}
                },
                "after_unknown": {},
                "before_sensitive": {
                    "tags": {},
                    "tags_all": {}
                },
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.eks.aws_iam_policy.cluster_encryption[0]",
            "module_address": "module.eks",
            "mode": "managed",
            "type": "aws_iam_policy",
            "name": "cluster_encryption",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "arn": "arn:aws:iam::123456789012:policy/test-cluster-ClusterEncryption2023061613390591120000000e",
                    "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
                    "id": "arn:aws:iam::123456789012:policy/test-cluster-ClusterEncryption2023061613390591120000000e",
                    "name": "test-cluster-ClusterEncryption2023061613390591120000000e",
                    "name_prefix": "test-cluster-ClusterEncryption",
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:eu-west-2:12345678901:key/1234567\"}],\"Version\":\"2012-10-17\"}",
                    "policy_id": "foobar",
                    "tags": {},
                    "tags_all": {}
                },
                "after": {
                    "arn": "arn:aws:iam::123456789012:policy/test-cluster-ClusterEncryption2023061613390591120000000e",
                    "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
                    "id": "arn:aws:iam::123456789012:policy/test-cluster-ClusterEncryption2023061613390591120000000e",
                    "name": "test-cluster-ClusterEncryption2023061613390591120000000e",
                    "name_prefix": "test-cluster-ClusterEncryption",
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:eu-west-2:12345678901:key/1234567\"}],\"Version\":\"2012-10-17\"}",
                    "policy_id": "foobar",
                    "tags": {},
                    "tags_all": {}
                },
                "after_unknown": {},
                "before_sensitive": {
                    "tags": {},
                    "tags_all": {}
                },
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.eks.aws_iam_policy.cni_ipv6_policy[0]",
            "module_address": "module.eks",
            "mode": "managed",
            "type": "aws_iam_policy",
            "name": "cni_ipv6_policy",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "arn": "arn:aws:iam::123456789012:policy/AmazonEKS_CNI_IPv6_Policy",
                    "description": "IAM policy for EKS CNI to assign IPV6 addresses",
                    "id": "arn:aws:iam::123456789012:policy/AmazonEKS_CNI_IPv6_Policy",
                    "name": "AmazonEKS_CNI_IPv6_Policy",
                    "name_prefix": "",
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"ec2:DescribeTags\",\"ec2:DescribeNetworkInterfaces\",\"ec2:DescribeInstances\",\"ec2:DescribeInstanceTypes\",\"ec2:AssignIpv6Addresses\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"AssignDescribe\"},{\"Action\":\"ec2:CreateTags\",\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:network-interface/*\",\"Sid\":\"CreateTags\"}],\"Version\":\"2012-10-17\"}",
                    "policy_id": "ANPA5X4M7MOYIF2MVJEGJ",
                    "tags": {},
                    "tags_all": {}
                },
                "after": {
                    "arn": "arn:aws:iam::123456789012:policy/AmazonEKS_CNI_IPv6_Policy",
                    "description": "IAM policy for EKS CNI to assign IPV6 addresses",
                    "id": "arn:aws:iam::123456789012:policy/AmazonEKS_CNI_IPv6_Policy",
                    "name": "AmazonEKS_CNI_IPv6_Policy",
                    "name_prefix": "",
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"ec2:DescribeTags\",\"ec2:DescribeNetworkInterfaces\",\"ec2:DescribeInstances\",\"ec2:DescribeInstanceTypes\",\"ec2:AssignIpv6Addresses\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"AssignDescribe\"},{\"Action\":\"ec2:CreateTags\",\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:network-interface/*\",\"Sid\":\"CreateTags\"}],\"Version\":\"2012-10-17\"}",
                    "policy_id": "ANPA5X4M7MOYIF2MVJEGJ",
                    "tags": {},
                    "tags_all": {}
                },
                "after_unknown": {},
                "before_sensitive": {
                    "tags": {},
                    "tags_all": {}
                },
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.eks_elb_controller.data.aws_iam_policy_document.lb_controller[0]",
            "module_address": "module.eks_elb_controller",
            "mode": "data",
            "type": "aws_iam_policy_document",
            "name": "lb_controller",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "read"
                ],
                "before": null,
                "after": {
                    "override_policy_documents": null,
                    "policy_id": null,
                    "source_policy_documents": null,
                    "statement": [
                        {
                            "actions": [
                                "iam:CreateServiceLinkedRole"
                            ],
                            "condition": [
                                {
                                    "test": "StringEquals",
                                    "values": [
                                        "elasticloadbalancing.amazonaws.com"
                                    ],
                                    "variable": "iam:AWSServiceName"
                                }
                            ],
                            "effect": "Allow",
                            "not_actions": null,
                            "not_principals": [],
                            "not_resources": null,
                            "principals": [],
                            "resources": [
                                "*"
                            ],
                            "sid": null
                        },
                        {
                            "actions": [
                                "ec2:DescribeAccountAttributes",
                                "ec2:DescribeAddresses",
                                "ec2:DescribeAvailabilityZones",
                                "ec2:DescribeCoipPools",
                                "ec2:DescribeInstances",
                                "ec2:DescribeInternetGateways",
                                "ec2:DescribeNetworkInterfaces",
                                "ec2:DescribeSecurityGroups",
                                "ec2:DescribeSubnets",
                                "ec2:DescribeTags",
                                "ec2:DescribeVpcPeeringConnections",
                                "ec2:DescribeVpcs",
                                "ec2:GetCoipPoolUsage",
                                "elasticloadbalancing:DescribeListenerCertificates",
                                "elasticloadbalancing:DescribeListeners",
                                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                                "elasticloadbalancing:DescribeLoadBalancers",
                                "elasticloadbalancing:DescribeRules",
                                "elasticloadbalancing:DescribeSSLPolicies",
                                "elasticloadbalancing:DescribeTags",
                                "elasticloadbalancing:DescribeTargetGroupAttributes",
                                "elasticloadbalancing:DescribeTargetGroups",
                                "elasticloadbalancing:DescribeTargetHealth"
                            ],
                            "condition": [],
                            "effect": "Allow",
                            "not_actions": null,
                            "not_principals": [],
                            "not_resources": null,
                            "principals": [],
                            "resources": [
                                "*"
                            ],
                            "sid": null
                        },
                        {
                            "actions": [
                                "acm:DescribeCertificate",
                                "acm:ListCertificates",
                                "cognito-idp:DescribeUserPoolClient",
                                "iam:GetServerCertificate",
                                "iam:ListServerCertificates",
                                "shield:CreateProtection",
                                "shield:DeleteProtection",
                                "shield:DescribeProtection",
                                "shield:GetSubscriptionState",
                                "waf-regional:AssociateWebACL",
                                "waf-regional:DisassociateWebACL",
                                "waf-regional:GetWebACL",
                                "waf-regional:GetWebACLForResource",
                                "wafv2:AssociateWebACL",
                                "wafv2:DisassociateWebACL",
                                "wafv2:GetWebACL",
                                "wafv2:GetWebACLForResource"
                            ],
                            "condition": [],
                            "effect": "Allow",
                            "not_actions": null,
                            "not_principals": [],
                            "not_resources": null,
                            "principals": [],
                            "resources": [
                                "*"
                            ],
                            "sid": null
                        },
                        {
                            "actions": [
                                "ec2:AuthorizeSecurityGroupIngress",
                                "ec2:RevokeSecurityGroupIngress"
                            ],
                            "condition": [],
                            "effect": "Allow",
                            "not_actions": null,
                            "not_principals": [],
                            "not_resources": null,
                            "principals": [],
                            "resources": [
                                "*"
                            ],
                            "sid": null
                        },
                        {
                            "actions": [
                                "ec2:CreateSecurityGroup"
                            ],
                            "condition": [],
                            "effect": "Allow",
                            "not_actions": null,
                            "not_principals": [],
                            "not_resources": null,
                            "principals": [],
                            "resources": [
                                "*"
                            ],
                            "sid": null
                        },
                        {
                            "actions": [
                                "ec2:CreateTags"
                            ],
                            "condition": [
                                {
                                    "test": "Null",
                                    "values": [
                                        "false"
                                    ],
                                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                                },
                                {
                                    "test": "StringEquals",
                                    "values": [
                                        "CreateSecurityGroup"
                                    ],
                                    "variable": "ec2:CreateAction"
                                }
                            ],
                            "effect": "Allow",
                            "not_actions": null,
                            "not_principals": [],
                            "not_resources": null,
                            "principals": [],
                            "resources": [
                                "arn:aws:ec2:*:*:security-group/*"
                            ],
                            "sid": null
                        },
                        {
                            "actions": [
                                "ec2:CreateTags",
                                "ec2:DeleteTags"
                            ],
                            "condition": [
                                {
                                    "test": "Null",
                                    "values": [
                                        "false"
                                    ],
                                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                                },
                                {
                                    "test": "Null",
                                    "values": [
                                        "true"
                                    ],
                                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                                }
                            ],
                            "effect": "Allow",
                            "not_actions": null,
                            "not_principals": [],
                            "not_resources": null,
                            "principals": [],
                            "resources": [
                                "arn:aws:ec2:*:*:security-group/*"
                            ],
                            "sid": null
                        },
                        {
                            "actions": [
                                "ec2:AuthorizeSecurityGroupIngress",
                                "ec2:DeleteSecurityGroup",
                                "ec2:RevokeSecurityGroupIngress"
                            ],
                            "condition": [
                                {
                                    "test": "Null",
                                    "values": [
                                        "false"
                                    ],
                                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                                }
                            ],
                            "effect": "Allow",
                            "not_actions": null,
                            "not_principals": [],
                            "not_resources": null,
                            "principals": [],
                            "resources": [
                                "*"
                            ],
                            "sid": null
                        },
                        {
                            "actions": [
                                "elasticloadbalancing:CreateLoadBalancer",
                                "elasticloadbalancing:CreateTargetGroup"
                            ],
                            "condition": [
                                {
                                    "test": "Null",
                                    "values": [
                                        "false"
                                    ],
                                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                                }
                            ],
                            "effect": "Allow",
                            "not_actions": null,
                            "not_principals": [],
                            "not_resources": null,
                            "principals": [],
                            "resources": [
                                "*"
                            ],
                            "sid": null
                        },
                        {
                            "actions": [
                                "elasticloadbalancing:CreateListener",
                                "elasticloadbalancing:CreateRule",
                                "elasticloadbalancing:DeleteListener",
                                "elasticloadbalancing:DeleteRule"
                            ],
                            "condition": [],
                            "effect": "Allow",
                            "not_actions": null,
                            "not_principals": [],
                            "not_resources": null,
                            "principals": [],
                            "resources": [
                                "*"
                            ],
                            "sid": null
                        },
                        {
                            "actions": [
                                "elasticloadbalancing:AddTags",
                                "elasticloadbalancing:RemoveTags"
                            ],
                            "condition": [
                                {
                                    "test": "Null",
                                    "values": [
                                        "false"
                                    ],
                                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                                },
                                {
                                    "test": "Null",
                                    "values": [
                                        "true"
                                    ],
                                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                                }
                            ],
                            "effect": "Allow",
                            "not_actions": null,
                            "not_principals": [],
                            "not_resources": null,
                            "principals": [],
                            "resources": [
                                "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                                "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                                "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                            ],
                            "sid": null
                        },
                        {
                            "actions": [
                                "elasticloadbalancing:AddTags",
                                "elasticloadbalancing:RemoveTags"
                            ],
                            "condition": [],
                            "effect": "Allow",
                            "not_actions": null,
                            "not_principals": [],
                            "not_resources": null,
                            "principals": [],
                            "resources": [
                                "arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*",
                                "arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*",
                                "arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
                                "arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*"
                            ],
                            "sid": null
                        },
                        {
                            "actions": [
                                "elasticloadbalancing:DeleteLoadBalancer",
                                "elasticloadbalancing:DeleteTargetGroup",
                                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                                "elasticloadbalancing:ModifyTargetGroup",
                                "elasticloadbalancing:ModifyTargetGroupAttributes",
                                "elasticloadbalancing:SetIpAddressType",
                                "elasticloadbalancing:SetSecurityGroups",
                                "elasticloadbalancing:SetSubnets"
                            ],
                            "condition": [
                                {
                                    "test": "Null",
                                    "values": [
                                        "false"
                                    ],
                                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                                }
                            ],
                            "effect": "Allow",
                            "not_actions": null,
                            "not_principals": [],
                            "not_resources": null,
                            "principals": [],
                            "resources": [
                                "*"
                            ],
                            "sid": null
                        },
                        {
                            "actions": [
                                "elasticloadbalancing:DeregisterTargets",
                                "elasticloadbalancing:RegisterTargets"
                            ],
                            "condition": [],
                            "effect": "Allow",
                            "not_actions": null,
                            "not_principals": [],
                            "not_resources": null,
                            "principals": [],
                            "resources": [
                                "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                            ],
                            "sid": null
                        },
                        {
                            "actions": [
                                "elasticloadbalancing:AddListenerCertificates",
                                "elasticloadbalancing:ModifyListener",
                                "elasticloadbalancing:ModifyRule",
                                "elasticloadbalancing:RemoveListenerCertificates",
                                "elasticloadbalancing:SetWebAcl"
                            ],
                            "condition": [],
                            "effect": "Allow",
                            "not_actions": null,
                            "not_principals": [],
                            "not_resources": null,
                            "principals": [],
                            "resources": [
                                "*"
                            ],
                            "sid": null
                        }
                    ],
                    "version": null
                },
                "after_unknown": {
                    "id": true,
                    "json": true,
                    "statement": [
                        {
                            "actions": [
                                false
                            ],
                            "condition": [
                                {
                                    "values": [
                                        false
                                    ]
                                }
                            ],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "condition": [],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "condition": [],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false
                            ],
                            "condition": [],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false
                            ],
                            "condition": [],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false
                            ],
                            "condition": [
                                {
                                    "values": [
                                        false
                                    ]
                                },
                                {
                                    "values": [
                                        false
                                    ]
                                }
                            ],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false
                            ],
                            "condition": [
                                {
                                    "values": [
                                        false
                                    ]
                                },
                                {
                                    "values": [
                                        false
                                    ]
                                }
                            ],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false,
                                false
                            ],
                            "condition": [
                                {
                                    "values": [
                                        false
                                    ]
                                }
                            ],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false
                            ],
                            "condition": [
                                {
                                    "values": [
                                        false
                                    ]
                                }
                            ],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false,
                                false,
                                false
                            ],
                            "condition": [],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false
                            ],
                            "condition": [
                                {
                                    "values": [
                                        false
                                    ]
                                },
                                {
                                    "values": [
                                        false
                                    ]
                                }
                            ],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false,
                                false,
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false
                            ],
                            "condition": [],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false,
                                false,
                                false,
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "condition": [
                                {
                                    "values": [
                                        false
                                    ]
                                }
                            ],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false
                            ],
                            "condition": [],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "condition": [],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        }
                    ]
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "statement": [
                        {
                            "actions": [
                                false
                            ],
                            "condition": [
                                {
                                    "values": [
                                        false
                                    ]
                                }
                            ],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "condition": [],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "condition": [],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false
                            ],
                            "condition": [],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false
                            ],
                            "condition": [],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false
                            ],
                            "condition": [
                                {
                                    "values": [
                                        false
                                    ]
                                },
                                {
                                    "values": [
                                        false
                                    ]
                                }
                            ],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false
                            ],
                            "condition": [
                                {
                                    "values": [
                                        false
                                    ]
                                },
                                {
                                    "values": [
                                        false
                                    ]
                                }
                            ],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false,
                                false
                            ],
                            "condition": [
                                {
                                    "values": [
                                        false
                                    ]
                                }
                            ],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false
                            ],
                            "condition": [
                                {
                                    "values": [
                                        false
                                    ]
                                }
                            ],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false,
                                false,
                                false
                            ],
                            "condition": [],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false
                            ],
                            "condition": [
                                {
                                    "values": [
                                        false
                                    ]
                                },
                                {
                                    "values": [
                                        false
                                    ]
                                }
                            ],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false,
                                false,
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false
                            ],
                            "condition": [],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false,
                                false,
                                false,
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "condition": [
                                {
                                    "values": [
                                        false
                                    ]
                                }
                            ],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false
                            ],
                            "condition": [],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        },
                        {
                            "actions": [
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "condition": [],
                            "not_principals": [],
                            "principals": [],
                            "resources": [
                                false
                            ]
                        }
                    ]
                }
            },
            "action_reason": "read_because_dependency_pending"
        },
        {
            "address": "module.eks_elb_controller.aws_iam_policy.lb_controller[0]",
            "module_address": "module.eks_elb_controller",
            "mode": "managed",
            "type": "aws_iam_policy",
            "name": "lb_controller",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "update"
                ],
                "before": {
                    "arn": "arn:aws:iam::123456789012:policy/test-alb-ingress",
                    "description": "Policy for alb-ingress service",
                    "id": "arn:aws:iam::123456789012:policy/test-alb-ingress",
                    "name": "test-alb-ingress",
                    "name_prefix": "",
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":\"iam:CreateServiceLinkedRole\",\"Condition\":{\"StringEquals\":{\"iam:AWSServiceName\":\"elasticloadbalancing.amazonaws.com\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:DescribeTargetHealth\",\"elasticloadbalancing:DescribeTargetGroups\",\"elasticloadbalancing:DescribeTargetGroupAttributes\",\"elasticloadbalancing:DescribeTags\",\"elasticloadbalancing:DescribeSSLPolicies\",\"elasticloadbalancing:DescribeRules\",\"elasticloadbalancing:DescribeLoadBalancers\",\"elasticloadbalancing:DescribeLoadBalancerAttributes\",\"elasticloadbalancing:DescribeListeners\",\"elasticloadbalancing:DescribeListenerCertificates\",\"ec2:GetCoipPoolUsage\",\"ec2:DescribeVpcs\",\"ec2:DescribeVpcPeeringConnections\",\"ec2:DescribeTags\",\"ec2:DescribeSubnets\",\"ec2:DescribeSecurityGroups\",\"ec2:DescribeNetworkInterfaces\",\"ec2:DescribeInternetGateways\",\"ec2:DescribeInstances\",\"ec2:DescribeCoipPools\",\"ec2:DescribeAvailabilityZones\",\"ec2:DescribeAddresses\",\"ec2:DescribeAccountAttributes\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"wafv2:GetWebACLForResource\",\"wafv2:GetWebACL\",\"wafv2:DisassociateWebACL\",\"wafv2:AssociateWebACL\",\"waf-regional:GetWebACLForResource\",\"waf-regional:GetWebACL\",\"waf-regional:DisassociateWebACL\",\"waf-regional:AssociateWebACL\",\"shield:GetSubscriptionState\",\"shield:DescribeProtection\",\"shield:DeleteProtection\",\"shield:CreateProtection\",\"iam:ListServerCertificates\",\"iam:GetServerCertificate\",\"cognito-idp:DescribeUserPoolClient\",\"acm:ListCertificates\",\"acm:DescribeCertificate\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:CreateSecurityGroup\",\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:CreateTags\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"ec2:CreateAction\":\"CreateSecurityGroup\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:DeleteTags\",\"ec2:CreateTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:DeleteSecurityGroup\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:CreateTargetGroup\",\"elasticloadbalancing:CreateLoadBalancer\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:DeleteRule\",\"elasticloadbalancing:DeleteListener\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:CreateListener\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"]},{\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"]},{\"Action\":[\"elasticloadbalancing:SetSubnets\",\"elasticloadbalancing:SetSecurityGroups\",\"elasticloadbalancing:SetIpAddressType\",\"elasticloadbalancing:ModifyTargetGroupAttributes\",\"elasticloadbalancing:ModifyTargetGroup\",\"elasticloadbalancing:ModifyLoadBalancerAttributes\",\"elasticloadbalancing:DeleteTargetGroup\",\"elasticloadbalancing:DeleteLoadBalancer\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:RegisterTargets\",\"elasticloadbalancing:DeregisterTargets\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"},{\"Action\":[\"elasticloadbalancing:SetWebAcl\",\"elasticloadbalancing:RemoveListenerCertificates\",\"elasticloadbalancing:ModifyRule\",\"elasticloadbalancing:ModifyListener\",\"elasticloadbalancing:AddListenerCertificates\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
                    "policy_id": "ANPA5X4M7MOYCYTEF5VUE",
                    "tags": {},
                    "tags_all": {}
                },
                "after": {
                    "arn": "arn:aws:iam::123456789012:policy/test-alb-ingress",
                    "description": "Policy for alb-ingress service",
                    "id": "arn:aws:iam::123456789012:policy/test-alb-ingress",
                    "name": "test-alb-ingress",
                    "name_prefix": "",
                    "path": "/",
                    "policy_id": "ANPA5X4M7MOYCYTEF5VUE",
                    "tags": {},
                    "tags_all": {}
                },
                "after_unknown": {
                    "policy": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": {
                    "tags": {},
                    "tags_all": {}
                },
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        }
    ],
    "configuration": {
        "root_module": {
            "resources": [
                {
                    "address": "kubernetes_deployment.api_server",
                    "mode": "managed",
                    "type": "kubernetes_deployment",
                    "name": "api_server",
                    "provider_config_key": "kubernetes",
                    "expressions": {
                        "metadata": [
                            {
                                "name": {
                                    "constant_value": "api-server"
                                }
                            }
                        ],
                        "spec": [
                            {
                                "replicas": {
                                    "constant_value": 1
                                },
                                "selector": [
                                    {
                                        "match_labels": {
                                            "constant_value": {
                                                "app": "api-server"
                                            }
                                        }
                                    }
                                ],
                                "template": [
                                    {
                                        "metadata": [
                                            {
                                                "labels": {
                                                    "constant_value": {
                                                        "app": "api-server"
                                                    }
                                                }
                                            }
                                        ],
                                        "spec": [
                                            {
                                                "container": [
                                                    {
                                                        "env": [
                                                            {
                                                                "name": {
                                                                    "constant_value": "LOG"
                                                                },
                                                                "value": {
                                                                    "references": [
                                                                        "local.default_log_level"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "NSC_LOCATION"
                                                                },
                                                                "value": {
                                                                    "constant_value": "/nats-nkeys/nsc"
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "NSC_OPERATOR"
                                                                },
                                                                "value": {
                                                                    "references": [
                                                                        "var.terraform_env_name"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "NATS_URL"
                                                                },
                                                                "value": {
                                                                    "references": [
                                                                        "kubernetes_service.nats.metadata[0].name",
                                                                        "kubernetes_service.nats.metadata[0]",
                                                                        "kubernetes_service.nats.metadata",
                                                                        "kubernetes_service.nats"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "AUTH0_AUDIENCE"
                                                                },
                                                                "value": {
                                                                    "references": [
                                                                        "auth0_resource_server.api_server.identifier",
                                                                        "auth0_resource_server.api_server"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "AUTH0_DOMAIN"
                                                                },
                                                                "value": {
                                                                    "references": [
                                                                        "var.auth0_domain"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "AUTH_COOKIE_NAME"
                                                                },
                                                                "value": {
                                                                    "references": [
                                                                        "local.session_name"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "CORS_ALLOW_ORIGINS"
                                                                },
                                                                "value": {
                                                                    "references": [
                                                                        "local.cors_origin"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "REVLINK_ACCOUNT"
                                                                },
                                                                "value": {
                                                                    "constant_value": "revlink"
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "API_KEY_CLIENT_ID"
                                                                },
                                                                "value": {
                                                                    "references": [
                                                                        "auth0_client.api_keys.client_id",
                                                                        "auth0_client.api_keys"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "API_KEY_CLIENT_SECRET"
                                                                },
                                                                "value": {
                                                                    "references": [
                                                                        "auth0_client.api_keys.client_secret",
                                                                        "auth0_client.api_keys"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "GATEWAY_URL"
                                                                },
                                                                "value": {
                                                                    "constant_value": "http://gateway:8080/api/gateway"
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "BOOKMARKS_BASE_URL"
                                                                },
                                                                "value": {
                                                                    "constant_value": "http://gateway:8080/"
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "SNAPSHOTS_BASE_URL"
                                                                },
                                                                "value": {
                                                                    "constant_value": "http://gateway:8080/"
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "SOURCE_MANAGER"
                                                                },
                                                                "value": {
                                                                    "references": [
                                                                        "var.terraform_env_name"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "HONEYCOMB_API_KEY"
                                                                },
                                                                "value": {
                                                                    "references": [
                                                                        "var.honeycomb_api_key"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "SENTRY_DSN"
                                                                },
                                                                "value": {
                                                                    "references": [
                                                                        "var.backend_sentry_dsn"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "RUN_MODE"
                                                                },
                                                                "value": {
                                                                    "references": [
                                                                        "var.run_mode"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "PGHOST"
                                                                },
                                                                "value": {
                                                                    "references": [
                                                                        "local.overmind_db_endpoint"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "PGPORT"
                                                                },
                                                                "value": {
                                                                    "references": [
                                                                        "local.overmind_db_port"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "PGUSER"
                                                                },
                                                                "value_from": [
                                                                    {
                                                                        "secret_key_ref": [
                                                                            {
                                                                                "key": {
                                                                                    "constant_value": "username"
                                                                                },
                                                                                "name": {
                                                                                    "constant_value": "apiserverdb-root-creds"
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "PGPASSWORD"
                                                                },
                                                                "value_from": [
                                                                    {
                                                                        "secret_key_ref": [
                                                                            {
                                                                                "key": {
                                                                                    "constant_value": "password"
                                                                                },
                                                                                "name": {
                                                                                    "constant_value": "apiserverdb-root-creds"
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "name": {
                                                                    "constant_value": "PGDBNAME"
                                                                },
                                                                "value": {
                                                                    "references": [
                                                                        "local.apiserverdb_name"
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "image": {
                                                            "references": [
                                                                "local.api_server_imageref"
                                                            ]
                                                        },
                                                        "image_pull_policy": {
                                                            "references": [
                                                                "local.api_server_image_pull_policy"
                                                            ]
                                                        },
                                                        "name": {
                                                            "constant_value": "api-server"
                                                        },
                                                        "port": [
                                                            {
                                                                "container_port": {
                                                                    "constant_value": 8080
                                                                }
                                                            }
                                                        ],
                                                        "resources": [
                                                            {
                                                                "limits": {
                                                                    "constant_value": {
                                                                        "memory": "2Gi"
                                                                    }
                                                                },
                                                                "requests": {
                                                                    "constant_value": {
                                                                        "cpu": "250m",
                                                                        "memory": "200Mi"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "volume_mount": [
                                                            {
                                                                "mount_path": {
                                                                    "constant_value": "/nats-nkeys"
                                                                },
                                                                "name": {
                                                                    "constant_value": "nats-nkeys"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "image_pull_secrets": [
                                                    {
                                                        "name": {
                                                            "constant_value": "srcman-registry-credentials"
                                                        }
                                                    }
                                                ],
                                                "init_container": [
                                                    {
                                                        "command": {
                                                            "constant_value": [
                                                                "/bin/mkdir",
                                                                "-p",
                                                                "/nats-nkeys/nsc"
                                                            ]
                                                        },
                                                        "image": {
                                                            "constant_value": "alpine:latest"
                                                        },
                                                        "name": {
                                                            "constant_value": "create-folder"
                                                        },
                                                        "volume_mount": [
                                                            {
                                                                "mount_path": {
                                                                    "constant_value": "/nats-nkeys"
                                                                },
                                                                "name": {
                                                                    "constant_value": "nats-nkeys"
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "args": {
                                                            "references": [
                                                                "var.terraform_env_name"
                                                            ]
                                                        },
                                                        "image": {
                                                            "references": [
                                                                "local.api_server_imageref"
                                                            ]
                                                        },
                                                        "image_pull_policy": {
                                                            "references": [
                                                                "local.api_server_image_pull_policy"
                                                            ]
                                                        },
                                                        "name": {
                                                            "constant_value": "generate-nkeys"
                                                        },
                                                        "volume_mount": [
                                                            {
                                                                "mount_path": {
                                                                    "constant_value": "/nats-nkeys"
                                                                },
                                                                "name": {
                                                                    "constant_value": "nats-nkeys"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "service_account_name": {
                                                    "constant_value": "api-server-service-account"
                                                },
                                                "volume": [
                                                    {
                                                        "name": {
                                                            "constant_value": "nats-nkeys"
                                                        },
                                                        "persistent_volume_claim": [
                                                            {
                                                                "claim_name": {
                                                                    "constant_value": "nats-nkeys"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ],
                        "timeouts": {
                            "create": {
                                "constant_value": "2m"
                            },
                            "delete": {
                                "constant_value": "2m"
                            },
                            "update": {
                                "constant_value": "2m"
                            }
                        }
                    },
                    "schema_version": 1,
                    "depends_on": [
                        "module.eks",
                        "module.api_server_efs",
                        "postgresql_database.apiserverdb",
                        "postgresql_role.apiserverdb_role"
                    ]
                }
            ],
            "module_calls": {
                "core": {
                    "source": "./modules/ovm-core",
                    "expressions": {
                        "additional_ingress_rules": {
                            "references": [
                                "local.smartlook_relay_dns"
                            ]
                        },
                        "api_keys_client_id": {
                            "references": [
                                "auth0_client.api_keys.id",
                                "auth0_client.api_keys"
                            ]
                        },
                        "api_keys_client_secret": {
                            "references": [
                                "data.auth0_client.api_keys.client_secret",
                                "data.auth0_client.api_keys"
                            ]
                        },
                        "api_server_audience": {
                            "references": [
                                "auth0_resource_server.api_server.identifier",
                                "auth0_resource_server.api_server"
                            ]
                        },
                        "api_server_client_id": {
                            "references": [
                                "auth0_client.api_server.id",
                                "auth0_client.api_server"
                            ]
                        },
                        "api_server_client_secret": {
                            "references": [
                                "data.auth0_client.api_server.client_secret",
                                "data.auth0_client.api_server"
                            ]
                        },
                        "api_server_image_pull_policy": {
                            "references": [
                                "local.api_server_image_pull_policy"
                            ]
                        },
                        "api_server_imageref": {
                            "references": [
                                "local.api_server_imageref"
                            ]
                        },
                        "auth0_domain": {
                            "references": [
                                "var.auth0_domain"
                            ]
                        },
                        "aws_auth_roles": {
                            "references": [
                                "local.aws_auth_roles"
                            ]
                        },
                        "backend_sentry_dsn": {
                            "references": [
                                "var.backend_sentry_dsn"
                            ]
                        },
                        "cors_origin": {
                            "references": [
                                "var.terraform_env_name"
                            ]
                        },
                        "eks_arm_instance_types": {
                            "references": [
                                "var.terraform_env_name"
                            ]
                        },
                        "eks_x86_instance_types": {
                            "references": [
                                "var.terraform_env_name"
                            ]
                        },
                        "env_name": {
                            "references": [
                                "var.terraform_env_name"
                            ]
                        },
                        "gateway_audience": {
                            "references": [
                                "auth0_resource_server.gateway.identifier",
                                "auth0_resource_server.gateway"
                            ]
                        },
                        "gateway_client_id": {
                            "references": [
                                "auth0_client.gateway.id",
                                "auth0_client.gateway"
                            ]
                        },
                        "gateway_client_secret": {
                            "references": [
                                "data.auth0_client.gateway.client_secret",
                                "data.auth0_client.gateway"
                            ]
                        },
                        "gateway_image_pull_policy": {
                            "references": [
                                "local.gateway_image_pull_policy"
                            ]
                        },
                        "gateway_imageref": {
                            "references": [
                                "local.gateway_imageref"
                            ]
                        },
                        "honeycomb_api_key": {
                            "references": [
                                "var.honeycomb_api_key"
                            ]
                        },
                        "hubspot_private_app_token": {
                            "references": [
                                "var.hubspot_private_app_token"
                            ]
                        },
                        "ingress_certificate_arn": {
                            "references": [
                                "module.acm.acm_certificate_arn",
                                "module.acm"
                            ]
                        },
                        "is_prod": {
                            "references": [
                                "var.terraform_env_name"
                            ]
                        },
                        "kms_key_administrators": {
                            "references": [
                                "local.sso_admin_role_arn",
                                "local.sso_poweruser_role_arn",
                                "local.terraform_deployer_arn"
                            ]
                        },
                        "namespace": {
                            "constant_value": "default"
                        },
                        "nats_data_storage_class_name": {
                            "references": [
                                "local.nats_data_storage_class_name"
                            ]
                        },
                        "nats_operator_jwt": {
                            "references": [
                                "var.nats_operator_jwt"
                            ]
                        },
                        "nats_sys_account_id": {
                            "references": [
                                "var.nats_sys_account_id"
                            ]
                        },
                        "nats_sys_account_jwt": {
                            "references": [
                                "var.nats_sys_account_jwt"
                            ]
                        },
                        "openai_api_key": {
                            "references": [
                                "var.openai_api_key"
                            ]
                        },
                        "region": {
                            "constant_value": "eu-west-2"
                        },
                        "revlink_client_id": {
                            "references": [
                                "auth0_client.revlink.id",
                                "auth0_client.revlink"
                            ]
                        },
                        "revlink_client_secret": {
                            "references": [
                                "data.auth0_client.revlink.client_secret",
                                "data.auth0_client.revlink"
                            ]
                        },
                        "revlink_image_pull_policy": {
                            "references": [
                                "local.revlink_image_pull_policy"
                            ]
                        },
                        "revlink_imageref": {
                            "references": [
                                "local.revlink_imageref"
                            ]
                        },
                        "send_email_iam_policy_arn": {
                            "references": [
                                "aws_iam_policy.api_server_ses_send_emails.arn",
                                "aws_iam_policy.api_server_ses_send_emails"
                            ]
                        },
                        "session_name": {
                            "references": [
                                "local.session_name"
                            ]
                        },
                        "srcman_admin_github_token": {
                            "references": [
                                "var.admin_github_token"
                            ]
                        },
                        "srcman_github_release": {
                            "constant_value": "latest"
                        },
                        "srcman_github_token": {
                            "references": [
                                "var.srcman_github_token"
                            ]
                        },
                        "srcman_github_username": {
                            "references": [
                                "var.srcman_github_username"
                            ]
                        },
                        "zone_name": {
                            "references": [
                                "var.zone_name"
                            ]
                        }
                    },
                    "module": {
                        "resources": [
                            {
                                "address": "kubernetes_secret.apiserver-secrets",
                                "mode": "managed",
                                "type": "kubernetes_secret",
                                "name": "apiserver-secrets",
                                "provider_config_key": "module.core:kubernetes",
                                "expressions": {
                                    "data": {
                                        "references": [
                                            "var.api_keys_client_secret",
                                            "var.api_server_client_secret",
                                            "var.hubspot_private_app_token",
                                            "var.openai_api_key"
                                        ]
                                    },
                                    "metadata": [
                                        {
                                            "name": {
                                                "constant_value": "apiserver-secrets"
                                            },
                                            "namespace": {
                                                "references": [
                                                    "var.namespace"
                                                ]
                                            }
                                        }
                                    ],
                                    "type": {
                                        "constant_value": "Opaque"
                                    }
                                },
                                "schema_version": 0
                            }
                        ]
                    }
                },
                "eks_elb_controller": {
                    "source": "DNXLabs/eks-lb-controller/aws",
                    "expressions": {
                        "cluster_identity_oidc_issuer": {
                            "references": [
                                "module.eks.cluster_oidc_issuer_url",
                                "module.eks"
                            ]
                        },
                        "cluster_identity_oidc_issuer_arn": {
                            "references": [
                                "module.eks.oidc_provider_arn",
                                "module.eks"
                            ]
                        },
                        "cluster_name": {
                            "references": [
                                "module.eks.cluster_name",
                                "module.eks"
                            ]
                        }
                    },
                    "module": {
                        "resources": [
                            {
                                "address": "aws_iam_policy.lb_controller",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "lb_controller",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "constant_value": "Policy for alb-ingress service"
                                    },
                                    "name": {
                                        "references": [
                                            "var.cluster_name"
                                        ]
                                    },
                                    "path": {
                                        "constant_value": "/"
                                    },
                                    "policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.lb_controller[0].json",
                                            "data.aws_iam_policy_document.lb_controller[0]",
                                            "data.aws_iam_policy_document.lb_controller"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.enabled"
                                    ]
                                },
                                "depends_on": [
                                    "var.mod_dependency"
                                ]
                            },
                            {
                                "address": "aws_iam_role.lb_controller",
                                "mode": "managed",
                                "type": "aws_iam_role",
                                "name": "lb_controller",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assume_role_policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.lb_controller_assume[0].json",
                                            "data.aws_iam_policy_document.lb_controller_assume[0]",
                                            "data.aws_iam_policy_document.lb_controller_assume"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.cluster_name"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.enabled"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.lb_controller",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "lb_controller",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.lb_controller[0].arn",
                                            "aws_iam_policy.lb_controller[0]",
                                            "aws_iam_policy.lb_controller"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lb_controller[0].name",
                                            "aws_iam_role.lb_controller[0]",
                                            "aws_iam_role.lb_controller"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.enabled"
                                    ]
                                }
                            },
                            {
                                "address": "helm_release.lb_controller",
                                "mode": "managed",
                                "type": "helm_release",
                                "name": "lb_controller",
                                "provider_config_key": "helm",
                                "expressions": {
                                    "chart": {
                                        "references": [
                                            "var.helm_chart_release_name"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.helm_chart_name"
                                        ]
                                    },
                                    "namespace": {
                                        "references": [
                                            "var.namespace"
                                        ]
                                    },
                                    "repository": {
                                        "references": [
                                            "var.helm_chart_repo"
                                        ]
                                    },
                                    "set": [
                                        {
                                            "name": {
                                                "constant_value": "clusterName"
                                            },
                                            "value": {
                                                "references": [
                                                    "var.cluster_name"
                                                ]
                                            }
                                        },
                                        {
                                            "name": {
                                                "constant_value": "rbac.create"
                                            },
                                            "value": {
                                                "constant_value": "true"
                                            }
                                        },
                                        {
                                            "name": {
                                                "constant_value": "serviceAccount.create"
                                            },
                                            "value": {
                                                "constant_value": "true"
                                            }
                                        },
                                        {
                                            "name": {
                                                "constant_value": "serviceAccount.name"
                                            },
                                            "value": {
                                                "references": [
                                                    "var.service_account_name"
                                                ]
                                            }
                                        },
                                        {
                                            "name": {
                                                "constant_value": "serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn"
                                            },
                                            "value": {
                                                "references": [
                                                    "aws_iam_role.lb_controller[0].arn",
                                                    "aws_iam_role.lb_controller[0]",
                                                    "aws_iam_role.lb_controller"
                                                ]
                                            }
                                        }
                                    ],
                                    "values": {
                                        "references": [
                                            "var.settings"
                                        ]
                                    },
                                    "version": {
                                        "references": [
                                            "var.helm_chart_version"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "var.enabled"
                                    ]
                                },
                                "depends_on": [
                                    "var.mod_dependency",
                                    "kubernetes_namespace.lb_controller"
                                ]
                            },
                            {
                                "address": "kubectl_manifest.cluster_role",
                                "mode": "managed",
                                "type": "kubectl_manifest",
                                "name": "cluster_role",
                                "provider_config_key": "kubectl",
                                "expressions": {
                                    "yaml_body": {
                                        "references": [
                                            "path.module",
                                            "each.value.name",
                                            "each.value",
                                            "each.value.namespace",
                                            "each.value",
                                            "each.value.secrets",
                                            "each.value"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "for_each_expression": {
                                    "references": [
                                        "var.roles"
                                    ]
                                }
                            },
                            {
                                "address": "kubectl_manifest.cluster_role_binding",
                                "mode": "managed",
                                "type": "kubectl_manifest",
                                "name": "cluster_role_binding",
                                "provider_config_key": "kubectl",
                                "expressions": {
                                    "yaml_body": {
                                        "references": [
                                            "path.module",
                                            "each.value.name",
                                            "each.value",
                                            "each.value.namespace",
                                            "each.value",
                                            "each.value.secrets",
                                            "each.value"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "for_each_expression": {
                                    "references": [
                                        "var.roles"
                                    ]
                                },
                                "depends_on": [
                                    "kubectl_manifest.cluster_role"
                                ]
                            },
                            {
                                "address": "kubernetes_namespace.lb_controller",
                                "mode": "managed",
                                "type": "kubernetes_namespace",
                                "name": "lb_controller",
                                "provider_config_key": "kubernetes",
                                "expressions": {
                                    "metadata": [
                                        {
                                            "name": {
                                                "references": [
                                                    "var.namespace"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.enabled",
                                        "var.create_namespace",
                                        "var.namespace"
                                    ]
                                },
                                "depends_on": [
                                    "var.mod_dependency"
                                ]
                            },
                            {
                                "address": "data.aws_iam_policy_document.lb_controller",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "lb_controller",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "iam:CreateServiceLinkedRole"
                                                ]
                                            },
                                            "condition": [
                                                {
                                                    "test": {
                                                        "constant_value": "StringEquals"
                                                    },
                                                    "values": {
                                                        "constant_value": [
                                                            "elasticloadbalancing.amazonaws.com"
                                                        ]
                                                    },
                                                    "variable": {
                                                        "constant_value": "iam:AWSServiceName"
                                                    }
                                                }
                                            ],
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "constant_value": [
                                                    "*"
                                                ]
                                            }
                                        },
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "ec2:DescribeAccountAttributes",
                                                    "ec2:DescribeAddresses",
                                                    "ec2:DescribeAvailabilityZones",
                                                    "ec2:DescribeInternetGateways",
                                                    "ec2:DescribeVpcs",
                                                    "ec2:DescribeVpcPeeringConnections",
                                                    "ec2:DescribeSubnets",
                                                    "ec2:DescribeSecurityGroups",
                                                    "ec2:DescribeInstances",
                                                    "ec2:DescribeNetworkInterfaces",
                                                    "ec2:DescribeTags",
                                                    "ec2:GetCoipPoolUsage",
                                                    "ec2:DescribeCoipPools",
                                                    "elasticloadbalancing:DescribeLoadBalancers",
                                                    "elasticloadbalancing:DescribeLoadBalancerAttributes",
                                                    "elasticloadbalancing:DescribeListeners",
                                                    "elasticloadbalancing:DescribeListenerCertificates",
                                                    "elasticloadbalancing:DescribeSSLPolicies",
                                                    "elasticloadbalancing:DescribeRules",
                                                    "elasticloadbalancing:DescribeTargetGroups",
                                                    "elasticloadbalancing:DescribeTargetGroupAttributes",
                                                    "elasticloadbalancing:DescribeTargetHealth",
                                                    "elasticloadbalancing:DescribeTags"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "constant_value": [
                                                    "*"
                                                ]
                                            }
                                        },
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "cognito-idp:DescribeUserPoolClient",
                                                    "acm:ListCertificates",
                                                    "acm:DescribeCertificate",
                                                    "iam:ListServerCertificates",
                                                    "iam:GetServerCertificate",
                                                    "waf-regional:GetWebACL",
                                                    "waf-regional:GetWebACLForResource",
                                                    "waf-regional:AssociateWebACL",
                                                    "waf-regional:DisassociateWebACL",
                                                    "wafv2:GetWebACL",
                                                    "wafv2:GetWebACLForResource",
                                                    "wafv2:AssociateWebACL",
                                                    "wafv2:DisassociateWebACL",
                                                    "shield:GetSubscriptionState",
                                                    "shield:DescribeProtection",
                                                    "shield:CreateProtection",
                                                    "shield:DeleteProtection"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "constant_value": [
                                                    "*"
                                                ]
                                            }
                                        },
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "ec2:AuthorizeSecurityGroupIngress",
                                                    "ec2:RevokeSecurityGroupIngress"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "constant_value": [
                                                    "*"
                                                ]
                                            }
                                        },
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "ec2:CreateSecurityGroup"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "constant_value": [
                                                    "*"
                                                ]
                                            }
                                        },
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "ec2:CreateTags"
                                                ]
                                            },
                                            "condition": [
                                                {
                                                    "test": {
                                                        "constant_value": "StringEquals"
                                                    },
                                                    "values": {
                                                        "constant_value": [
                                                            "CreateSecurityGroup"
                                                        ]
                                                    },
                                                    "variable": {
                                                        "constant_value": "ec2:CreateAction"
                                                    }
                                                },
                                                {
                                                    "test": {
                                                        "constant_value": "Null"
                                                    },
                                                    "values": {
                                                        "constant_value": [
                                                            "false"
                                                        ]
                                                    },
                                                    "variable": {
                                                        "constant_value": "aws:RequestTag/elbv2.k8s.aws/cluster"
                                                    }
                                                }
                                            ],
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "references": [
                                                    "var.arn_format"
                                                ]
                                            }
                                        },
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "ec2:CreateTags",
                                                    "ec2:DeleteTags"
                                                ]
                                            },
                                            "condition": [
                                                {
                                                    "test": {
                                                        "constant_value": "Null"
                                                    },
                                                    "values": {
                                                        "constant_value": [
                                                            "true"
                                                        ]
                                                    },
                                                    "variable": {
                                                        "constant_value": "aws:RequestTag/elbv2.k8s.aws/cluster"
                                                    }
                                                },
                                                {
                                                    "test": {
                                                        "constant_value": "Null"
                                                    },
                                                    "values": {
                                                        "constant_value": [
                                                            "false"
                                                        ]
                                                    },
                                                    "variable": {
                                                        "constant_value": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                                                    }
                                                }
                                            ],
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "references": [
                                                    "var.arn_format"
                                                ]
                                            }
                                        },
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "ec2:AuthorizeSecurityGroupIngress",
                                                    "ec2:RevokeSecurityGroupIngress",
                                                    "ec2:DeleteSecurityGroup"
                                                ]
                                            },
                                            "condition": [
                                                {
                                                    "test": {
                                                        "constant_value": "Null"
                                                    },
                                                    "values": {
                                                        "constant_value": [
                                                            "false"
                                                        ]
                                                    },
                                                    "variable": {
                                                        "constant_value": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                                                    }
                                                }
                                            ],
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "constant_value": [
                                                    "*"
                                                ]
                                            }
                                        },
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "elasticloadbalancing:CreateLoadBalancer",
                                                    "elasticloadbalancing:CreateTargetGroup"
                                                ]
                                            },
                                            "condition": [
                                                {
                                                    "test": {
                                                        "constant_value": "Null"
                                                    },
                                                    "values": {
                                                        "constant_value": [
                                                            "false"
                                                        ]
                                                    },
                                                    "variable": {
                                                        "constant_value": "aws:RequestTag/elbv2.k8s.aws/cluster"
                                                    }
                                                }
                                            ],
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "constant_value": [
                                                    "*"
                                                ]
                                            }
                                        },
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "elasticloadbalancing:CreateListener",
                                                    "elasticloadbalancing:DeleteListener",
                                                    "elasticloadbalancing:CreateRule",
                                                    "elasticloadbalancing:DeleteRule"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "constant_value": [
                                                    "*"
                                                ]
                                            }
                                        },
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "elasticloadbalancing:AddTags",
                                                    "elasticloadbalancing:RemoveTags"
                                                ]
                                            },
                                            "condition": [
                                                {
                                                    "test": {
                                                        "constant_value": "Null"
                                                    },
                                                    "values": {
                                                        "constant_value": [
                                                            "true"
                                                        ]
                                                    },
                                                    "variable": {
                                                        "constant_value": "aws:RequestTag/elbv2.k8s.aws/cluster"
                                                    }
                                                },
                                                {
                                                    "test": {
                                                        "constant_value": "Null"
                                                    },
                                                    "values": {
                                                        "constant_value": [
                                                            "false"
                                                        ]
                                                    },
                                                    "variable": {
                                                        "constant_value": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                                                    }
                                                }
                                            ],
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "references": [
                                                    "var.arn_format",
                                                    "var.arn_format",
                                                    "var.arn_format"
                                                ]
                                            }
                                        },
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "elasticloadbalancing:AddTags",
                                                    "elasticloadbalancing:RemoveTags"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "references": [
                                                    "var.arn_format",
                                                    "var.arn_format",
                                                    "var.arn_format",
                                                    "var.arn_format"
                                                ]
                                            }
                                        },
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "elasticloadbalancing:ModifyLoadBalancerAttributes",
                                                    "elasticloadbalancing:SetIpAddressType",
                                                    "elasticloadbalancing:SetSecurityGroups",
                                                    "elasticloadbalancing:SetSubnets",
                                                    "elasticloadbalancing:DeleteLoadBalancer",
                                                    "elasticloadbalancing:ModifyTargetGroup",
                                                    "elasticloadbalancing:ModifyTargetGroupAttributes",
                                                    "elasticloadbalancing:DeleteTargetGroup"
                                                ]
                                            },
                                            "condition": [
                                                {
                                                    "test": {
                                                        "constant_value": "Null"
                                                    },
                                                    "values": {
                                                        "constant_value": [
                                                            "false"
                                                        ]
                                                    },
                                                    "variable": {
                                                        "constant_value": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                                                    }
                                                }
                                            ],
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "constant_value": [
                                                    "*"
                                                ]
                                            }
                                        },
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "elasticloadbalancing:RegisterTargets",
                                                    "elasticloadbalancing:DeregisterTargets"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "references": [
                                                    "var.arn_format"
                                                ]
                                            }
                                        },
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "elasticloadbalancing:SetWebAcl",
                                                    "elasticloadbalancing:ModifyListener",
                                                    "elasticloadbalancing:AddListenerCertificates",
                                                    "elasticloadbalancing:RemoveListenerCertificates",
                                                    "elasticloadbalancing:ModifyRule"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "constant_value": [
                                                    "*"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.enabled"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.lb_controller_assume",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "lb_controller_assume",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "sts:AssumeRoleWithWebIdentity"
                                                ]
                                            },
                                            "condition": [
                                                {
                                                    "test": {
                                                        "constant_value": "StringEquals"
                                                    },
                                                    "values": {
                                                        "references": [
                                                            "var.namespace",
                                                            "var.service_account_name"
                                                        ]
                                                    },
                                                    "variable": {
                                                        "references": [
                                                            "var.cluster_identity_oidc_issuer"
                                                        ]
                                                    }
                                                }
                                            ],
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "principals": [
                                                {
                                                    "identifiers": {
                                                        "references": [
                                                            "var.cluster_identity_oidc_issuer_arn"
                                                        ]
                                                    },
                                                    "type": {
                                                        "constant_value": "Federated"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.enabled"
                                    ]
                                }
                            }
                        ],
                        "variables": {
                            "arn_format": {
                                "default": "aws",
                                "description": "ARNs identifier, usefull for GovCloud begin with `aws-us-gov-<region>`."
                            },
                            "cluster_identity_oidc_issuer": {
                                "description": "The OIDC Identity issuer for the cluster."
                            },
                            "cluster_identity_oidc_issuer_arn": {
                                "description": "The OIDC Identity issuer ARN for the cluster that can be used to associate IAM roles with a service account."
                            },
                            "cluster_name": {
                                "description": "The name of the cluster."
                            },
                            "create_namespace": {
                                "default": true,
                                "description": "Whether to create Kubernetes namespace with name defined by `namespace`."
                            },
                            "enabled": {
                                "default": true,
                                "description": "Variable indicating whether deployment is enabled."
                            },
                            "helm_chart_name": {
                                "default": "aws-load-balancer-controller",
                                "description": "AWS Load Balancer Controller Helm chart name."
                            },
                            "helm_chart_release_name": {
                                "default": "aws-load-balancer-controller",
                                "description": "AWS Load Balancer Controller Helm chart release name."
                            },
                            "helm_chart_repo": {
                                "default": "https://aws.github.io/eks-charts",
                                "description": "AWS Load Balancer Controller Helm repository name."
                            },
                            "helm_chart_version": {
                                "default": "1.4.4",
                                "description": "AWS Load Balancer Controller Helm chart version."
                            },
                            "mod_dependency": {
                                "default": null,
                                "description": "Dependence variable binds all AWS resources allocated by this module, dependent modules reference this variable."
                            },
                            "namespace": {
                                "default": "kube-system",
                                "description": "AWS Load Balancer Controller Helm chart namespace which the service will be created."
                            },
                            "roles": {
                                "default": [],
                                "description": "RBAC roles that give secret access in other namespaces to the lb controller"
                            },
                            "service_account_name": {
                                "default": "aws-alb-ingress-controller",
                                "description": "The kubernetes service account name."
                            },
                            "settings": {
                                "default": {},
                                "description": "Additional settings which will be passed to the Helm chart values, see https://github.com/aws/eks-charts/tree/master/stable/aws-load-balancer-controller#configuration."
                            }
                        }
                    },
                    "version_constraint": "0.7.0",
                    "depends_on": [
                        "module.eks"
                    ]
                }
            }
        }
    },
    "prior_state": {
        "values": {
            "root_module": {
                "resources": [
                    {
                        "address": "module.infra.aws_route53_record.frontend_on_vercel[0]",
                        "mode": "managed",
                        "type": "aws_route53_record",
                        "name": "frontend_on_vercel",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 2,
                        "values": {
                            "alias": [],
                            "allow_overwrite": null,
                            "cidr_routing_policy": [],
                            "failover_routing_policy": [],
                            "fqdn": "app.overmind.tech",
                            "geolocation_routing_policy": [],
                            "geoproximity_routing_policy": [],
                            "health_check_id": "",
                            "id": "BLAH_app.overmind.tech_A",
                            "latency_routing_policy": [],
                            "multivalue_answer_routing_policy": false,
                            "name": "app.overmind.tech",
                            "records": [
                                "1.1.1.1"
                            ],
                            "set_identifier": "",
                            "ttl": 300,
                            "type": "A",
                            "weighted_routing_policy": [],
                            "zone_id": "BLAH"
                        },
                        "sensitive_values": {
                            "alias": [],
                            "cidr_routing_policy": [],
                            "failover_routing_policy": [],
                            "geolocation_routing_policy": [],
                            "geoproximity_routing_policy": [],
                            "latency_routing_policy": [],
                            "records": [
                                false
                            ],
                            "weighted_routing_policy": []
                        },
                        "depends_on": [
                            "module.infra.aws_route53_zone.zone"
                        ]
                    },
                    {
                        "address": "kubernetes_deployment.nats_box",
                        "mode": "managed",
                        "type": "kubernetes_deployment",
                        "name": "nats_box",
                        "provider_name": "registry.terraform.io/hashicorp/kubernetes",
                        "schema_version": 1,
                        "values": {
                            "id": "default/nats-box",
                            "metadata": [
                                {
                                    "annotations": {},
                                    "generate_name": "",
                                    "generation": 9,
                                    "labels": {
                                        "app": "nats-box"
                                    },
                                    "name": "nats-box",
                                    "namespace": "default",
                                    "resource_version": "20425079",
                                    "uid": "25e4fce6-06a8-435b-90f3-ad0c1d8b52f1"
                                }
                            ],
                            "spec": [
                                {
                                    "min_ready_seconds": 0,
                                    "paused": false,
                                    "progress_deadline_seconds": 600,
                                    "replicas": "0",
                                    "revision_history_limit": 10,
                                    "selector": [
                                        {
                                            "match_expressions": [],
                                            "match_labels": {
                                                "app": "nats-box"
                                            }
                                        }
                                    ],
                                    "strategy": [
                                        {
                                            "rolling_update": [
                                                {
                                                    "max_surge": "25%",
                                                    "max_unavailable": "25%"
                                                }
                                            ],
                                            "type": "RollingUpdate"
                                        }
                                    ],
                                    "template": [
                                        {
                                            "metadata": [
                                                {
                                                    "annotations": {},
                                                    "generate_name": "",
                                                    "generation": 0,
                                                    "labels": {
                                                        "app": "nats-box"
                                                    },
                                                    "name": "",
                                                    "namespace": "",
                                                    "resource_version": "",
                                                    "uid": ""
                                                }
                                            ],
                                            "spec": [
                                                {
                                                    "active_deadline_seconds": 0,
                                                    "affinity": [],
                                                    "automount_service_account_token": true,
                                                    "container": [
                                                        {
                                                            "args": [],
                                                            "command": [
                                                                "tail",
                                                                "-f",
                                                                "/dev/null"
                                                            ],
                                                            "env": [],
                                                            "env_from": [],
                                                            "image": "natsio/nats-box:latest",
                                                            "image_pull_policy": "Always",
                                                            "lifecycle": [],
                                                            "liveness_probe": [],
                                                            "name": "nats",
                                                            "port": [],
                                                            "readiness_probe": [],
                                                            "resources": [
                                                                {
                                                                    "limits": {},
                                                                    "requests": {}
                                                                }
                                                            ],
                                                            "security_context": [],
                                                            "startup_probe": [],
                                                            "stdin": false,
                                                            "stdin_once": false,
                                                            "termination_message_path": "/dev/termination-log",
                                                            "termination_message_policy": "File",
                                                            "tty": false,
                                                            "volume_mount": [
                                                                {
                                                                    "mount_path": "/etc/nats",
                                                                    "mount_propagation": "None",
                                                                    "name": "nats-config",
                                                                    "read_only": false,
                                                                    "sub_path": ""
                                                                },
                                                                {
                                                                    "mount_path": "/etc/nats-nkeys",
                                                                    "mount_propagation": "None",
                                                                    "name": "nats-nkeys",
                                                                    "read_only": false,
                                                                    "sub_path": ""
                                                                }
                                                            ],
                                                            "working_dir": ""
                                                        }
                                                    ],
                                                    "dns_config": [],
                                                    "dns_policy": "ClusterFirst",
                                                    "enable_service_links": true,
                                                    "host_aliases": [],
                                                    "host_ipc": false,
                                                    "host_network": false,
                                                    "host_pid": false,
                                                    "hostname": "",
                                                    "image_pull_secrets": [],
                                                    "init_container": [],
                                                    "node_name": "",
                                                    "node_selector": {},
                                                    "priority_class_name": "",
                                                    "readiness_gate": [],
                                                    "restart_policy": "Always",
                                                    "runtime_class_name": "",
                                                    "scheduler_name": "default-scheduler",
                                                    "security_context": [],
                                                    "service_account_name": "",
                                                    "share_process_namespace": false,
                                                    "subdomain": "",
                                                    "termination_grace_period_seconds": 30,
                                                    "toleration": [],
                                                    "topology_spread_constraint": [],
                                                    "volume": [
                                                        {
                                                            "aws_elastic_block_store": [],
                                                            "azure_disk": [],
                                                            "azure_file": [],
                                                            "ceph_fs": [],
                                                            "cinder": [],
                                                            "config_map": [],
                                                            "csi": [],
                                                            "downward_api": [],
                                                            "empty_dir": [],
                                                            "fc": [],
                                                            "flex_volume": [],
                                                            "flocker": [],
                                                            "gce_persistent_disk": [],
                                                            "git_repo": [],
                                                            "glusterfs": [],
                                                            "host_path": [],
                                                            "iscsi": [],
                                                            "local": [],
                                                            "name": "nats-nkeys",
                                                            "nfs": [],
                                                            "persistent_volume_claim": [
                                                                {
                                                                    "claim_name": "nats-nkeys",
                                                                    "read_only": false
                                                                }
                                                            ],
                                                            "photon_persistent_disk": [],
                                                            "projected": [],
                                                            "quobyte": [],
                                                            "rbd": [],
                                                            "secret": [],
                                                            "vsphere_volume": []
                                                        },
                                                        {
                                                            "aws_elastic_block_store": [],
                                                            "azure_disk": [],
                                                            "azure_file": [],
                                                            "ceph_fs": [],
                                                            "cinder": [],
                                                            "config_map": [],
                                                            "csi": [],
                                                            "downward_api": [],
                                                            "empty_dir": [],
                                                            "fc": [],
                                                            "flex_volume": [],
                                                            "flocker": [],
                                                            "gce_persistent_disk": [],
                                                            "git_repo": [],
                                                            "glusterfs": [],
                                                            "host_path": [],
                                                            "iscsi": [],
                                                            "local": [],
                                                            "name": "nats-config",
                                                            "nfs": [],
                                                            "persistent_volume_claim": [
                                                                {
                                                                    "claim_name": "nats-config",
                                                                    "read_only": false
                                                                }
                                                            ],
                                                            "photon_persistent_disk": [],
                                                            "projected": [],
                                                            "quobyte": [],
                                                            "rbd": [],
                                                            "secret": [],
                                                            "vsphere_volume": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "timeouts": {
                                "create": "2m",
                                "delete": "2m",
                                "update": "2m"
                            },
                            "wait_for_rollout": true
                        },
                        "sensitive_values": {
                            "metadata": [
                                {
                                    "annotations": {},
                                    "labels": {}
                                }
                            ],
                            "spec": [
                                {
                                    "selector": [
                                        {
                                            "match_expressions": [],
                                            "match_labels": {}
                                        }
                                    ],
                                    "strategy": [
                                        {
                                            "rolling_update": [
                                                {}
                                            ]
                                        }
                                    ],
                                    "template": [
                                        {
                                            "metadata": [
                                                {
                                                    "annotations": {},
                                                    "labels": {}
                                                }
                                            ],
                                            "spec": [
                                                {
                                                    "affinity": [],
                                                    "container": [
                                                        {
                                                            "args": [],
                                                            "command": [
                                                                false,
                                                                false,
                                                                false
                                                            ],
                                                            "env": [],
                                                            "env_from": [],
                                                            "lifecycle": [],
                                                            "liveness_probe": [],
                                                            "port": [],
                                                            "readiness_probe": [],
                                                            "resources": [
                                                                {
                                                                    "limits": {},
                                                                    "requests": {}
                                                                }
                                                            ],
                                                            "security_context": [],
                                                            "startup_probe": [],
                                                            "volume_mount": [
                                                                {},
                                                                {}
                                                            ]
                                                        }
                                                    ],
                                                    "dns_config": [],
                                                    "host_aliases": [],
                                                    "image_pull_secrets": [],
                                                    "init_container": [],
                                                    "node_selector": {},
                                                    "readiness_gate": [],
                                                    "security_context": [],
                                                    "toleration": [],
                                                    "topology_spread_constraint": [],
                                                    "volume": [
                                                        {
                                                            "aws_elastic_block_store": [],
                                                            "azure_disk": [],
                                                            "azure_file": [],
                                                            "ceph_fs": [],
                                                            "cinder": [],
                                                            "config_map": [],
                                                            "csi": [],
                                                            "downward_api": [],
                                                            "empty_dir": [],
                                                            "fc": [],
                                                            "flex_volume": [],
                                                            "flocker": [],
                                                            "gce_persistent_disk": [],
                                                            "git_repo": [],
                                                            "glusterfs": [],
                                                            "host_path": [],
                                                            "iscsi": [],
                                                            "local": [],
                                                            "nfs": [],
                                                            "persistent_volume_claim": [
                                                                {}
                                                            ],
                                                            "photon_persistent_disk": [],
                                                            "projected": [],
                                                            "quobyte": [],
                                                            "rbd": [],
                                                            "secret": [],
                                                            "vsphere_volume": []
                                                        },
                                                        {
                                                            "aws_elastic_block_store": [],
                                                            "azure_disk": [],
                                                            "azure_file": [],
                                                            "ceph_fs": [],
                                                            "cinder": [],
                                                            "config_map": [],
                                                            "csi": [],
                                                            "downward_api": [],
                                                            "empty_dir": [],
                                                            "fc": [],
                                                            "flex_volume": [],
                                                            "flocker": [],
                                                            "gce_persistent_disk": [],
                                                            "git_repo": [],
                                                            "glusterfs": [],
                                                            "host_path": [],
                                                            "iscsi": [],
                                                            "local": [],
                                                            "nfs": [],
                                                            "persistent_volume_claim": [
                                                                {}
                                                            ],
                                                            "photon_persistent_disk": [],
                                                            "projected": [],
                                                            "quobyte": [],
                                                            "rbd": [],
                                                            "secret": [],
                                                            "vsphere_volume": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "timeouts": {}
                        },
                        "depends_on": [
                            "aws_iam_openid_connect_provider.github",
                            "aws_iam_role.buildkit_connect",
                            "data.aws_availability_zones.available",
                            "data.aws_caller_identity.current",
                            "data.aws_eks_cluster_auth.eks",
                            "data.aws_iam_roles.sso_admins",
                            "data.aws_iam_roles.sso_powerusers",
                            "data.aws_iam_session_context.current",
                            "data.aws_subnets.main_vpc_by_az",
                            "module.eks.aws_cloudwatch_log_group.this",
                            "module.eks.aws_ec2_tag.cluster_primary_security_group",
                            "module.eks.aws_eks_addon.before_compute",
                            "module.eks.aws_eks_addon.this",
                            "module.eks.aws_eks_cluster.this",
                            "module.eks.aws_eks_identity_provider_config.this",
                            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
                            "module.eks.aws_iam_policy.cluster_encryption",
                            "module.eks.aws_iam_policy.cni_ipv6_policy",
                            "module.eks.aws_iam_role.this",
                            "module.eks.aws_iam_role_policy_attachment.additional",
                            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
                            "module.eks.aws_iam_role_policy_attachment.this",
                            "module.eks.aws_security_group.cluster",
                            "module.eks.aws_security_group.node",
                            "module.eks.aws_security_group_rule.cluster",
                            "module.eks.aws_security_group_rule.node",
                            "module.eks.data.aws_caller_identity.current",
                            "module.eks.data.aws_eks_addon_version.this",
                            "module.eks.data.aws_iam_policy_document.assume_role_policy",
                            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
                            "module.eks.data.aws_iam_session_context.current",
                            "module.eks.data.aws_partition.current",
                            "module.eks.data.tls_certificate.this",
                            "module.eks.kubernetes_config_map.aws_auth",
                            "module.eks.kubernetes_config_map_v1_data.aws_auth",
                            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
                            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
                            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
                            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
                            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
                            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
                            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
                            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
                            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
                            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
                            "module.eks.module.fargate_profile.aws_iam_role.this",
                            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
                            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
                            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
                            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
                            "module.eks.module.fargate_profile.data.aws_partition.current",
                            "module.eks.module.kms.aws_kms_alias.this",
                            "module.eks.module.kms.aws_kms_external_key.this",
                            "module.eks.module.kms.aws_kms_grant.this",
                            "module.eks.module.kms.aws_kms_key.this",
                            "module.eks.module.kms.data.aws_caller_identity.current",
                            "module.eks.module.kms.data.aws_iam_policy_document.this",
                            "module.eks.module.kms.data.aws_partition.current",
                            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
                            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
                            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
                            "module.eks.module.self_managed_node_group.aws_iam_role.this",
                            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
                            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
                            "module.eks.module.self_managed_node_group.aws_launch_template.this",
                            "module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
                            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
                            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                            "module.eks.module.self_managed_node_group.data.aws_partition.current",
                            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
                            "module.eks.time_sleep.this",
                            "module.iam_eks_role.aws_iam_role.this",
                            "module.iam_eks_role.data.aws_caller_identity.current",
                            "module.iam_eks_role.data.aws_iam_policy_document.this",
                            "module.iam_eks_role.data.aws_partition.current",
                            "module.vpc.aws_subnet.private",
                            "module.vpc.aws_vpc.this",
                            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                        ]
                    }
                ]
            }
        }
    },
    "timestamp": "2023-07-17T15:48:38Z"
}
