// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: apikeys.proto

package sdp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeyStatus int32

const (
	KeyStatus_KEY_STATUS_UNKNOWN KeyStatus = 0
	// This means the key has been created but we have not yet received the
	// callback from Auth0 which allows us to fetch the access token
	KeyStatus_KEY_STATUS_UNAUTHORIZED KeyStatus = 1
	// Key is ready for use
	KeyStatus_KEY_STATUS_READY KeyStatus = 2
	// There was an error getting the access token from Auth0
	KeyStatus_KEY_STATUS_ERROR KeyStatus = 3
	// The API key has been revoked
	KeyStatus_KEY_STATUS_REVOKED KeyStatus = 4
)

// Enum value maps for KeyStatus.
var (
	KeyStatus_name = map[int32]string{
		0: "KEY_STATUS_UNKNOWN",
		1: "KEY_STATUS_UNAUTHORIZED",
		2: "KEY_STATUS_READY",
		3: "KEY_STATUS_ERROR",
		4: "KEY_STATUS_REVOKED",
	}
	KeyStatus_value = map[string]int32{
		"KEY_STATUS_UNKNOWN":      0,
		"KEY_STATUS_UNAUTHORIZED": 1,
		"KEY_STATUS_READY":        2,
		"KEY_STATUS_ERROR":        3,
		"KEY_STATUS_REVOKED":      4,
	}
)

func (x KeyStatus) Enum() *KeyStatus {
	p := new(KeyStatus)
	*p = x
	return p
}

func (x KeyStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_apikeys_proto_enumTypes[0].Descriptor()
}

func (KeyStatus) Type() protoreflect.EnumType {
	return &file_apikeys_proto_enumTypes[0]
}

func (x KeyStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyStatus.Descriptor instead.
func (KeyStatus) EnumDescriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{0}
}

type APIKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *APIKeyMetadata        `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Properties    *APIKeyProperties      `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *APIKey) Reset() {
	*x = APIKey{}
	mi := &file_apikeys_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIKey) ProtoMessage() {}

func (x *APIKey) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIKey.ProtoReflect.Descriptor instead.
func (*APIKey) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{0}
}

func (x *APIKey) GetMetadata() *APIKeyMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *APIKey) GetProperties() *APIKeyProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

type APIKeyMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of this API key
	Uuid []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// When the API Key was created
	Created *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// The last time the API key was exchanged for an access token
	LastUsed *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=lastUsed,proto3" json:"lastUsed,omitempty"`
	// The actual API key
	Key string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	// The list of scopes that this token has access to
	Scopes []string `protobuf:"bytes,5,rep,name=scopes,proto3" json:"scopes,omitempty"`
	// The status of the key
	Status KeyStatus `protobuf:"varint,6,opt,name=status,proto3,enum=apikeys.KeyStatus" json:"status,omitempty"`
	// The error encountered when authorizing the key. This will only be set if
	// the status is ERROR
	Error         string `protobuf:"bytes,7,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *APIKeyMetadata) Reset() {
	*x = APIKeyMetadata{}
	mi := &file_apikeys_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIKeyMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIKeyMetadata) ProtoMessage() {}

func (x *APIKeyMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIKeyMetadata.ProtoReflect.Descriptor instead.
func (*APIKeyMetadata) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{1}
}

func (x *APIKeyMetadata) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *APIKeyMetadata) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *APIKeyMetadata) GetLastUsed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUsed
	}
	return nil
}

func (x *APIKeyMetadata) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *APIKeyMetadata) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *APIKeyMetadata) GetStatus() KeyStatus {
	if x != nil {
		return x.Status
	}
	return KeyStatus_KEY_STATUS_UNKNOWN
}

func (x *APIKeyMetadata) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type APIKeyProperties struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the API key
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *APIKeyProperties) Reset() {
	*x = APIKeyProperties{}
	mi := &file_apikeys_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIKeyProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIKeyProperties) ProtoMessage() {}

func (x *APIKeyProperties) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIKeyProperties.ProtoReflect.Descriptor instead.
func (*APIKeyProperties) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{2}
}

func (x *APIKeyProperties) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateAPIKeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the key to create
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The scopes that the key should have
	Scopes []string `protobuf:"bytes,2,rep,name=scopes,proto3" json:"scopes,omitempty"`
	// The URL that the user should be redirected to after the whole process is
	// over. This should be a page in the frontend, probably the one they
	// started from, but could also be a detail page for this particular API key
	FinalFrontendRedirect string `protobuf:"bytes,3,opt,name=finalFrontendRedirect,proto3" json:"finalFrontendRedirect,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CreateAPIKeyRequest) Reset() {
	*x = CreateAPIKeyRequest{}
	mi := &file_apikeys_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAPIKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAPIKeyRequest) ProtoMessage() {}

func (x *CreateAPIKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAPIKeyRequest.ProtoReflect.Descriptor instead.
func (*CreateAPIKeyRequest) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{3}
}

func (x *CreateAPIKeyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAPIKeyRequest) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *CreateAPIKeyRequest) GetFinalFrontendRedirect() string {
	if x != nil {
		return x.FinalFrontendRedirect
	}
	return ""
}

type CreateAPIKeyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Details of the newly created API Key
	Key *APIKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The URL that the user should visit in order to authorize the newly
	// created key. This will allow Auth0 to generate a code that will be passed
	// to the API server via a callback. This code is then exchanged by the API
	// server for an access token and refresh token. The user will be redirected
	// back to the frontend once this process is complete.
	//
	// The authorizeURL will contain a `state` paremeter which is a UUID that
	// can be used to look up the API key in the database once the callback is
	// received
	AuthorizeURL  string `protobuf:"bytes,2,opt,name=authorizeURL,proto3" json:"authorizeURL,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAPIKeyResponse) Reset() {
	*x = CreateAPIKeyResponse{}
	mi := &file_apikeys_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAPIKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAPIKeyResponse) ProtoMessage() {}

func (x *CreateAPIKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAPIKeyResponse.ProtoReflect.Descriptor instead.
func (*CreateAPIKeyResponse) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{4}
}

func (x *CreateAPIKeyResponse) GetKey() *APIKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *CreateAPIKeyResponse) GetAuthorizeURL() string {
	if x != nil {
		return x.AuthorizeURL
	}
	return ""
}

type RefreshAPIKeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The UUID of the API key to refresh
	Uuid []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// The URL that the user should be redirected to after the whole process is
	// over. This should be a page in the frontend, probably the one they
	// started from, but could also be a detail page for this particular API key
	FinalFrontendRedirect string `protobuf:"bytes,2,opt,name=finalFrontendRedirect,proto3" json:"finalFrontendRedirect,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *RefreshAPIKeyRequest) Reset() {
	*x = RefreshAPIKeyRequest{}
	mi := &file_apikeys_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshAPIKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshAPIKeyRequest) ProtoMessage() {}

func (x *RefreshAPIKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshAPIKeyRequest.ProtoReflect.Descriptor instead.
func (*RefreshAPIKeyRequest) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{5}
}

func (x *RefreshAPIKeyRequest) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *RefreshAPIKeyRequest) GetFinalFrontendRedirect() string {
	if x != nil {
		return x.FinalFrontendRedirect
	}
	return ""
}

type RefreshAPIKeyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Refreshing the API key will return the same response as CreateAPIKey, as
	// it is basically the a new Key, just under the same UUID and reusing the
	// old info.
	Response      *CreateAPIKeyResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshAPIKeyResponse) Reset() {
	*x = RefreshAPIKeyResponse{}
	mi := &file_apikeys_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshAPIKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshAPIKeyResponse) ProtoMessage() {}

func (x *RefreshAPIKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshAPIKeyResponse.ProtoReflect.Descriptor instead.
func (*RefreshAPIKeyResponse) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{6}
}

func (x *RefreshAPIKeyResponse) GetResponse() *CreateAPIKeyResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetAPIKeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The UUID of the API Key to get
	Uuid          []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAPIKeyRequest) Reset() {
	*x = GetAPIKeyRequest{}
	mi := &file_apikeys_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAPIKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAPIKeyRequest) ProtoMessage() {}

func (x *GetAPIKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAPIKeyRequest.ProtoReflect.Descriptor instead.
func (*GetAPIKeyRequest) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{7}
}

func (x *GetAPIKeyRequest) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

type GetAPIKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *APIKey                `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAPIKeyResponse) Reset() {
	*x = GetAPIKeyResponse{}
	mi := &file_apikeys_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAPIKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAPIKeyResponse) ProtoMessage() {}

func (x *GetAPIKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAPIKeyResponse.ProtoReflect.Descriptor instead.
func (*GetAPIKeyResponse) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{8}
}

func (x *GetAPIKeyResponse) GetKey() *APIKey {
	if x != nil {
		return x.Key
	}
	return nil
}

type UpdateAPIKeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The UUID of the API key to update
	Uuid []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// New properties to update
	Properties    *APIKeyProperties `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAPIKeyRequest) Reset() {
	*x = UpdateAPIKeyRequest{}
	mi := &file_apikeys_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAPIKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAPIKeyRequest) ProtoMessage() {}

func (x *UpdateAPIKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAPIKeyRequest.ProtoReflect.Descriptor instead.
func (*UpdateAPIKeyRequest) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateAPIKeyRequest) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *UpdateAPIKeyRequest) GetProperties() *APIKeyProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

type UpdateAPIKeyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The updated API key
	Key           *APIKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAPIKeyResponse) Reset() {
	*x = UpdateAPIKeyResponse{}
	mi := &file_apikeys_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAPIKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAPIKeyResponse) ProtoMessage() {}

func (x *UpdateAPIKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAPIKeyResponse.ProtoReflect.Descriptor instead.
func (*UpdateAPIKeyResponse) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateAPIKeyResponse) GetKey() *APIKey {
	if x != nil {
		return x.Key
	}
	return nil
}

type ListAPIKeysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAPIKeysRequest) Reset() {
	*x = ListAPIKeysRequest{}
	mi := &file_apikeys_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAPIKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAPIKeysRequest) ProtoMessage() {}

func (x *ListAPIKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAPIKeysRequest.ProtoReflect.Descriptor instead.
func (*ListAPIKeysRequest) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{11}
}

type ListAPIKeysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keys          []*APIKey              `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAPIKeysResponse) Reset() {
	*x = ListAPIKeysResponse{}
	mi := &file_apikeys_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAPIKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAPIKeysResponse) ProtoMessage() {}

func (x *ListAPIKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAPIKeysResponse.ProtoReflect.Descriptor instead.
func (*ListAPIKeysResponse) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{12}
}

func (x *ListAPIKeysResponse) GetKeys() []*APIKey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type DeleteAPIKeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The UUID of the API key to delete
	Uuid          []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAPIKeyRequest) Reset() {
	*x = DeleteAPIKeyRequest{}
	mi := &file_apikeys_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAPIKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAPIKeyRequest) ProtoMessage() {}

func (x *DeleteAPIKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAPIKeyRequest.ProtoReflect.Descriptor instead.
func (*DeleteAPIKeyRequest) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteAPIKeyRequest) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

type DeleteAPIKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAPIKeyResponse) Reset() {
	*x = DeleteAPIKeyResponse{}
	mi := &file_apikeys_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAPIKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAPIKeyResponse) ProtoMessage() {}

func (x *DeleteAPIKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAPIKeyResponse.ProtoReflect.Descriptor instead.
func (*DeleteAPIKeyResponse) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{14}
}

type ExchangeKeyForTokenRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The API Key that you want to exchange for an Oauth access token
	ApiKey        string `protobuf:"bytes,1,opt,name=apiKey,proto3" json:"apiKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeKeyForTokenRequest) Reset() {
	*x = ExchangeKeyForTokenRequest{}
	mi := &file_apikeys_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeKeyForTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeKeyForTokenRequest) ProtoMessage() {}

func (x *ExchangeKeyForTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeKeyForTokenRequest.ProtoReflect.Descriptor instead.
func (*ExchangeKeyForTokenRequest) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{15}
}

func (x *ExchangeKeyForTokenRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type ExchangeKeyForTokenResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The access token that can now be use to authenticate to Overmind and its
	// APIs
	AccessToken   string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeKeyForTokenResponse) Reset() {
	*x = ExchangeKeyForTokenResponse{}
	mi := &file_apikeys_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeKeyForTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeKeyForTokenResponse) ProtoMessage() {}

func (x *ExchangeKeyForTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeKeyForTokenResponse.ProtoReflect.Descriptor instead.
func (*ExchangeKeyForTokenResponse) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{16}
}

func (x *ExchangeKeyForTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

var File_apikeys_proto protoreflect.FileDescriptor

const file_apikeys_proto_rawDesc = "" +
	"\n" +
	"\rapikeys.proto\x12\aapikeys\x1a\x1fgoogle/protobuf/timestamp.proto\"x\n" +
	"\x06APIKey\x123\n" +
	"\bmetadata\x18\x01 \x01(\v2\x17.apikeys.APIKeyMetadataR\bmetadata\x129\n" +
	"\n" +
	"properties\x18\x02 \x01(\v2\x19.apikeys.APIKeyPropertiesR\n" +
	"properties\"\xfe\x01\n" +
	"\x0eAPIKeyMetadata\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\fR\x04uuid\x124\n" +
	"\acreated\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x126\n" +
	"\blastUsed\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\blastUsed\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x12\x16\n" +
	"\x06scopes\x18\x05 \x03(\tR\x06scopes\x12*\n" +
	"\x06status\x18\x06 \x01(\x0e2\x12.apikeys.KeyStatusR\x06status\x12\x14\n" +
	"\x05error\x18\a \x01(\tR\x05error\"&\n" +
	"\x10APIKeyProperties\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"w\n" +
	"\x13CreateAPIKeyRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06scopes\x18\x02 \x03(\tR\x06scopes\x124\n" +
	"\x15finalFrontendRedirect\x18\x03 \x01(\tR\x15finalFrontendRedirect\"]\n" +
	"\x14CreateAPIKeyResponse\x12!\n" +
	"\x03key\x18\x01 \x01(\v2\x0f.apikeys.APIKeyR\x03key\x12\"\n" +
	"\fauthorizeURL\x18\x02 \x01(\tR\fauthorizeURL\"`\n" +
	"\x14RefreshAPIKeyRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\fR\x04uuid\x124\n" +
	"\x15finalFrontendRedirect\x18\x02 \x01(\tR\x15finalFrontendRedirect\"R\n" +
	"\x15RefreshAPIKeyResponse\x129\n" +
	"\bresponse\x18\x01 \x01(\v2\x1d.apikeys.CreateAPIKeyResponseR\bresponse\"&\n" +
	"\x10GetAPIKeyRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\fR\x04uuid\"6\n" +
	"\x11GetAPIKeyResponse\x12!\n" +
	"\x03key\x18\x01 \x01(\v2\x0f.apikeys.APIKeyR\x03key\"d\n" +
	"\x13UpdateAPIKeyRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\fR\x04uuid\x129\n" +
	"\n" +
	"properties\x18\x02 \x01(\v2\x19.apikeys.APIKeyPropertiesR\n" +
	"properties\"9\n" +
	"\x14UpdateAPIKeyResponse\x12!\n" +
	"\x03key\x18\x01 \x01(\v2\x0f.apikeys.APIKeyR\x03key\"\x14\n" +
	"\x12ListAPIKeysRequest\":\n" +
	"\x13ListAPIKeysResponse\x12#\n" +
	"\x04keys\x18\x01 \x03(\v2\x0f.apikeys.APIKeyR\x04keys\")\n" +
	"\x13DeleteAPIKeyRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\fR\x04uuid\"\x16\n" +
	"\x14DeleteAPIKeyResponse\"4\n" +
	"\x1aExchangeKeyForTokenRequest\x12\x16\n" +
	"\x06apiKey\x18\x01 \x01(\tR\x06apiKey\"?\n" +
	"\x1bExchangeKeyForTokenResponse\x12 \n" +
	"\vaccessToken\x18\x01 \x01(\tR\vaccessToken*\x84\x01\n" +
	"\tKeyStatus\x12\x16\n" +
	"\x12KEY_STATUS_UNKNOWN\x10\x00\x12\x1b\n" +
	"\x17KEY_STATUS_UNAUTHORIZED\x10\x01\x12\x14\n" +
	"\x10KEY_STATUS_READY\x10\x02\x12\x14\n" +
	"\x10KEY_STATUS_ERROR\x10\x03\x12\x16\n" +
	"\x12KEY_STATUS_REVOKED\x10\x042\xb6\x04\n" +
	"\rApiKeyService\x12K\n" +
	"\fCreateAPIKey\x12\x1c.apikeys.CreateAPIKeyRequest\x1a\x1d.apikeys.CreateAPIKeyResponse\x12N\n" +
	"\rRefreshAPIKey\x12\x1d.apikeys.RefreshAPIKeyRequest\x1a\x1e.apikeys.RefreshAPIKeyResponse\x12B\n" +
	"\tGetAPIKey\x12\x19.apikeys.GetAPIKeyRequest\x1a\x1a.apikeys.GetAPIKeyResponse\x12K\n" +
	"\fUpdateAPIKey\x12\x1c.apikeys.UpdateAPIKeyRequest\x1a\x1d.apikeys.UpdateAPIKeyResponse\x12H\n" +
	"\vListAPIKeys\x12\x1b.apikeys.ListAPIKeysRequest\x1a\x1c.apikeys.ListAPIKeysResponse\x12K\n" +
	"\fDeleteAPIKey\x12\x1c.apikeys.DeleteAPIKeyRequest\x1a\x1d.apikeys.DeleteAPIKeyResponse\x12`\n" +
	"\x13ExchangeKeyForToken\x12#.apikeys.ExchangeKeyForTokenRequest\x1a$.apikeys.ExchangeKeyForTokenResponseB.Z,github.com/overmindtech/cli/sdp-go;sdpb\x06proto3"

var (
	file_apikeys_proto_rawDescOnce sync.Once
	file_apikeys_proto_rawDescData []byte
)

func file_apikeys_proto_rawDescGZIP() []byte {
	file_apikeys_proto_rawDescOnce.Do(func() {
		file_apikeys_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_apikeys_proto_rawDesc), len(file_apikeys_proto_rawDesc)))
	})
	return file_apikeys_proto_rawDescData
}

var file_apikeys_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_apikeys_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_apikeys_proto_goTypes = []any{
	(KeyStatus)(0),                      // 0: apikeys.KeyStatus
	(*APIKey)(nil),                      // 1: apikeys.APIKey
	(*APIKeyMetadata)(nil),              // 2: apikeys.APIKeyMetadata
	(*APIKeyProperties)(nil),            // 3: apikeys.APIKeyProperties
	(*CreateAPIKeyRequest)(nil),         // 4: apikeys.CreateAPIKeyRequest
	(*CreateAPIKeyResponse)(nil),        // 5: apikeys.CreateAPIKeyResponse
	(*RefreshAPIKeyRequest)(nil),        // 6: apikeys.RefreshAPIKeyRequest
	(*RefreshAPIKeyResponse)(nil),       // 7: apikeys.RefreshAPIKeyResponse
	(*GetAPIKeyRequest)(nil),            // 8: apikeys.GetAPIKeyRequest
	(*GetAPIKeyResponse)(nil),           // 9: apikeys.GetAPIKeyResponse
	(*UpdateAPIKeyRequest)(nil),         // 10: apikeys.UpdateAPIKeyRequest
	(*UpdateAPIKeyResponse)(nil),        // 11: apikeys.UpdateAPIKeyResponse
	(*ListAPIKeysRequest)(nil),          // 12: apikeys.ListAPIKeysRequest
	(*ListAPIKeysResponse)(nil),         // 13: apikeys.ListAPIKeysResponse
	(*DeleteAPIKeyRequest)(nil),         // 14: apikeys.DeleteAPIKeyRequest
	(*DeleteAPIKeyResponse)(nil),        // 15: apikeys.DeleteAPIKeyResponse
	(*ExchangeKeyForTokenRequest)(nil),  // 16: apikeys.ExchangeKeyForTokenRequest
	(*ExchangeKeyForTokenResponse)(nil), // 17: apikeys.ExchangeKeyForTokenResponse
	(*timestamppb.Timestamp)(nil),       // 18: google.protobuf.Timestamp
}
var file_apikeys_proto_depIdxs = []int32{
	2,  // 0: apikeys.APIKey.metadata:type_name -> apikeys.APIKeyMetadata
	3,  // 1: apikeys.APIKey.properties:type_name -> apikeys.APIKeyProperties
	18, // 2: apikeys.APIKeyMetadata.created:type_name -> google.protobuf.Timestamp
	18, // 3: apikeys.APIKeyMetadata.lastUsed:type_name -> google.protobuf.Timestamp
	0,  // 4: apikeys.APIKeyMetadata.status:type_name -> apikeys.KeyStatus
	1,  // 5: apikeys.CreateAPIKeyResponse.key:type_name -> apikeys.APIKey
	5,  // 6: apikeys.RefreshAPIKeyResponse.response:type_name -> apikeys.CreateAPIKeyResponse
	1,  // 7: apikeys.GetAPIKeyResponse.key:type_name -> apikeys.APIKey
	3,  // 8: apikeys.UpdateAPIKeyRequest.properties:type_name -> apikeys.APIKeyProperties
	1,  // 9: apikeys.UpdateAPIKeyResponse.key:type_name -> apikeys.APIKey
	1,  // 10: apikeys.ListAPIKeysResponse.keys:type_name -> apikeys.APIKey
	4,  // 11: apikeys.ApiKeyService.CreateAPIKey:input_type -> apikeys.CreateAPIKeyRequest
	6,  // 12: apikeys.ApiKeyService.RefreshAPIKey:input_type -> apikeys.RefreshAPIKeyRequest
	8,  // 13: apikeys.ApiKeyService.GetAPIKey:input_type -> apikeys.GetAPIKeyRequest
	10, // 14: apikeys.ApiKeyService.UpdateAPIKey:input_type -> apikeys.UpdateAPIKeyRequest
	12, // 15: apikeys.ApiKeyService.ListAPIKeys:input_type -> apikeys.ListAPIKeysRequest
	14, // 16: apikeys.ApiKeyService.DeleteAPIKey:input_type -> apikeys.DeleteAPIKeyRequest
	16, // 17: apikeys.ApiKeyService.ExchangeKeyForToken:input_type -> apikeys.ExchangeKeyForTokenRequest
	5,  // 18: apikeys.ApiKeyService.CreateAPIKey:output_type -> apikeys.CreateAPIKeyResponse
	7,  // 19: apikeys.ApiKeyService.RefreshAPIKey:output_type -> apikeys.RefreshAPIKeyResponse
	9,  // 20: apikeys.ApiKeyService.GetAPIKey:output_type -> apikeys.GetAPIKeyResponse
	11, // 21: apikeys.ApiKeyService.UpdateAPIKey:output_type -> apikeys.UpdateAPIKeyResponse
	13, // 22: apikeys.ApiKeyService.ListAPIKeys:output_type -> apikeys.ListAPIKeysResponse
	15, // 23: apikeys.ApiKeyService.DeleteAPIKey:output_type -> apikeys.DeleteAPIKeyResponse
	17, // 24: apikeys.ApiKeyService.ExchangeKeyForToken:output_type -> apikeys.ExchangeKeyForTokenResponse
	18, // [18:25] is the sub-list for method output_type
	11, // [11:18] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_apikeys_proto_init() }
func file_apikeys_proto_init() {
	if File_apikeys_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_apikeys_proto_rawDesc), len(file_apikeys_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apikeys_proto_goTypes,
		DependencyIndexes: file_apikeys_proto_depIdxs,
		EnumInfos:         file_apikeys_proto_enumTypes,
		MessageInfos:      file_apikeys_proto_msgTypes,
	}.Build()
	File_apikeys_proto = out.File
	file_apikeys_proto_goTypes = nil
	file_apikeys_proto_depIdxs = nil
}
