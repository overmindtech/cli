// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: changes.proto

package sdp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ItemDiffStatus int32

const (
	ItemDiffStatus_ITEM_DIFF_STATUS_UNSPECIFIED ItemDiffStatus = 0
	ItemDiffStatus_ITEM_DIFF_STATUS_UNCHANGED   ItemDiffStatus = 1
	ItemDiffStatus_ITEM_DIFF_STATUS_CREATED     ItemDiffStatus = 2
	ItemDiffStatus_ITEM_DIFF_STATUS_UPDATED     ItemDiffStatus = 3
	ItemDiffStatus_ITEM_DIFF_STATUS_DELETED     ItemDiffStatus = 4
	ItemDiffStatus_ITEM_DIFF_STATUS_REPLACED    ItemDiffStatus = 5
)

// Enum value maps for ItemDiffStatus.
var (
	ItemDiffStatus_name = map[int32]string{
		0: "ITEM_DIFF_STATUS_UNSPECIFIED",
		1: "ITEM_DIFF_STATUS_UNCHANGED",
		2: "ITEM_DIFF_STATUS_CREATED",
		3: "ITEM_DIFF_STATUS_UPDATED",
		4: "ITEM_DIFF_STATUS_DELETED",
		5: "ITEM_DIFF_STATUS_REPLACED",
	}
	ItemDiffStatus_value = map[string]int32{
		"ITEM_DIFF_STATUS_UNSPECIFIED": 0,
		"ITEM_DIFF_STATUS_UNCHANGED":   1,
		"ITEM_DIFF_STATUS_CREATED":     2,
		"ITEM_DIFF_STATUS_UPDATED":     3,
		"ITEM_DIFF_STATUS_DELETED":     4,
		"ITEM_DIFF_STATUS_REPLACED":    5,
	}
)

func (x ItemDiffStatus) Enum() *ItemDiffStatus {
	p := new(ItemDiffStatus)
	*p = x
	return p
}

func (x ItemDiffStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemDiffStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_changes_proto_enumTypes[0].Descriptor()
}

func (ItemDiffStatus) Type() protoreflect.EnumType {
	return &file_changes_proto_enumTypes[0]
}

func (x ItemDiffStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemDiffStatus.Descriptor instead.
func (ItemDiffStatus) EnumDescriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{0}
}

type ChangeStatus int32

const (
	// The change has been created, but the blast radius has not yet been
	// calculated. The blast radius can be calculated using the
	// `CalculateBlastRadius` RPC.
	ChangeStatus_CHANGE_STATUS_UNSPECIFIED ChangeStatus = 0
	// The blast radius has been calculated, but the change has not yet started.
	// The change can be started using the `StartChange` RPC.
	ChangeStatus_CHANGE_STATUS_DEFINING ChangeStatus = 1
	// The change is in progress. The change can be ended using the `EndChange`
	// RPC.
	ChangeStatus_CHANGE_STATUS_HAPPENING ChangeStatus = 2
	// The change has been ended, but the results have not yet been processed.
	ChangeStatus_CHANGE_STATUS_PROCESSING ChangeStatus = 3
	// The change has been ended and the results have been processed.
	ChangeStatus_CHANGE_STATUS_DONE ChangeStatus = 4
)

// Enum value maps for ChangeStatus.
var (
	ChangeStatus_name = map[int32]string{
		0: "CHANGE_STATUS_UNSPECIFIED",
		1: "CHANGE_STATUS_DEFINING",
		2: "CHANGE_STATUS_HAPPENING",
		3: "CHANGE_STATUS_PROCESSING",
		4: "CHANGE_STATUS_DONE",
	}
	ChangeStatus_value = map[string]int32{
		"CHANGE_STATUS_UNSPECIFIED": 0,
		"CHANGE_STATUS_DEFINING":    1,
		"CHANGE_STATUS_HAPPENING":   2,
		"CHANGE_STATUS_PROCESSING":  3,
		"CHANGE_STATUS_DONE":        4,
	}
)

func (x ChangeStatus) Enum() *ChangeStatus {
	p := new(ChangeStatus)
	*p = x
	return p
}

func (x ChangeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_changes_proto_enumTypes[1].Descriptor()
}

func (ChangeStatus) Type() protoreflect.EnumType {
	return &file_changes_proto_enumTypes[1]
}

func (x ChangeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeStatus.Descriptor instead.
func (ChangeStatus) EnumDescriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{1}
}

type OnboardingStatus int32

const (
	OnboardingStatus_ONBOARDING_STATUS_UNSPECIFIED     OnboardingStatus = 0
	OnboardingStatus_ONBOARDING_STATUS_ADD_AWS_ACCOUNT OnboardingStatus = 1
	OnboardingStatus_ONBOARDING_STATUS_ADD_APP         OnboardingStatus = 2
	OnboardingStatus_ONBOARDING_STATUS_CREATE_CHANGE   OnboardingStatus = 3
	OnboardingStatus_ONBOARDING_STATUS_SIMULATE_CHANGE OnboardingStatus = 4
	OnboardingStatus_ONBOARDING_STATUS_DONE            OnboardingStatus = 5
)

// Enum value maps for OnboardingStatus.
var (
	OnboardingStatus_name = map[int32]string{
		0: "ONBOARDING_STATUS_UNSPECIFIED",
		1: "ONBOARDING_STATUS_ADD_AWS_ACCOUNT",
		2: "ONBOARDING_STATUS_ADD_APP",
		3: "ONBOARDING_STATUS_CREATE_CHANGE",
		4: "ONBOARDING_STATUS_SIMULATE_CHANGE",
		5: "ONBOARDING_STATUS_DONE",
	}
	OnboardingStatus_value = map[string]int32{
		"ONBOARDING_STATUS_UNSPECIFIED":     0,
		"ONBOARDING_STATUS_ADD_AWS_ACCOUNT": 1,
		"ONBOARDING_STATUS_ADD_APP":         2,
		"ONBOARDING_STATUS_CREATE_CHANGE":   3,
		"ONBOARDING_STATUS_SIMULATE_CHANGE": 4,
		"ONBOARDING_STATUS_DONE":            5,
	}
)

func (x OnboardingStatus) Enum() *OnboardingStatus {
	p := new(OnboardingStatus)
	*p = x
	return p
}

func (x OnboardingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OnboardingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_changes_proto_enumTypes[2].Descriptor()
}

func (OnboardingStatus) Type() protoreflect.EnumType {
	return &file_changes_proto_enumTypes[2]
}

func (x OnboardingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OnboardingStatus.Descriptor instead.
func (OnboardingStatus) EnumDescriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{2}
}

// origin of auto-tagging rules
// this is an enum of file or ui provided rules
type ChangeProperties_AutoTaggingRuleSource int32

const (
	ChangeProperties_AUTO_TAGGING_RULE_SOURCE_UNSPECIFIED ChangeProperties_AutoTaggingRuleSource = 0
	ChangeProperties_AUTO_TAGGING_RULE_SOURCE_FILE        ChangeProperties_AutoTaggingRuleSource = 1
	ChangeProperties_AUTO_TAGGING_RULE_SOURCE_UI          ChangeProperties_AutoTaggingRuleSource = 2
)

// Enum value maps for ChangeProperties_AutoTaggingRuleSource.
var (
	ChangeProperties_AutoTaggingRuleSource_name = map[int32]string{
		0: "AUTO_TAGGING_RULE_SOURCE_UNSPECIFIED",
		1: "AUTO_TAGGING_RULE_SOURCE_FILE",
		2: "AUTO_TAGGING_RULE_SOURCE_UI",
	}
	ChangeProperties_AutoTaggingRuleSource_value = map[string]int32{
		"AUTO_TAGGING_RULE_SOURCE_UNSPECIFIED": 0,
		"AUTO_TAGGING_RULE_SOURCE_FILE":        1,
		"AUTO_TAGGING_RULE_SOURCE_UI":          2,
	}
)

func (x ChangeProperties_AutoTaggingRuleSource) Enum() *ChangeProperties_AutoTaggingRuleSource {
	p := new(ChangeProperties_AutoTaggingRuleSource)
	*p = x
	return p
}

func (x ChangeProperties_AutoTaggingRuleSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeProperties_AutoTaggingRuleSource) Descriptor() protoreflect.EnumDescriptor {
	return file_changes_proto_enumTypes[3].Descriptor()
}

func (ChangeProperties_AutoTaggingRuleSource) Type() protoreflect.EnumType {
	return &file_changes_proto_enumTypes[3]
}

func (x ChangeProperties_AutoTaggingRuleSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeProperties_AutoTaggingRuleSource.Descriptor instead.
func (ChangeProperties_AutoTaggingRuleSource) EnumDescriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{69, 0}
}

type CalculateBlastRadiusResponse_State int32

const (
	// No state has been specified
	CalculateBlastRadiusResponse_STATE_UNSPECIFIED CalculateBlastRadiusResponse_State = 0
	// The blast radius is being calculated.
	CalculateBlastRadiusResponse_STATE_DISCOVERING CalculateBlastRadiusResponse_State = 1
	// The blast radius has been calculated and is being saved
	CalculateBlastRadiusResponse_STATE_SAVING CalculateBlastRadiusResponse_State = 2
	// Determining which apps are within the blast radius
	CalculateBlastRadiusResponse_STATE_FINDING_APPS CalculateBlastRadiusResponse_State = 3
	// Everything is complete
	CalculateBlastRadiusResponse_STATE_DONE CalculateBlastRadiusResponse_State = 4
)

// Enum value maps for CalculateBlastRadiusResponse_State.
var (
	CalculateBlastRadiusResponse_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "STATE_DISCOVERING",
		2: "STATE_SAVING",
		3: "STATE_FINDING_APPS",
		4: "STATE_DONE",
	}
	CalculateBlastRadiusResponse_State_value = map[string]int32{
		"STATE_UNSPECIFIED":  0,
		"STATE_DISCOVERING":  1,
		"STATE_SAVING":       2,
		"STATE_FINDING_APPS": 3,
		"STATE_DONE":         4,
	}
)

func (x CalculateBlastRadiusResponse_State) Enum() *CalculateBlastRadiusResponse_State {
	p := new(CalculateBlastRadiusResponse_State)
	*p = x
	return p
}

func (x CalculateBlastRadiusResponse_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CalculateBlastRadiusResponse_State) Descriptor() protoreflect.EnumDescriptor {
	return file_changes_proto_enumTypes[4].Descriptor()
}

func (CalculateBlastRadiusResponse_State) Type() protoreflect.EnumType {
	return &file_changes_proto_enumTypes[4]
}

func (x CalculateBlastRadiusResponse_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CalculateBlastRadiusResponse_State.Descriptor instead.
func (CalculateBlastRadiusResponse_State) EnumDescriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{90, 0}
}

type StartChangeResponse_State int32

const (
	// No state has been specified
	StartChangeResponse_STATE_UNSPECIFIED StartChangeResponse_State = 0
	// Snapshot is being taken
	StartChangeResponse_STATE_TAKING_SNAPSHOT StartChangeResponse_State = 1
	// Snapshot is being saved
	StartChangeResponse_STATE_SAVING_SNAPSHOT StartChangeResponse_State = 2
	// Everything is complete
	StartChangeResponse_STATE_DONE StartChangeResponse_State = 3
)

// Enum value maps for StartChangeResponse_State.
var (
	StartChangeResponse_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "STATE_TAKING_SNAPSHOT",
		2: "STATE_SAVING_SNAPSHOT",
		3: "STATE_DONE",
	}
	StartChangeResponse_State_value = map[string]int32{
		"STATE_UNSPECIFIED":     0,
		"STATE_TAKING_SNAPSHOT": 1,
		"STATE_SAVING_SNAPSHOT": 2,
		"STATE_DONE":            3,
	}
)

func (x StartChangeResponse_State) Enum() *StartChangeResponse_State {
	p := new(StartChangeResponse_State)
	*p = x
	return p
}

func (x StartChangeResponse_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StartChangeResponse_State) Descriptor() protoreflect.EnumDescriptor {
	return file_changes_proto_enumTypes[5].Descriptor()
}

func (StartChangeResponse_State) Type() protoreflect.EnumType {
	return &file_changes_proto_enumTypes[5]
}

func (x StartChangeResponse_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StartChangeResponse_State.Descriptor instead.
func (StartChangeResponse_State) EnumDescriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{92, 0}
}

type EndChangeResponse_State int32

const (
	// No state has been specified
	EndChangeResponse_STATE_UNSPECIFIED EndChangeResponse_State = 0
	// Snapshot is being taken
	EndChangeResponse_STATE_TAKING_SNAPSHOT EndChangeResponse_State = 1
	// Snapshot is being saved
	EndChangeResponse_STATE_SAVING_SNAPSHOT EndChangeResponse_State = 2
	// Everything is complete
	EndChangeResponse_STATE_DONE EndChangeResponse_State = 3
)

// Enum value maps for EndChangeResponse_State.
var (
	EndChangeResponse_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "STATE_TAKING_SNAPSHOT",
		2: "STATE_SAVING_SNAPSHOT",
		3: "STATE_DONE",
	}
	EndChangeResponse_State_value = map[string]int32{
		"STATE_UNSPECIFIED":     0,
		"STATE_TAKING_SNAPSHOT": 1,
		"STATE_SAVING_SNAPSHOT": 2,
		"STATE_DONE":            3,
	}
)

func (x EndChangeResponse_State) Enum() *EndChangeResponse_State {
	p := new(EndChangeResponse_State)
	*p = x
	return p
}

func (x EndChangeResponse_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EndChangeResponse_State) Descriptor() protoreflect.EnumDescriptor {
	return file_changes_proto_enumTypes[6].Descriptor()
}

func (EndChangeResponse_State) Type() protoreflect.EnumType {
	return &file_changes_proto_enumTypes[6]
}

func (x EndChangeResponse_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EndChangeResponse_State.Descriptor instead.
func (EndChangeResponse_State) EnumDescriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{94, 0}
}

type Risk_Severity int32

const (
	Risk_SEVERITY_UNSPECIFIED Risk_Severity = 0
	Risk_SEVERITY_LOW         Risk_Severity = 1
	Risk_SEVERITY_MEDIUM      Risk_Severity = 2
	Risk_SEVERITY_HIGH        Risk_Severity = 3
)

// Enum value maps for Risk_Severity.
var (
	Risk_Severity_name = map[int32]string{
		0: "SEVERITY_UNSPECIFIED",
		1: "SEVERITY_LOW",
		2: "SEVERITY_MEDIUM",
		3: "SEVERITY_HIGH",
	}
	Risk_Severity_value = map[string]int32{
		"SEVERITY_UNSPECIFIED": 0,
		"SEVERITY_LOW":         1,
		"SEVERITY_MEDIUM":      2,
		"SEVERITY_HIGH":        3,
	}
)

func (x Risk_Severity) Enum() *Risk_Severity {
	p := new(Risk_Severity)
	*p = x
	return p
}

func (x Risk_Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Risk_Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_changes_proto_enumTypes[7].Descriptor()
}

func (Risk_Severity) Type() protoreflect.EnumType {
	return &file_changes_proto_enumTypes[7]
}

func (x Risk_Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Risk_Severity.Descriptor instead.
func (Risk_Severity) EnumDescriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{104, 0}
}

type ChangeAnalysisStatus_Status int32

const (
	ChangeAnalysisStatus_STATUS_UNSPECIFIED ChangeAnalysisStatus_Status = 0
	ChangeAnalysisStatus_STATUS_INPROGRESS  ChangeAnalysisStatus_Status = 1
	ChangeAnalysisStatus_STATUS_SKIPPED     ChangeAnalysisStatus_Status = 2
	ChangeAnalysisStatus_STATUS_DONE        ChangeAnalysisStatus_Status = 3
	ChangeAnalysisStatus_STATUS_ERROR       ChangeAnalysisStatus_Status = 4
)

// Enum value maps for ChangeAnalysisStatus_Status.
var (
	ChangeAnalysisStatus_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_INPROGRESS",
		2: "STATUS_SKIPPED",
		3: "STATUS_DONE",
		4: "STATUS_ERROR",
	}
	ChangeAnalysisStatus_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_INPROGRESS":  1,
		"STATUS_SKIPPED":     2,
		"STATUS_DONE":        3,
		"STATUS_ERROR":       4,
	}
)

func (x ChangeAnalysisStatus_Status) Enum() *ChangeAnalysisStatus_Status {
	p := new(ChangeAnalysisStatus_Status)
	*p = x
	return p
}

func (x ChangeAnalysisStatus_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeAnalysisStatus_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_changes_proto_enumTypes[8].Descriptor()
}

func (ChangeAnalysisStatus_Status) Type() protoreflect.EnumType {
	return &file_changes_proto_enumTypes[8]
}

func (x ChangeAnalysisStatus_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeAnalysisStatus_Status.Descriptor instead.
func (ChangeAnalysisStatus_Status) EnumDescriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{105, 0}
}

type ChangeAnalysisStatus_ProgressMilestone_Status int32

const (
	// The milestone hasn't been reached yet
	ChangeAnalysisStatus_ProgressMilestone_STATUS_PENDING ChangeAnalysisStatus_ProgressMilestone_Status = 0
	// The milestone is currently being worked on
	ChangeAnalysisStatus_ProgressMilestone_STATUS_INPROGRESS ChangeAnalysisStatus_ProgressMilestone_Status = 1
	// The milestone has been completed
	ChangeAnalysisStatus_ProgressMilestone_STATUS_DONE ChangeAnalysisStatus_ProgressMilestone_Status = 2
	// The milestone failed
	ChangeAnalysisStatus_ProgressMilestone_STATUS_ERROR ChangeAnalysisStatus_ProgressMilestone_Status = 3
	// The milestone was skipped. This will happen to future milestones if
	// there is an error. For example an error at step 1 will mean the others
	// were skipped
	ChangeAnalysisStatus_ProgressMilestone_STATUS_SKIPPED ChangeAnalysisStatus_ProgressMilestone_Status = 4
)

// Enum value maps for ChangeAnalysisStatus_ProgressMilestone_Status.
var (
	ChangeAnalysisStatus_ProgressMilestone_Status_name = map[int32]string{
		0: "STATUS_PENDING",
		1: "STATUS_INPROGRESS",
		2: "STATUS_DONE",
		3: "STATUS_ERROR",
		4: "STATUS_SKIPPED",
	}
	ChangeAnalysisStatus_ProgressMilestone_Status_value = map[string]int32{
		"STATUS_PENDING":    0,
		"STATUS_INPROGRESS": 1,
		"STATUS_DONE":       2,
		"STATUS_ERROR":      3,
		"STATUS_SKIPPED":    4,
	}
)

func (x ChangeAnalysisStatus_ProgressMilestone_Status) Enum() *ChangeAnalysisStatus_ProgressMilestone_Status {
	p := new(ChangeAnalysisStatus_ProgressMilestone_Status)
	*p = x
	return p
}

func (x ChangeAnalysisStatus_ProgressMilestone_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeAnalysisStatus_ProgressMilestone_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_changes_proto_enumTypes[9].Descriptor()
}

func (ChangeAnalysisStatus_ProgressMilestone_Status) Type() protoreflect.EnumType {
	return &file_changes_proto_enumTypes[9]
}

func (x ChangeAnalysisStatus_ProgressMilestone_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeAnalysisStatus_ProgressMilestone_Status.Descriptor instead.
func (ChangeAnalysisStatus_ProgressMilestone_Status) EnumDescriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{105, 0, 0}
}

type RuleMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier for this rule
	UUID []byte `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// The time that this rule was created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// The time that this rule was last run
	LastRunAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=lastRunAt,proto3" json:"lastRunAt,omitempty"`
	// The time that this rule added a tag to a change
	LastActivated *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=lastActivated,proto3" json:"lastActivated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuleMetadata) Reset() {
	*x = RuleMetadata{}
	mi := &file_changes_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleMetadata) ProtoMessage() {}

func (x *RuleMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleMetadata.ProtoReflect.Descriptor instead.
func (*RuleMetadata) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{0}
}

func (x *RuleMetadata) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

func (x *RuleMetadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RuleMetadata) GetLastRunAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRunAt
	}
	return nil
}

func (x *RuleMetadata) GetLastActivated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActivated
	}
	return nil
}

type RuleProperties struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the rule, friendly for users
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The key that will be set in a change's tags if this rule is applied
	TagKey string `protobuf:"bytes,2,opt,name=tagKey,proto3" json:"tagKey,omitempty"`
	// Whether the rule is enabled or not
	Enabled bool `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// The instructions that will be run by the llm to determine if the tag should
	// be applied and what its value should be
	Instructions string `protobuf:"bytes,4,opt,name=instructions,proto3" json:"instructions,omitempty"`
	// A list of valid tag values.
	//
	// If this list is empty then the tag will have no value. Overmind will
	// evaluate the instructions in the context of each incoming change, and if
	// instructed, it will tag that change with the given `tagKey` and an empty
	// value.
	//
	// If this list is populated, Overmind will evaluate the instructions in the
	// context of each incoming change and decide; whether to tag the change at
	// all, and if so, what value to use.
	ValidValues   []string `protobuf:"bytes,5,rep,name=validValues,proto3" json:"validValues,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuleProperties) Reset() {
	*x = RuleProperties{}
	mi := &file_changes_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleProperties) ProtoMessage() {}

func (x *RuleProperties) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleProperties.ProtoReflect.Descriptor instead.
func (*RuleProperties) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{1}
}

func (x *RuleProperties) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuleProperties) GetTagKey() string {
	if x != nil {
		return x.TagKey
	}
	return ""
}

func (x *RuleProperties) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *RuleProperties) GetInstructions() string {
	if x != nil {
		return x.Instructions
	}
	return ""
}

func (x *RuleProperties) GetValidValues() []string {
	if x != nil {
		return x.ValidValues
	}
	return nil
}

type Rule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The auto-generated metadata for this rule
	Metadata *RuleMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The user provided properties for this rule
	Properties    *RuleProperties `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rule) Reset() {
	*x = Rule{}
	mi := &file_changes_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{2}
}

func (x *Rule) GetMetadata() *RuleMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Rule) GetProperties() *RuleProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

type ListRulesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRulesRequest) Reset() {
	*x = ListRulesRequest{}
	mi := &file_changes_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRulesRequest) ProtoMessage() {}

func (x *ListRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRulesRequest.ProtoReflect.Descriptor instead.
func (*ListRulesRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{3}
}

type ListRulesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rules         []*Rule                `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRulesResponse) Reset() {
	*x = ListRulesResponse{}
	mi := &file_changes_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRulesResponse) ProtoMessage() {}

func (x *ListRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRulesResponse.ProtoReflect.Descriptor instead.
func (*ListRulesResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{4}
}

func (x *ListRulesResponse) GetRules() []*Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type CreateRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Properties    *RuleProperties        `protobuf:"bytes,1,opt,name=properties,proto3" json:"properties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRuleRequest) Reset() {
	*x = CreateRuleRequest{}
	mi := &file_changes_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRuleRequest) ProtoMessage() {}

func (x *CreateRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRuleRequest.ProtoReflect.Descriptor instead.
func (*CreateRuleRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{5}
}

func (x *CreateRuleRequest) GetProperties() *RuleProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

type CreateRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rule          *Rule                  `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRuleResponse) Reset() {
	*x = CreateRuleResponse{}
	mi := &file_changes_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRuleResponse) ProtoMessage() {}

func (x *CreateRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRuleResponse.ProtoReflect.Descriptor instead.
func (*CreateRuleResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{6}
}

func (x *CreateRuleResponse) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type GetRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UUID          []byte                 `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRuleRequest) Reset() {
	*x = GetRuleRequest{}
	mi := &file_changes_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleRequest) ProtoMessage() {}

func (x *GetRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleRequest.ProtoReflect.Descriptor instead.
func (*GetRuleRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{7}
}

func (x *GetRuleRequest) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

type GetRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rule          *Rule                  `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRuleResponse) Reset() {
	*x = GetRuleResponse{}
	mi := &file_changes_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleResponse) ProtoMessage() {}

func (x *GetRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleResponse.ProtoReflect.Descriptor instead.
func (*GetRuleResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{8}
}

func (x *GetRuleResponse) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type UpdateRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UUID          []byte                 `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Properties    *RuleProperties        `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRuleRequest) Reset() {
	*x = UpdateRuleRequest{}
	mi := &file_changes_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRuleRequest) ProtoMessage() {}

func (x *UpdateRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRuleRequest.ProtoReflect.Descriptor instead.
func (*UpdateRuleRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateRuleRequest) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

func (x *UpdateRuleRequest) GetProperties() *RuleProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

type UpdateRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rule          *Rule                  `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRuleResponse) Reset() {
	*x = UpdateRuleResponse{}
	mi := &file_changes_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRuleResponse) ProtoMessage() {}

func (x *UpdateRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRuleResponse.ProtoReflect.Descriptor instead.
func (*UpdateRuleResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateRuleResponse) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type DeleteRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UUID          []byte                 `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRuleRequest) Reset() {
	*x = DeleteRuleRequest{}
	mi := &file_changes_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuleRequest) ProtoMessage() {}

func (x *DeleteRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRuleRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteRuleRequest) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

type DeleteRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRuleResponse) Reset() {
	*x = DeleteRuleResponse{}
	mi := &file_changes_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuleResponse) ProtoMessage() {}

func (x *DeleteRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuleResponse.ProtoReflect.Descriptor instead.
func (*DeleteRuleResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{12}
}

type ExportRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UUID          []byte                 `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportRuleRequest) Reset() {
	*x = ExportRuleRequest{}
	mi := &file_changes_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportRuleRequest) ProtoMessage() {}

func (x *ExportRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportRuleRequest.ProtoReflect.Descriptor instead.
func (*ExportRuleRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{13}
}

func (x *ExportRuleRequest) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

type ExportRuleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Content that should be added to auto-tagging config file to represent this
	// rule it is in the format that the cli expects
	Rule          string `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportRuleResponse) Reset() {
	*x = ExportRuleResponse{}
	mi := &file_changes_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportRuleResponse) ProtoMessage() {}

func (x *ExportRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportRuleResponse.ProtoReflect.Descriptor instead.
func (*ExportRuleResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{14}
}

func (x *ExportRuleResponse) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

type TestRuleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The entire rule to test, so they don't have to save it first
	Properties *RuleProperties `protobuf:"bytes,1,opt,name=properties,proto3" json:"properties,omitempty"`
	// List of changes to test the rule on
	ChangeUUID    [][]byte `protobuf:"bytes,2,rep,name=changeUUID,proto3" json:"changeUUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestRuleRequest) Reset() {
	*x = TestRuleRequest{}
	mi := &file_changes_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRuleRequest) ProtoMessage() {}

func (x *TestRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRuleRequest.ProtoReflect.Descriptor instead.
func (*TestRuleRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{15}
}

func (x *TestRuleRequest) GetProperties() *RuleProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *TestRuleRequest) GetChangeUUID() [][]byte {
	if x != nil {
		return x.ChangeUUID
	}
	return nil
}

type TestRuleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The change UUID that the rule was tested against
	ChangeUUID []byte `protobuf:"bytes,1,opt,name=changeUUID,proto3" json:"changeUUID,omitempty"`
	// Whether or not the tag was applied to this change
	Applied bool `protobuf:"varint,2,opt,name=applied,proto3" json:"applied,omitempty"`
	// The value of the tag and the reasoning for it
	Value         *AutoTagValue `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestRuleResponse) Reset() {
	*x = TestRuleResponse{}
	mi := &file_changes_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRuleResponse) ProtoMessage() {}

func (x *TestRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRuleResponse.ProtoReflect.Descriptor instead.
func (*TestRuleResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{16}
}

func (x *TestRuleResponse) GetChangeUUID() []byte {
	if x != nil {
		return x.ChangeUUID
	}
	return nil
}

func (x *TestRuleResponse) GetApplied() bool {
	if x != nil {
		return x.Applied
	}
	return false
}

func (x *TestRuleResponse) GetValue() *AutoTagValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type GetChangeTimelineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChangeUUID    []byte                 `protobuf:"bytes,1,opt,name=changeUUID,proto3" json:"changeUUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChangeTimelineRequest) Reset() {
	*x = GetChangeTimelineRequest{}
	mi := &file_changes_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChangeTimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChangeTimelineRequest) ProtoMessage() {}

func (x *GetChangeTimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChangeTimelineRequest.ProtoReflect.Descriptor instead.
func (*GetChangeTimelineRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{17}
}

func (x *GetChangeTimelineRequest) GetChangeUUID() []byte {
	if x != nil {
		return x.ChangeUUID
	}
	return nil
}

type GetChangeTimelineResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*ChangeTimelineEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChangeTimelineResponse) Reset() {
	*x = GetChangeTimelineResponse{}
	mi := &file_changes_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChangeTimelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChangeTimelineResponse) ProtoMessage() {}

func (x *GetChangeTimelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChangeTimelineResponse.ProtoReflect.Descriptor instead.
func (*GetChangeTimelineResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{18}
}

func (x *GetChangeTimelineResponse) GetEntries() []*ChangeTimelineEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ChangeTimelineEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The status that this event should be associated with. Usually this would be
	// the status that the changed ended up in as a result of this action
	Status ChangeStatus `protobuf:"varint,1,opt,name=status,proto3,enum=changes.ChangeStatus" json:"status,omitempty"`
	// The message that describes this event
	StatusMessage string `protobuf:"bytes,2,opt,name=statusMessage,proto3" json:"statusMessage,omitempty"`
	// The time that this event happened
	HappenedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=happenedAt,proto3" json:"happenedAt,omitempty"`
	// The name of the user that performed this action
	ActorName     string `protobuf:"bytes,4,opt,name=actorName,proto3" json:"actorName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeTimelineEntry) Reset() {
	*x = ChangeTimelineEntry{}
	mi := &file_changes_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeTimelineEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTimelineEntry) ProtoMessage() {}

func (x *ChangeTimelineEntry) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTimelineEntry.ProtoReflect.Descriptor instead.
func (*ChangeTimelineEntry) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{19}
}

func (x *ChangeTimelineEntry) GetStatus() ChangeStatus {
	if x != nil {
		return x.Status
	}
	return ChangeStatus_CHANGE_STATUS_UNSPECIFIED
}

func (x *ChangeTimelineEntry) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *ChangeTimelineEntry) GetHappenedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.HappenedAt
	}
	return nil
}

func (x *ChangeTimelineEntry) GetActorName() string {
	if x != nil {
		return x.ActorName
	}
	return ""
}

type GetDiffRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChangeUUID    []byte                 `protobuf:"bytes,1,opt,name=changeUUID,proto3" json:"changeUUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDiffRequest) Reset() {
	*x = GetDiffRequest{}
	mi := &file_changes_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDiffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiffRequest) ProtoMessage() {}

func (x *GetDiffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiffRequest.ProtoReflect.Descriptor instead.
func (*GetDiffRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{20}
}

func (x *GetDiffRequest) GetChangeUUID() []byte {
	if x != nil {
		return x.ChangeUUID
	}
	return nil
}

type GetDiffResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Items that were planned to be changed, and were changed
	ExpectedItems []*ItemDiff `protobuf:"bytes,1,rep,name=expectedItems,proto3" json:"expectedItems,omitempty"`
	// Items that were changed, but were not planned to be changed
	UnexpectedItems []*ItemDiff `protobuf:"bytes,3,rep,name=unexpectedItems,proto3" json:"unexpectedItems,omitempty"`
	Edges           []*Edge     `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"`
	// Items that were planned to be changed, but were not changed
	MissingItems  []*ItemDiff `protobuf:"bytes,4,rep,name=missingItems,proto3" json:"missingItems,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDiffResponse) Reset() {
	*x = GetDiffResponse{}
	mi := &file_changes_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDiffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiffResponse) ProtoMessage() {}

func (x *GetDiffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiffResponse.ProtoReflect.Descriptor instead.
func (*GetDiffResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{21}
}

func (x *GetDiffResponse) GetExpectedItems() []*ItemDiff {
	if x != nil {
		return x.ExpectedItems
	}
	return nil
}

func (x *GetDiffResponse) GetUnexpectedItems() []*ItemDiff {
	if x != nil {
		return x.UnexpectedItems
	}
	return nil
}

func (x *GetDiffResponse) GetEdges() []*Edge {
	if x != nil {
		return x.Edges
	}
	return nil
}

func (x *GetDiffResponse) GetMissingItems() []*ItemDiff {
	if x != nil {
		return x.MissingItems
	}
	return nil
}

type ListChangingItemsSummaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChangeUUID    []byte                 `protobuf:"bytes,1,opt,name=changeUUID,proto3" json:"changeUUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChangingItemsSummaryRequest) Reset() {
	*x = ListChangingItemsSummaryRequest{}
	mi := &file_changes_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChangingItemsSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChangingItemsSummaryRequest) ProtoMessage() {}

func (x *ListChangingItemsSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChangingItemsSummaryRequest.ProtoReflect.Descriptor instead.
func (*ListChangingItemsSummaryRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{22}
}

func (x *ListChangingItemsSummaryRequest) GetChangeUUID() []byte {
	if x != nil {
		return x.ChangeUUID
	}
	return nil
}

type ListChangingItemsSummaryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*ItemDiffSummary     `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChangingItemsSummaryResponse) Reset() {
	*x = ListChangingItemsSummaryResponse{}
	mi := &file_changes_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChangingItemsSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChangingItemsSummaryResponse) ProtoMessage() {}

func (x *ListChangingItemsSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChangingItemsSummaryResponse.ProtoReflect.Descriptor instead.
func (*ListChangingItemsSummaryResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{23}
}

func (x *ListChangingItemsSummaryResponse) GetItems() []*ItemDiffSummary {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetAffectedAppsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChangeUUID    []byte                 `protobuf:"bytes,1,opt,name=changeUUID,proto3" json:"changeUUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAffectedAppsRequest) Reset() {
	*x = GetAffectedAppsRequest{}
	mi := &file_changes_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAffectedAppsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAffectedAppsRequest) ProtoMessage() {}

func (x *GetAffectedAppsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAffectedAppsRequest.ProtoReflect.Descriptor instead.
func (*GetAffectedAppsRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{24}
}

func (x *GetAffectedAppsRequest) GetChangeUUID() []byte {
	if x != nil {
		return x.ChangeUUID
	}
	return nil
}

type GetAffectedAppsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Apps          []*AppSummary          `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAffectedAppsResponse) Reset() {
	*x = GetAffectedAppsResponse{}
	mi := &file_changes_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAffectedAppsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAffectedAppsResponse) ProtoMessage() {}

func (x *GetAffectedAppsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAffectedAppsResponse.ProtoReflect.Descriptor instead.
func (*GetAffectedAppsResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{25}
}

func (x *GetAffectedAppsResponse) GetApps() []*AppSummary {
	if x != nil {
		return x.Apps
	}
	return nil
}

type UpdateChangingItemsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The change to update
	ChangeUUID []byte `protobuf:"bytes,1,opt,name=changeUUID,proto3" json:"changeUUID,omitempty"`
	// References to the items that are changing
	ChangingItems []*Reference `protobuf:"bytes,2,rep,name=changingItems,proto3" json:"changingItems,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateChangingItemsRequest) Reset() {
	*x = UpdateChangingItemsRequest{}
	mi := &file_changes_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateChangingItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChangingItemsRequest) ProtoMessage() {}

func (x *UpdateChangingItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChangingItemsRequest.ProtoReflect.Descriptor instead.
func (*UpdateChangingItemsRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateChangingItemsRequest) GetChangeUUID() []byte {
	if x != nil {
		return x.ChangeUUID
	}
	return nil
}

func (x *UpdateChangingItemsRequest) GetChangingItems() []*Reference {
	if x != nil {
		return x.ChangingItems
	}
	return nil
}

type MappedItemDiff struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The item that is changing and any known changes to it
	Item *ItemDiff `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	// a mapping query that can be used to find the item. this can be empty if the
	// submitter does not know how to map this item.
	MappingQuery  *Query `protobuf:"bytes,2,opt,name=mappingQuery,proto3,oneof" json:"mappingQuery,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MappedItemDiff) Reset() {
	*x = MappedItemDiff{}
	mi := &file_changes_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MappedItemDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MappedItemDiff) ProtoMessage() {}

func (x *MappedItemDiff) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MappedItemDiff.ProtoReflect.Descriptor instead.
func (*MappedItemDiff) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{27}
}

func (x *MappedItemDiff) GetItem() *ItemDiff {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *MappedItemDiff) GetMappingQuery() *Query {
	if x != nil {
		return x.MappingQuery
	}
	return nil
}

type UpdatePlannedChangesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The change to update
	ChangeUUID []byte `protobuf:"bytes,1,opt,name=changeUUID,proto3" json:"changeUUID,omitempty"`
	// The changing items
	ChangingItems []*MappedItemDiff `protobuf:"bytes,2,rep,name=changingItems,proto3" json:"changingItems,omitempty"`
	// Overrides the stored blast radius config for this change
	BlastRadiusConfigOverride *BlastRadiusConfig `protobuf:"bytes,3,opt,name=blastRadiusConfigOverride,proto3,oneof" json:"blastRadiusConfigOverride,omitempty"`
	// Overrides the auto-tagging rules with rules that have been read from the
	// local config file. If this is empty the rules that have been configured in
	// the UI will be used
	AutoTaggingRulesOverride []*RuleProperties `protobuf:"bytes,4,rep,name=autoTaggingRulesOverride,proto3" json:"autoTaggingRulesOverride,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *UpdatePlannedChangesRequest) Reset() {
	*x = UpdatePlannedChangesRequest{}
	mi := &file_changes_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePlannedChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlannedChangesRequest) ProtoMessage() {}

func (x *UpdatePlannedChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlannedChangesRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlannedChangesRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{28}
}

func (x *UpdatePlannedChangesRequest) GetChangeUUID() []byte {
	if x != nil {
		return x.ChangeUUID
	}
	return nil
}

func (x *UpdatePlannedChangesRequest) GetChangingItems() []*MappedItemDiff {
	if x != nil {
		return x.ChangingItems
	}
	return nil
}

func (x *UpdatePlannedChangesRequest) GetBlastRadiusConfigOverride() *BlastRadiusConfig {
	if x != nil {
		return x.BlastRadiusConfigOverride
	}
	return nil
}

func (x *UpdatePlannedChangesRequest) GetAutoTaggingRulesOverride() []*RuleProperties {
	if x != nil {
		return x.AutoTaggingRulesOverride
	}
	return nil
}

type ListAppChangesSummaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppUUID       []byte                 `protobuf:"bytes,1,opt,name=appUUID,proto3" json:"appUUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppChangesSummaryRequest) Reset() {
	*x = ListAppChangesSummaryRequest{}
	mi := &file_changes_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppChangesSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppChangesSummaryRequest) ProtoMessage() {}

func (x *ListAppChangesSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppChangesSummaryRequest.ProtoReflect.Descriptor instead.
func (*ListAppChangesSummaryRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{29}
}

func (x *ListAppChangesSummaryRequest) GetAppUUID() []byte {
	if x != nil {
		return x.AppUUID
	}
	return nil
}

type ListAppChangesSummaryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Changes       []*ChangeSummary       `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppChangesSummaryResponse) Reset() {
	*x = ListAppChangesSummaryResponse{}
	mi := &file_changes_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppChangesSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppChangesSummaryResponse) ProtoMessage() {}

func (x *ListAppChangesSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppChangesSummaryResponse.ProtoReflect.Descriptor instead.
func (*ListAppChangesSummaryResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{30}
}

func (x *ListAppChangesSummaryResponse) GetChanges() []*ChangeSummary {
	if x != nil {
		return x.Changes
	}
	return nil
}

type GetAppSummaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UUID          []byte                 `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppSummaryRequest) Reset() {
	*x = GetAppSummaryRequest{}
	mi := &file_changes_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppSummaryRequest) ProtoMessage() {}

func (x *GetAppSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetAppSummaryRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{31}
}

func (x *GetAppSummaryRequest) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

type GetAppSummaryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	App           *AppSummary            `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppSummaryResponse) Reset() {
	*x = GetAppSummaryResponse{}
	mi := &file_changes_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppSummaryResponse) ProtoMessage() {}

func (x *GetAppSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetAppSummaryResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{32}
}

func (x *GetAppSummaryResponse) GetApp() *AppSummary {
	if x != nil {
		return x.App
	}
	return nil
}

type GetAppSummariesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UUIDs         [][]byte               `protobuf:"bytes,1,rep,name=UUIDs,proto3" json:"UUIDs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppSummariesRequest) Reset() {
	*x = GetAppSummariesRequest{}
	mi := &file_changes_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppSummariesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppSummariesRequest) ProtoMessage() {}

func (x *GetAppSummariesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppSummariesRequest.ProtoReflect.Descriptor instead.
func (*GetAppSummariesRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{33}
}

func (x *GetAppSummariesRequest) GetUUIDs() [][]byte {
	if x != nil {
		return x.UUIDs
	}
	return nil
}

type GetAppSummariesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Apps          []*AppSummary          `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppSummariesResponse) Reset() {
	*x = GetAppSummariesResponse{}
	mi := &file_changes_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppSummariesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppSummariesResponse) ProtoMessage() {}

func (x *GetAppSummariesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppSummariesResponse.ProtoReflect.Descriptor instead.
func (*GetAppSummariesResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{34}
}

func (x *GetAppSummariesResponse) GetApps() []*AppSummary {
	if x != nil {
		return x.Apps
	}
	return nil
}

type ListHomeChangesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pagination    *PaginationRequest     `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters       *ChangeFiltersRequest  `protobuf:"bytes,2,opt,name=filters,proto3,oneof" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHomeChangesRequest) Reset() {
	*x = ListHomeChangesRequest{}
	mi := &file_changes_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHomeChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHomeChangesRequest) ProtoMessage() {}

func (x *ListHomeChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHomeChangesRequest.ProtoReflect.Descriptor instead.
func (*ListHomeChangesRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{35}
}

func (x *ListHomeChangesRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListHomeChangesRequest) GetFilters() *ChangeFiltersRequest {
	if x != nil {
		return x.Filters
	}
	return nil
}

// ChangeFiltersRequest is used for filtering on the changes page.
// Repeated entries of the same type are used to represent OR conditions. eg if repo is ["a", "b"] then the filter is (repo == "a" OR repo == "b")
// The filters are ANDed together. eg if repo is ["a", "b"] and author is ["c"] then the filter is (repo == "a" OR repo == "b") AND author == "c"
type ChangeFiltersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Repos         []string               `protobuf:"bytes,1,rep,name=repos,proto3" json:"repos,omitempty"`
	Tags          map[string]string      `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Risks         []Risk_Severity        `protobuf:"varint,3,rep,packed,name=risks,proto3,enum=changes.Risk_Severity" json:"risks,omitempty"`
	Authors       []string               `protobuf:"bytes,4,rep,name=authors,proto3" json:"authors,omitempty"`
	Statuses      []ChangeStatus         `protobuf:"varint,5,rep,packed,name=statuses,proto3,enum=changes.ChangeStatus" json:"statuses,omitempty"`
	SortOrder     *SortOrder             `protobuf:"varint,6,opt,name=sortOrder,proto3,enum=SortOrder,oneof" json:"sortOrder,omitempty"` // the default is SortOrder.DATE_DESCENDING (newest first)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeFiltersRequest) Reset() {
	*x = ChangeFiltersRequest{}
	mi := &file_changes_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeFiltersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeFiltersRequest) ProtoMessage() {}

func (x *ChangeFiltersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeFiltersRequest.ProtoReflect.Descriptor instead.
func (*ChangeFiltersRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{36}
}

func (x *ChangeFiltersRequest) GetRepos() []string {
	if x != nil {
		return x.Repos
	}
	return nil
}

func (x *ChangeFiltersRequest) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ChangeFiltersRequest) GetRisks() []Risk_Severity {
	if x != nil {
		return x.Risks
	}
	return nil
}

func (x *ChangeFiltersRequest) GetAuthors() []string {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *ChangeFiltersRequest) GetStatuses() []ChangeStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *ChangeFiltersRequest) GetSortOrder() SortOrder {
	if x != nil && x.SortOrder != nil {
		return *x.SortOrder
	}
	return SortOrder_ALPHABETICAL_ASCENDING
}

type ListHomeChangesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Changes       []*ChangeSummary       `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	Pagination    *PaginationResponse    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHomeChangesResponse) Reset() {
	*x = ListHomeChangesResponse{}
	mi := &file_changes_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHomeChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHomeChangesResponse) ProtoMessage() {}

func (x *ListHomeChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHomeChangesResponse.ProtoReflect.Descriptor instead.
func (*ListHomeChangesResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{37}
}

func (x *ListHomeChangesResponse) GetChanges() []*ChangeSummary {
	if x != nil {
		return x.Changes
	}
	return nil
}

func (x *ListHomeChangesResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type PopulateChangeFiltersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PopulateChangeFiltersRequest) Reset() {
	*x = PopulateChangeFiltersRequest{}
	mi := &file_changes_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PopulateChangeFiltersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PopulateChangeFiltersRequest) ProtoMessage() {}

func (x *PopulateChangeFiltersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PopulateChangeFiltersRequest.ProtoReflect.Descriptor instead.
func (*PopulateChangeFiltersRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{38}
}

type PopulateChangeFiltersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Repos         []string               `protobuf:"bytes,1,rep,name=repos,proto3" json:"repos,omitempty"`
	Authors       []string               `protobuf:"bytes,2,rep,name=authors,proto3" json:"authors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PopulateChangeFiltersResponse) Reset() {
	*x = PopulateChangeFiltersResponse{}
	mi := &file_changes_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PopulateChangeFiltersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PopulateChangeFiltersResponse) ProtoMessage() {}

func (x *PopulateChangeFiltersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PopulateChangeFiltersResponse.ProtoReflect.Descriptor instead.
func (*PopulateChangeFiltersResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{39}
}

func (x *PopulateChangeFiltersResponse) GetRepos() []string {
	if x != nil {
		return x.Repos
	}
	return nil
}

func (x *PopulateChangeFiltersResponse) GetAuthors() []string {
	if x != nil {
		return x.Authors
	}
	return nil
}

type ListHomeAppsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHomeAppsRequest) Reset() {
	*x = ListHomeAppsRequest{}
	mi := &file_changes_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHomeAppsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHomeAppsRequest) ProtoMessage() {}

func (x *ListHomeAppsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHomeAppsRequest.ProtoReflect.Descriptor instead.
func (*ListHomeAppsRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{40}
}

type ListHomeAppsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Apps          []*AppSummary          `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHomeAppsResponse) Reset() {
	*x = ListHomeAppsResponse{}
	mi := &file_changes_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHomeAppsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHomeAppsResponse) ProtoMessage() {}

func (x *ListHomeAppsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHomeAppsResponse.ProtoReflect.Descriptor instead.
func (*ListHomeAppsResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{41}
}

func (x *ListHomeAppsResponse) GetApps() []*AppSummary {
	if x != nil {
		return x.Apps
	}
	return nil
}

type ItemDiffSummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A reference to the item that this diff is related to
	Item *Reference `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	// The status of the item
	Status ItemDiffStatus `protobuf:"varint,4,opt,name=status,proto3,enum=changes.ItemDiffStatus" json:"status,omitempty"`
	// The health of the item currently (as opposed to before the change)
	HealthAfter   Health `protobuf:"varint,5,opt,name=healthAfter,proto3,enum=Health" json:"healthAfter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemDiffSummary) Reset() {
	*x = ItemDiffSummary{}
	mi := &file_changes_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemDiffSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemDiffSummary) ProtoMessage() {}

func (x *ItemDiffSummary) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemDiffSummary.ProtoReflect.Descriptor instead.
func (*ItemDiffSummary) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{42}
}

func (x *ItemDiffSummary) GetItem() *Reference {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *ItemDiffSummary) GetStatus() ItemDiffStatus {
	if x != nil {
		return x.Status
	}
	return ItemDiffStatus_ITEM_DIFF_STATUS_UNSPECIFIED
}

func (x *ItemDiffSummary) GetHealthAfter() Health {
	if x != nil {
		return x.HealthAfter
	}
	return Health_HEALTH_UNKNOWN
}

type ItemDiff struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A reference to the item that this diff is related to
	Item *Reference `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	// The status of the item
	Status        ItemDiffStatus `protobuf:"varint,2,opt,name=status,proto3,enum=changes.ItemDiffStatus" json:"status,omitempty"`
	Before        *Item          `protobuf:"bytes,3,opt,name=before,proto3" json:"before,omitempty"`
	After         *Item          `protobuf:"bytes,4,opt,name=after,proto3" json:"after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemDiff) Reset() {
	*x = ItemDiff{}
	mi := &file_changes_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemDiff) ProtoMessage() {}

func (x *ItemDiff) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemDiff.ProtoReflect.Descriptor instead.
func (*ItemDiff) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{43}
}

func (x *ItemDiff) GetItem() *Reference {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *ItemDiff) GetStatus() ItemDiffStatus {
	if x != nil {
		return x.Status
	}
	return ItemDiffStatus_ITEM_DIFF_STATUS_UNSPECIFIED
}

func (x *ItemDiff) GetBefore() *Item {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *ItemDiff) GetAfter() *Item {
	if x != nil {
		return x.After
	}
	return nil
}

type AppSummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unique id to identify this app
	UUID []byte `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// Name of this App
	// Example: "Contoso Manager"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of this App Example: "The Contoso Manager manages the contoso.
	// Notable components are storage, compute and the web. Talk to Jimmy or Susan
	// on 555-CM LEAD for more details."
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// number of changes that have affected this app
	NumChangesAffecting int32 `protobuf:"varint,4,opt,name=numChangesAffecting,proto3" json:"numChangesAffecting,omitempty"`
	// the number of items that make up this app
	NumItems int32 `protobuf:"varint,5,opt,name=numItems,proto3" json:"numItems,omitempty"`
	// timestamp when this app was created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// The name of the person that created the app
	CreatorName string `protobuf:"bytes,7,opt,name=creatorName,proto3" json:"creatorName,omitempty"`
	// the url for this app. This will only be set if the app was created using
	// the `CreateSimpleApp` RPC.
	Url string `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// UUID of the bookmark query that returns all items in this app
	BookmarkUUID  []byte `protobuf:"bytes,10,opt,name=bookmarkUUID,proto3" json:"bookmarkUUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppSummary) Reset() {
	*x = AppSummary{}
	mi := &file_changes_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppSummary) ProtoMessage() {}

func (x *AppSummary) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppSummary.ProtoReflect.Descriptor instead.
func (*AppSummary) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{44}
}

func (x *AppSummary) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

func (x *AppSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppSummary) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AppSummary) GetNumChangesAffecting() int32 {
	if x != nil {
		return x.NumChangesAffecting
	}
	return 0
}

func (x *AppSummary) GetNumItems() int32 {
	if x != nil {
		return x.NumItems
	}
	return 0
}

func (x *AppSummary) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AppSummary) GetCreatorName() string {
	if x != nil {
		return x.CreatorName
	}
	return ""
}

func (x *AppSummary) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AppSummary) GetBookmarkUUID() []byte {
	if x != nil {
		return x.BookmarkUUID
	}
	return nil
}

// a complete App with machine-supplied and user-supplied values
type App struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// machine-generated metadata of this app
	Metadata *AppMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// user-supplied properties of this app
	Properties    *AppProperties `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *App) Reset() {
	*x = App{}
	mi := &file_changes_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*App) ProtoMessage() {}

func (x *App) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use App.ProtoReflect.Descriptor instead.
func (*App) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{45}
}

func (x *App) GetMetadata() *AppMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *App) GetProperties() *AppProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

// machine-generated metadata of this app
type AppMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unique id to identify this app
	UUID []byte `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// timestamp when this app was created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// timestamp when this app was last updated
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// items that are part of the app
	Items []*Reference `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	// the last time that the list of items was updated
	ItemsLastUpdated *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=itemsLastUpdated,proto3" json:"itemsLastUpdated,omitempty"`
	// number of changes that have affected this app
	NumChangesAffecting int32 `protobuf:"varint,6,opt,name=numChangesAffecting,proto3" json:"numChangesAffecting,omitempty"`
	// the number of items that make up this app
	NumItems int32 `protobuf:"varint,8,opt,name=numItems,proto3" json:"numItems,omitempty"`
	// the name of the person that created the app
	CreatorName string `protobuf:"bytes,7,opt,name=creatorName,proto3" json:"creatorName,omitempty"`
	// the url for this app. This will only be set if the app was created using
	// the `CreateSimpleApp` RPC.
	Url           string `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppMetadata) Reset() {
	*x = AppMetadata{}
	mi := &file_changes_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMetadata) ProtoMessage() {}

func (x *AppMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMetadata.ProtoReflect.Descriptor instead.
func (*AppMetadata) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{46}
}

func (x *AppMetadata) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

func (x *AppMetadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AppMetadata) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *AppMetadata) GetItems() []*Reference {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *AppMetadata) GetItemsLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.ItemsLastUpdated
	}
	return nil
}

func (x *AppMetadata) GetNumChangesAffecting() int32 {
	if x != nil {
		return x.NumChangesAffecting
	}
	return 0
}

func (x *AppMetadata) GetNumItems() int32 {
	if x != nil {
		return x.NumItems
	}
	return 0
}

func (x *AppMetadata) GetCreatorName() string {
	if x != nil {
		return x.CreatorName
	}
	return ""
}

func (x *AppMetadata) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// user-supplied properties of this app
type AppProperties struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of this App
	// Example: "Contoso Manager"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Description of this App. Example: "The Contoso Manager manages the contoso.
	// Notable components are storage, compute and the web. Talk to Jimmy or Susan
	// on 555-CM LEAD for more details."
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// UUID of the bookmark query that returns all items in this app
	BookmarkUUID  []byte `protobuf:"bytes,3,opt,name=bookmarkUUID,proto3" json:"bookmarkUUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppProperties) Reset() {
	*x = AppProperties{}
	mi := &file_changes_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppProperties) ProtoMessage() {}

func (x *AppProperties) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppProperties.ProtoReflect.Descriptor instead.
func (*AppProperties) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{47}
}

func (x *AppProperties) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppProperties) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AppProperties) GetBookmarkUUID() []byte {
	if x != nil {
		return x.BookmarkUUID
	}
	return nil
}

// list all apps
type ListAppsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppsRequest) Reset() {
	*x = ListAppsRequest{}
	mi := &file_changes_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsRequest) ProtoMessage() {}

func (x *ListAppsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsRequest.ProtoReflect.Descriptor instead.
func (*ListAppsRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{48}
}

type ListAppsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Apps          []*App                 `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppsResponse) Reset() {
	*x = ListAppsResponse{}
	mi := &file_changes_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsResponse) ProtoMessage() {}

func (x *ListAppsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsResponse.ProtoReflect.Descriptor instead.
func (*ListAppsResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{49}
}

func (x *ListAppsResponse) GetApps() []*App {
	if x != nil {
		return x.Apps
	}
	return nil
}

// create a new app
type CreateAppRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Properties    *AppProperties         `protobuf:"bytes,1,opt,name=properties,proto3" json:"properties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAppRequest) Reset() {
	*x = CreateAppRequest{}
	mi := &file_changes_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppRequest) ProtoMessage() {}

func (x *CreateAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppRequest.ProtoReflect.Descriptor instead.
func (*CreateAppRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{50}
}

func (x *CreateAppRequest) GetProperties() *AppProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

type CreateAppResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	App           *App                   `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAppResponse) Reset() {
	*x = CreateAppResponse{}
	mi := &file_changes_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppResponse) ProtoMessage() {}

func (x *CreateAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppResponse.ProtoReflect.Descriptor instead.
func (*CreateAppResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{51}
}

func (x *CreateAppResponse) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

type CreateSimpleAppRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the app
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The description of the app
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// The URL of the app
	Url           string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSimpleAppRequest) Reset() {
	*x = CreateSimpleAppRequest{}
	mi := &file_changes_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSimpleAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSimpleAppRequest) ProtoMessage() {}

func (x *CreateSimpleAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSimpleAppRequest.ProtoReflect.Descriptor instead.
func (*CreateSimpleAppRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{52}
}

func (x *CreateSimpleAppRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSimpleAppRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateSimpleAppRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CreateSimpleAppResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	App           *App                   `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSimpleAppResponse) Reset() {
	*x = CreateSimpleAppResponse{}
	mi := &file_changes_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSimpleAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSimpleAppResponse) ProtoMessage() {}

func (x *CreateSimpleAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSimpleAppResponse.ProtoReflect.Descriptor instead.
func (*CreateSimpleAppResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{53}
}

func (x *CreateSimpleAppResponse) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

// get the details of an existing app
type GetAppRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UUID          []byte                 `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppRequest) Reset() {
	*x = GetAppRequest{}
	mi := &file_changes_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppRequest) ProtoMessage() {}

func (x *GetAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppRequest.ProtoReflect.Descriptor instead.
func (*GetAppRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{54}
}

func (x *GetAppRequest) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

type GetAppResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	App           *App                   `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppResponse) Reset() {
	*x = GetAppResponse{}
	mi := &file_changes_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppResponse) ProtoMessage() {}

func (x *GetAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppResponse.ProtoReflect.Descriptor instead.
func (*GetAppResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{55}
}

func (x *GetAppResponse) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

// update an existing app
type UpdateAppRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UUID          []byte                 `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Properties    *AppProperties         `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAppRequest) Reset() {
	*x = UpdateAppRequest{}
	mi := &file_changes_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppRequest) ProtoMessage() {}

func (x *UpdateAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{56}
}

func (x *UpdateAppRequest) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

func (x *UpdateAppRequest) GetProperties() *AppProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

type UpdateAppResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	App           *App                   `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAppResponse) Reset() {
	*x = UpdateAppResponse{}
	mi := &file_changes_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppResponse) ProtoMessage() {}

func (x *UpdateAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{57}
}

func (x *UpdateAppResponse) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

// delete an app
type DeleteAppRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UUID          []byte                 `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAppRequest) Reset() {
	*x = DeleteAppRequest{}
	mi := &file_changes_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppRequest) ProtoMessage() {}

func (x *DeleteAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppRequest.ProtoReflect.Descriptor instead.
func (*DeleteAppRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{58}
}

func (x *DeleteAppRequest) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

type DeleteAppResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAppResponse) Reset() {
	*x = DeleteAppResponse{}
	mi := &file_changes_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppResponse) ProtoMessage() {}

func (x *DeleteAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppResponse.ProtoReflect.Descriptor instead.
func (*DeleteAppResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{59}
}

// list all changes for an app
type ListAppChangesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The UUID of the app to list changes for
	UUID          []byte `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppChangesRequest) Reset() {
	*x = ListAppChangesRequest{}
	mi := &file_changes_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppChangesRequest) ProtoMessage() {}

func (x *ListAppChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppChangesRequest.ProtoReflect.Descriptor instead.
func (*ListAppChangesRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{60}
}

func (x *ListAppChangesRequest) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

type ListAppChangesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of changes related to an app
	Changes       []*Change `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppChangesResponse) Reset() {
	*x = ListAppChangesResponse{}
	mi := &file_changes_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppChangesResponse) ProtoMessage() {}

func (x *ListAppChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppChangesResponse.ProtoReflect.Descriptor instead.
func (*ListAppChangesResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{61}
}

func (x *ListAppChangesResponse) GetChanges() []*Change {
	if x != nil {
		return x.Changes
	}
	return nil
}

type EnrichedTags struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TagValue      map[string]*TagValue   `protobuf:"bytes,18,rep,name=tagValue,proto3" json:"tagValue,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnrichedTags) Reset() {
	*x = EnrichedTags{}
	mi := &file_changes_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnrichedTags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrichedTags) ProtoMessage() {}

func (x *EnrichedTags) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrichedTags.ProtoReflect.Descriptor instead.
func (*EnrichedTags) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{62}
}

func (x *EnrichedTags) GetTagValue() map[string]*TagValue {
	if x != nil {
		return x.TagValue
	}
	return nil
}

type TagValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The value of the tag, this can be user-defined or auto-generated
	//
	// Types that are valid to be assigned to Value:
	//
	//	*TagValue_UserTagValue
	//	*TagValue_AutoTagValue
	Value         isTagValue_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagValue) Reset() {
	*x = TagValue{}
	mi := &file_changes_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagValue) ProtoMessage() {}

func (x *TagValue) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagValue.ProtoReflect.Descriptor instead.
func (*TagValue) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{63}
}

func (x *TagValue) GetValue() isTagValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TagValue) GetUserTagValue() *UserTagValue {
	if x != nil {
		if x, ok := x.Value.(*TagValue_UserTagValue); ok {
			return x.UserTagValue
		}
	}
	return nil
}

func (x *TagValue) GetAutoTagValue() *AutoTagValue {
	if x != nil {
		if x, ok := x.Value.(*TagValue_AutoTagValue); ok {
			return x.AutoTagValue
		}
	}
	return nil
}

type isTagValue_Value interface {
	isTagValue_Value()
}

type TagValue_UserTagValue struct {
	UserTagValue *UserTagValue `protobuf:"bytes,1,opt,name=userTagValue,proto3,oneof"`
}

type TagValue_AutoTagValue struct {
	AutoTagValue *AutoTagValue `protobuf:"bytes,2,opt,name=autoTagValue,proto3,oneof"`
}

func (*TagValue_UserTagValue) isTagValue_Value() {}

func (*TagValue_AutoTagValue) isTagValue_Value() {}

type UserTagValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The value of the tag that was set by the user.
	Value         string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserTagValue) Reset() {
	*x = UserTagValue{}
	mi := &file_changes_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserTagValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTagValue) ProtoMessage() {}

func (x *UserTagValue) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTagValue.ProtoReflect.Descriptor instead.
func (*UserTagValue) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{64}
}

func (x *UserTagValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type AutoTagValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The value of the tag
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// Reasoning for this decision
	Reasoning     string `protobuf:"bytes,2,opt,name=reasoning,proto3" json:"reasoning,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutoTagValue) Reset() {
	*x = AutoTagValue{}
	mi := &file_changes_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoTagValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoTagValue) ProtoMessage() {}

func (x *AutoTagValue) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoTagValue.ProtoReflect.Descriptor instead.
func (*AutoTagValue) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{65}
}

func (x *AutoTagValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AutoTagValue) GetReasoning() string {
	if x != nil {
		return x.Reasoning
	}
	return ""
}

// A smaller summary of a change
type ChangeSummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unique id to identify this change
	UUID []byte `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// Short title for this change.
	// Example: "database upgrade"
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// The current status of this change. This is changed by the lifecycle
	// functions such as `StartChange` and `EndChange`.
	Status ChangeStatus `protobuf:"varint,3,opt,name=status,proto3,enum=changes.ChangeStatus" json:"status,omitempty"`
	// Link to the ticket for this change.
	// Example: "http://jira.contoso-engineering.com/browse/CM-1337"
	TicketLink string `protobuf:"bytes,4,opt,name=ticketLink,proto3" json:"ticketLink,omitempty"`
	// timestamp when this change was created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// The name of the user that created the change
	CreatorName string `protobuf:"bytes,6,opt,name=creatorName,proto3" json:"creatorName,omitempty"`
	// The email of the user that created the change
	CreatorEmail string `protobuf:"bytes,15,opt,name=creatorEmail,proto3" json:"creatorEmail,omitempty"`
	// The number of apps that will be affected by this change
	NumAffectedApps int32 `protobuf:"varint,8,opt,name=numAffectedApps,proto3" json:"numAffectedApps,omitempty"`
	// The number of items in the blast radius of this change
	NumAffectedItems int32 `protobuf:"varint,9,opt,name=numAffectedItems,proto3" json:"numAffectedItems,omitempty"`
	// The number of edges in the blast radius of this change
	NumAffectedEdges int32 `protobuf:"varint,10,opt,name=numAffectedEdges,proto3" json:"numAffectedEdges,omitempty"`
	// The number of low risks in this change
	NumLowRisk int32 `protobuf:"varint,11,opt,name=numLowRisk,proto3" json:"numLowRisk,omitempty"`
	// The number of medium risks in this change
	NumMediumRisk int32 `protobuf:"varint,12,opt,name=numMediumRisk,proto3" json:"numMediumRisk,omitempty"`
	// The number of high risks in this change
	NumHighRisk int32 `protobuf:"varint,13,opt,name=numHighRisk,proto3" json:"numHighRisk,omitempty"`
	// Quick description of the change.
	// Example: "upgrade of the database to get access to the new contoso management processor"
	Description string `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	// Repo information; can be an empty string. CLI attempts auto-population, but
	// users can override. Not necessarily a URL. The UI will be responsible for
	// any formatting/shortening/sprucing up should it be required.
	Repo string `protobuf:"bytes,16,opt,name=repo,proto3" json:"repo,omitempty"`
	// Tags that were set bu the user when the tag was created
	//
	// Deprecated: Use enrichedTags instead
	//
	// Deprecated: Marked as deprecated in changes.proto.
	Tags map[string]string `protobuf:"bytes,17,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Tags associated with this change
	EnrichedTags  *EnrichedTags `protobuf:"bytes,18,opt,name=enrichedTags,proto3" json:"enrichedTags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeSummary) Reset() {
	*x = ChangeSummary{}
	mi := &file_changes_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeSummary) ProtoMessage() {}

func (x *ChangeSummary) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeSummary.ProtoReflect.Descriptor instead.
func (*ChangeSummary) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{66}
}

func (x *ChangeSummary) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

func (x *ChangeSummary) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChangeSummary) GetStatus() ChangeStatus {
	if x != nil {
		return x.Status
	}
	return ChangeStatus_CHANGE_STATUS_UNSPECIFIED
}

func (x *ChangeSummary) GetTicketLink() string {
	if x != nil {
		return x.TicketLink
	}
	return ""
}

func (x *ChangeSummary) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChangeSummary) GetCreatorName() string {
	if x != nil {
		return x.CreatorName
	}
	return ""
}

func (x *ChangeSummary) GetCreatorEmail() string {
	if x != nil {
		return x.CreatorEmail
	}
	return ""
}

func (x *ChangeSummary) GetNumAffectedApps() int32 {
	if x != nil {
		return x.NumAffectedApps
	}
	return 0
}

func (x *ChangeSummary) GetNumAffectedItems() int32 {
	if x != nil {
		return x.NumAffectedItems
	}
	return 0
}

func (x *ChangeSummary) GetNumAffectedEdges() int32 {
	if x != nil {
		return x.NumAffectedEdges
	}
	return 0
}

func (x *ChangeSummary) GetNumLowRisk() int32 {
	if x != nil {
		return x.NumLowRisk
	}
	return 0
}

func (x *ChangeSummary) GetNumMediumRisk() int32 {
	if x != nil {
		return x.NumMediumRisk
	}
	return 0
}

func (x *ChangeSummary) GetNumHighRisk() int32 {
	if x != nil {
		return x.NumHighRisk
	}
	return 0
}

func (x *ChangeSummary) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ChangeSummary) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

// Deprecated: Marked as deprecated in changes.proto.
func (x *ChangeSummary) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ChangeSummary) GetEnrichedTags() *EnrichedTags {
	if x != nil {
		return x.EnrichedTags
	}
	return nil
}

// a complete Change with machine-supplied and user-supplied values
type Change struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// machine-generated metadata of this change
	Metadata *ChangeMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// user-supplied properties of this change
	Properties    *ChangeProperties `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Change) Reset() {
	*x = Change{}
	mi := &file_changes_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change) ProtoMessage() {}

func (x *Change) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change.ProtoReflect.Descriptor instead.
func (*Change) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{67}
}

func (x *Change) GetMetadata() *ChangeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Change) GetProperties() *ChangeProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

// machine-generated metadata of this change
type ChangeMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unique id to identify this change
	UUID []byte `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// timestamp when this change was created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// timestamp when this change was last updated
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// The current status of this change. This is changed by the lifecycle
	// functions such as `StartChange` and `EndChange`.
	Status ChangeStatus `protobuf:"varint,4,opt,name=status,proto3,enum=changes.ChangeStatus" json:"status,omitempty"`
	// The name of the user that created the change
	CreatorName string `protobuf:"bytes,5,opt,name=creatorName,proto3" json:"creatorName,omitempty"`
	// The email of the user that created the change
	CreatorEmail string `protobuf:"bytes,19,opt,name=creatorEmail,proto3" json:"creatorEmail,omitempty"`
	// The number of apps that will be affected by this change
	NumAffectedApps int32 `protobuf:"varint,6,opt,name=numAffectedApps,proto3" json:"numAffectedApps,omitempty"`
	// The number of items in the blast radius if this change
	NumAffectedItems int32 `protobuf:"varint,7,opt,name=numAffectedItems,proto3" json:"numAffectedItems,omitempty"`
	// The number of edges in the blast radius if this change
	NumAffectedEdges int32 `protobuf:"varint,17,opt,name=numAffectedEdges,proto3" json:"numAffectedEdges,omitempty"`
	// The number of items within the blast radius that were not affected by this
	// change
	NumUnchangedItems int32 `protobuf:"varint,8,opt,name=numUnchangedItems,proto3" json:"numUnchangedItems,omitempty"`
	// The number of items that were created as part of this change
	NumCreatedItems int32 `protobuf:"varint,9,opt,name=numCreatedItems,proto3" json:"numCreatedItems,omitempty"`
	// The number of items that were updated as part of this change
	NumUpdatedItems int32 `protobuf:"varint,10,opt,name=numUpdatedItems,proto3" json:"numUpdatedItems,omitempty"`
	// The number of items that were replaced as part of this change
	NumReplacedItems int32 `protobuf:"varint,18,opt,name=numReplacedItems,proto3" json:"numReplacedItems,omitempty"`
	// The number of items that were deleted as part of this change
	NumDeletedItems     int32                        `protobuf:"varint,11,opt,name=numDeletedItems,proto3" json:"numDeletedItems,omitempty"`
	UnknownHealthChange *ChangeMetadata_HealthChange `protobuf:"bytes,12,opt,name=UnknownHealthChange,proto3" json:"UnknownHealthChange,omitempty"`
	OkHealthChange      *ChangeMetadata_HealthChange `protobuf:"bytes,13,opt,name=OkHealthChange,proto3" json:"OkHealthChange,omitempty"`
	WarningHealthChange *ChangeMetadata_HealthChange `protobuf:"bytes,14,opt,name=WarningHealthChange,proto3" json:"WarningHealthChange,omitempty"`
	ErrorHealthChange   *ChangeMetadata_HealthChange `protobuf:"bytes,15,opt,name=ErrorHealthChange,proto3" json:"ErrorHealthChange,omitempty"`
	PendingHealthChange *ChangeMetadata_HealthChange `protobuf:"bytes,16,opt,name=PendingHealthChange,proto3" json:"PendingHealthChange,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ChangeMetadata) Reset() {
	*x = ChangeMetadata{}
	mi := &file_changes_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMetadata) ProtoMessage() {}

func (x *ChangeMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMetadata.ProtoReflect.Descriptor instead.
func (*ChangeMetadata) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{68}
}

func (x *ChangeMetadata) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

func (x *ChangeMetadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChangeMetadata) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ChangeMetadata) GetStatus() ChangeStatus {
	if x != nil {
		return x.Status
	}
	return ChangeStatus_CHANGE_STATUS_UNSPECIFIED
}

func (x *ChangeMetadata) GetCreatorName() string {
	if x != nil {
		return x.CreatorName
	}
	return ""
}

func (x *ChangeMetadata) GetCreatorEmail() string {
	if x != nil {
		return x.CreatorEmail
	}
	return ""
}

func (x *ChangeMetadata) GetNumAffectedApps() int32 {
	if x != nil {
		return x.NumAffectedApps
	}
	return 0
}

func (x *ChangeMetadata) GetNumAffectedItems() int32 {
	if x != nil {
		return x.NumAffectedItems
	}
	return 0
}

func (x *ChangeMetadata) GetNumAffectedEdges() int32 {
	if x != nil {
		return x.NumAffectedEdges
	}
	return 0
}

func (x *ChangeMetadata) GetNumUnchangedItems() int32 {
	if x != nil {
		return x.NumUnchangedItems
	}
	return 0
}

func (x *ChangeMetadata) GetNumCreatedItems() int32 {
	if x != nil {
		return x.NumCreatedItems
	}
	return 0
}

func (x *ChangeMetadata) GetNumUpdatedItems() int32 {
	if x != nil {
		return x.NumUpdatedItems
	}
	return 0
}

func (x *ChangeMetadata) GetNumReplacedItems() int32 {
	if x != nil {
		return x.NumReplacedItems
	}
	return 0
}

func (x *ChangeMetadata) GetNumDeletedItems() int32 {
	if x != nil {
		return x.NumDeletedItems
	}
	return 0
}

func (x *ChangeMetadata) GetUnknownHealthChange() *ChangeMetadata_HealthChange {
	if x != nil {
		return x.UnknownHealthChange
	}
	return nil
}

func (x *ChangeMetadata) GetOkHealthChange() *ChangeMetadata_HealthChange {
	if x != nil {
		return x.OkHealthChange
	}
	return nil
}

func (x *ChangeMetadata) GetWarningHealthChange() *ChangeMetadata_HealthChange {
	if x != nil {
		return x.WarningHealthChange
	}
	return nil
}

func (x *ChangeMetadata) GetErrorHealthChange() *ChangeMetadata_HealthChange {
	if x != nil {
		return x.ErrorHealthChange
	}
	return nil
}

func (x *ChangeMetadata) GetPendingHealthChange() *ChangeMetadata_HealthChange {
	if x != nil {
		return x.PendingHealthChange
	}
	return nil
}

// user-supplied properties of this change
type ChangeProperties struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Short title for this change.
	// Example: "database upgrade"
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// Quick description of the change.
	// Example: "upgrade of the database to get access to the new contoso management processor"
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Link to the ticket for this change.
	// Example: "http://jira.contoso-engineering.com/browse/CM-1337"
	TicketLink string `protobuf:"bytes,4,opt,name=ticketLink,proto3" json:"ticketLink,omitempty"`
	// The owner of this change.
	// Example: Susan
	Owner string `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	// A comma-separated list of emails to keep updated with the status of this change.
	// Example: susan@contoso.com, jimmy@contoso.com
	CcEmails string `protobuf:"bytes,6,opt,name=ccEmails,proto3" json:"ccEmails,omitempty"`
	// UUID of a bookmark for the item queries of the items *directly* affected by
	// this change. This might be parsed from a terraform plan, added from the API,
	// parsed from a freeform ticket description etc.
	ChangingItemsBookmarkUUID []byte `protobuf:"bytes,7,opt,name=changingItemsBookmarkUUID,proto3" json:"changingItemsBookmarkUUID,omitempty"`
	// UUID of a snapshot for the item queries of the items *indirectly* affected
	// by this change i.e. the blast radius. The initial selection will be determined
	// automatically based off changingItemsBookmark, but can refined by the user.
	BlastRadiusSnapshotUUID []byte `protobuf:"bytes,11,opt,name=blastRadiusSnapshotUUID,proto3" json:"blastRadiusSnapshotUUID,omitempty"`
	// UUID of the whole-system snapshot created before the change has started.
	SystemBeforeSnapshotUUID []byte `protobuf:"bytes,8,opt,name=systemBeforeSnapshotUUID,proto3" json:"systemBeforeSnapshotUUID,omitempty"`
	// UUID of the whole-system snapshot created after the change has finished.
	SystemAfterSnapshotUUID []byte `protobuf:"bytes,9,opt,name=systemAfterSnapshotUUID,proto3" json:"systemAfterSnapshotUUID,omitempty"`
	// list of UUIDs for apps affected by this change.
	AffectedAppsUUID [][]byte `protobuf:"bytes,10,rep,name=affectedAppsUUID,proto3" json:"affectedAppsUUID,omitempty"`
	// a list of item diffs that were planned to be changed as part of this change. For all items that we could map, the ItemDiff.Reference will be set to the actual item found.
	PlannedChanges []*ItemDiff `protobuf:"bytes,12,rep,name=plannedChanges,proto3" json:"plannedChanges,omitempty"`
	// The raw plan output for calculating the change's risks.
	RawPlan string `protobuf:"bytes,13,opt,name=rawPlan,proto3" json:"rawPlan,omitempty"`
	// The code changes of this change for calculating the change's risks.
	CodeChanges string `protobuf:"bytes,14,opt,name=codeChanges,proto3" json:"codeChanges,omitempty"`
	// Repo information; can be an empty string. CLI attempts auto-population, but users can override. Not necessarily a URL. The UI will be responsible for any formatting/shortening/sprucing up should it be required.
	Repo string `protobuf:"bytes,15,opt,name=repo,proto3" json:"repo,omitempty"`
	// Tags that were set bu the user when the tag was created
	//
	// Deprecated: Use enrichedTags instead
	//
	// Deprecated: Marked as deprecated in changes.proto.
	Tags map[string]string `protobuf:"bytes,16,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Tags associated with this change
	EnrichedTags *EnrichedTags `protobuf:"bytes,18,opt,name=enrichedTags,proto3" json:"enrichedTags,omitempty"`
	// Tags that were skipped by auto-tagging rules
	SkippedAutoTags       map[string]*AutoTagValue               `protobuf:"bytes,19,rep,name=skippedAutoTags,proto3" json:"skippedAutoTags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	AutoTaggingRuleSource ChangeProperties_AutoTaggingRuleSource `protobuf:"varint,20,opt,name=autoTaggingRuleSource,proto3,enum=changes.ChangeProperties_AutoTaggingRuleSource" json:"autoTaggingRuleSource,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ChangeProperties) Reset() {
	*x = ChangeProperties{}
	mi := &file_changes_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeProperties) ProtoMessage() {}

func (x *ChangeProperties) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeProperties.ProtoReflect.Descriptor instead.
func (*ChangeProperties) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{69}
}

func (x *ChangeProperties) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChangeProperties) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ChangeProperties) GetTicketLink() string {
	if x != nil {
		return x.TicketLink
	}
	return ""
}

func (x *ChangeProperties) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ChangeProperties) GetCcEmails() string {
	if x != nil {
		return x.CcEmails
	}
	return ""
}

func (x *ChangeProperties) GetChangingItemsBookmarkUUID() []byte {
	if x != nil {
		return x.ChangingItemsBookmarkUUID
	}
	return nil
}

func (x *ChangeProperties) GetBlastRadiusSnapshotUUID() []byte {
	if x != nil {
		return x.BlastRadiusSnapshotUUID
	}
	return nil
}

func (x *ChangeProperties) GetSystemBeforeSnapshotUUID() []byte {
	if x != nil {
		return x.SystemBeforeSnapshotUUID
	}
	return nil
}

func (x *ChangeProperties) GetSystemAfterSnapshotUUID() []byte {
	if x != nil {
		return x.SystemAfterSnapshotUUID
	}
	return nil
}

func (x *ChangeProperties) GetAffectedAppsUUID() [][]byte {
	if x != nil {
		return x.AffectedAppsUUID
	}
	return nil
}

func (x *ChangeProperties) GetPlannedChanges() []*ItemDiff {
	if x != nil {
		return x.PlannedChanges
	}
	return nil
}

func (x *ChangeProperties) GetRawPlan() string {
	if x != nil {
		return x.RawPlan
	}
	return ""
}

func (x *ChangeProperties) GetCodeChanges() string {
	if x != nil {
		return x.CodeChanges
	}
	return ""
}

func (x *ChangeProperties) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

// Deprecated: Marked as deprecated in changes.proto.
func (x *ChangeProperties) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ChangeProperties) GetEnrichedTags() *EnrichedTags {
	if x != nil {
		return x.EnrichedTags
	}
	return nil
}

func (x *ChangeProperties) GetSkippedAutoTags() map[string]*AutoTagValue {
	if x != nil {
		return x.SkippedAutoTags
	}
	return nil
}

func (x *ChangeProperties) GetAutoTaggingRuleSource() ChangeProperties_AutoTaggingRuleSource {
	if x != nil {
		return x.AutoTaggingRuleSource
	}
	return ChangeProperties_AUTO_TAGGING_RULE_SOURCE_UNSPECIFIED
}

// list all changes
type ListChangesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChangesRequest) Reset() {
	*x = ListChangesRequest{}
	mi := &file_changes_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChangesRequest) ProtoMessage() {}

func (x *ListChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChangesRequest.ProtoReflect.Descriptor instead.
func (*ListChangesRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{70}
}

type ListChangesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Changes       []*Change              `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChangesResponse) Reset() {
	*x = ListChangesResponse{}
	mi := &file_changes_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChangesResponse) ProtoMessage() {}

func (x *ListChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChangesResponse.ProtoReflect.Descriptor instead.
func (*ListChangesResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{71}
}

func (x *ListChangesResponse) GetChanges() []*Change {
	if x != nil {
		return x.Changes
	}
	return nil
}

// list all changes in a specific status
type ListChangesByStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        ChangeStatus           `protobuf:"varint,1,opt,name=status,proto3,enum=changes.ChangeStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChangesByStatusRequest) Reset() {
	*x = ListChangesByStatusRequest{}
	mi := &file_changes_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChangesByStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChangesByStatusRequest) ProtoMessage() {}

func (x *ListChangesByStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChangesByStatusRequest.ProtoReflect.Descriptor instead.
func (*ListChangesByStatusRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{72}
}

func (x *ListChangesByStatusRequest) GetStatus() ChangeStatus {
	if x != nil {
		return x.Status
	}
	return ChangeStatus_CHANGE_STATUS_UNSPECIFIED
}

type ListChangesByStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Changes       []*Change              `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChangesByStatusResponse) Reset() {
	*x = ListChangesByStatusResponse{}
	mi := &file_changes_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChangesByStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChangesByStatusResponse) ProtoMessage() {}

func (x *ListChangesByStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChangesByStatusResponse.ProtoReflect.Descriptor instead.
func (*ListChangesByStatusResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{73}
}

func (x *ListChangesByStatusResponse) GetChanges() []*Change {
	if x != nil {
		return x.Changes
	}
	return nil
}

// create a new change
type CreateChangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Properties    *ChangeProperties      `protobuf:"bytes,1,opt,name=properties,proto3" json:"properties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChangeRequest) Reset() {
	*x = CreateChangeRequest{}
	mi := &file_changes_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChangeRequest) ProtoMessage() {}

func (x *CreateChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChangeRequest.ProtoReflect.Descriptor instead.
func (*CreateChangeRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{74}
}

func (x *CreateChangeRequest) GetProperties() *ChangeProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

type CreateChangeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Change        *Change                `protobuf:"bytes,1,opt,name=change,proto3" json:"change,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChangeResponse) Reset() {
	*x = CreateChangeResponse{}
	mi := &file_changes_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChangeResponse) ProtoMessage() {}

func (x *CreateChangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChangeResponse.ProtoReflect.Descriptor instead.
func (*CreateChangeResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{75}
}

func (x *CreateChangeResponse) GetChange() *Change {
	if x != nil {
		return x.Change
	}
	return nil
}

// get the details of a specific change
type GetChangeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	UUID  []byte                 `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// Return a slimmed down version of the change. This will exclude the
	// following data:
	// * `rawPlan`: The entire Terraform plan output
	// * `codeChanges`: The code changes that created this change
	Slim          bool `protobuf:"varint,2,opt,name=slim,proto3" json:"slim,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChangeRequest) Reset() {
	*x = GetChangeRequest{}
	mi := &file_changes_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChangeRequest) ProtoMessage() {}

func (x *GetChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChangeRequest.ProtoReflect.Descriptor instead.
func (*GetChangeRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{76}
}

func (x *GetChangeRequest) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

func (x *GetChangeRequest) GetSlim() bool {
	if x != nil {
		return x.Slim
	}
	return false
}

type GetChangeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Change        *Change                `protobuf:"bytes,1,opt,name=change,proto3" json:"change,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChangeResponse) Reset() {
	*x = GetChangeResponse{}
	mi := &file_changes_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChangeResponse) ProtoMessage() {}

func (x *GetChangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChangeResponse.ProtoReflect.Descriptor instead.
func (*GetChangeResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{77}
}

func (x *GetChangeResponse) GetChange() *Change {
	if x != nil {
		return x.Change
	}
	return nil
}

// get the details of a specific change
type GetChangeRisksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UUID          []byte                 `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChangeRisksRequest) Reset() {
	*x = GetChangeRisksRequest{}
	mi := &file_changes_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChangeRisksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChangeRisksRequest) ProtoMessage() {}

func (x *GetChangeRisksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChangeRisksRequest.ProtoReflect.Descriptor instead.
func (*GetChangeRisksRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{78}
}

func (x *GetChangeRisksRequest) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

type ChangeRiskMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The status of the risk calculation
	ChangeAnalysisStatus *ChangeAnalysisStatus `protobuf:"bytes,1,opt,name=changeAnalysisStatus,proto3" json:"changeAnalysisStatus,omitempty"`
	// The risks that are related to this change
	Risks []*Risk `protobuf:"bytes,5,rep,name=risks,proto3" json:"risks,omitempty"`
	// The number of low risks in this change
	NumLowRisk int32 `protobuf:"varint,6,opt,name=numLowRisk,proto3" json:"numLowRisk,omitempty"`
	// The number of medium risks in this change
	NumMediumRisk int32 `protobuf:"varint,7,opt,name=numMediumRisk,proto3" json:"numMediumRisk,omitempty"`
	// The number of high risks in this change
	NumHighRisk   int32 `protobuf:"varint,8,opt,name=numHighRisk,proto3" json:"numHighRisk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeRiskMetadata) Reset() {
	*x = ChangeRiskMetadata{}
	mi := &file_changes_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeRiskMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRiskMetadata) ProtoMessage() {}

func (x *ChangeRiskMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRiskMetadata.ProtoReflect.Descriptor instead.
func (*ChangeRiskMetadata) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{79}
}

func (x *ChangeRiskMetadata) GetChangeAnalysisStatus() *ChangeAnalysisStatus {
	if x != nil {
		return x.ChangeAnalysisStatus
	}
	return nil
}

func (x *ChangeRiskMetadata) GetRisks() []*Risk {
	if x != nil {
		return x.Risks
	}
	return nil
}

func (x *ChangeRiskMetadata) GetNumLowRisk() int32 {
	if x != nil {
		return x.NumLowRisk
	}
	return 0
}

func (x *ChangeRiskMetadata) GetNumMediumRisk() int32 {
	if x != nil {
		return x.NumMediumRisk
	}
	return 0
}

func (x *ChangeRiskMetadata) GetNumHighRisk() int32 {
	if x != nil {
		return x.NumHighRisk
	}
	return 0
}

type GetChangeRisksResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ChangeRiskMetadata *ChangeRiskMetadata    `protobuf:"bytes,1,opt,name=changeRiskMetadata,proto3" json:"changeRiskMetadata,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetChangeRisksResponse) Reset() {
	*x = GetChangeRisksResponse{}
	mi := &file_changes_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChangeRisksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChangeRisksResponse) ProtoMessage() {}

func (x *GetChangeRisksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChangeRisksResponse.ProtoReflect.Descriptor instead.
func (*GetChangeRisksResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{80}
}

func (x *GetChangeRisksResponse) GetChangeRiskMetadata() *ChangeRiskMetadata {
	if x != nil {
		return x.ChangeRiskMetadata
	}
	return nil
}

// update an existing change
type UpdateChangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UUID          []byte                 `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Properties    *ChangeProperties      `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateChangeRequest) Reset() {
	*x = UpdateChangeRequest{}
	mi := &file_changes_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChangeRequest) ProtoMessage() {}

func (x *UpdateChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChangeRequest.ProtoReflect.Descriptor instead.
func (*UpdateChangeRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{81}
}

func (x *UpdateChangeRequest) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

func (x *UpdateChangeRequest) GetProperties() *ChangeProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

type UpdateChangeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Change        *Change                `protobuf:"bytes,1,opt,name=change,proto3" json:"change,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateChangeResponse) Reset() {
	*x = UpdateChangeResponse{}
	mi := &file_changes_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateChangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChangeResponse) ProtoMessage() {}

func (x *UpdateChangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChangeResponse.ProtoReflect.Descriptor instead.
func (*UpdateChangeResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{82}
}

func (x *UpdateChangeResponse) GetChange() *Change {
	if x != nil {
		return x.Change
	}
	return nil
}

// delete a change
type DeleteChangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UUID          []byte                 `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteChangeRequest) Reset() {
	*x = DeleteChangeRequest{}
	mi := &file_changes_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChangeRequest) ProtoMessage() {}

func (x *DeleteChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChangeRequest.ProtoReflect.Descriptor instead.
func (*DeleteChangeRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{83}
}

func (x *DeleteChangeRequest) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

// list changes for a snapshot UUID
type ListChangesBySnapshotUUIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UUID          []byte                 `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChangesBySnapshotUUIDRequest) Reset() {
	*x = ListChangesBySnapshotUUIDRequest{}
	mi := &file_changes_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChangesBySnapshotUUIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChangesBySnapshotUUIDRequest) ProtoMessage() {}

func (x *ListChangesBySnapshotUUIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChangesBySnapshotUUIDRequest.ProtoReflect.Descriptor instead.
func (*ListChangesBySnapshotUUIDRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{84}
}

func (x *ListChangesBySnapshotUUIDRequest) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

type ListChangesBySnapshotUUIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Changes       []*Change              `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChangesBySnapshotUUIDResponse) Reset() {
	*x = ListChangesBySnapshotUUIDResponse{}
	mi := &file_changes_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChangesBySnapshotUUIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChangesBySnapshotUUIDResponse) ProtoMessage() {}

func (x *ListChangesBySnapshotUUIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChangesBySnapshotUUIDResponse.ProtoReflect.Descriptor instead.
func (*ListChangesBySnapshotUUIDResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{85}
}

func (x *ListChangesBySnapshotUUIDResponse) GetChanges() []*Change {
	if x != nil {
		return x.Changes
	}
	return nil
}

type DeleteChangeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteChangeResponse) Reset() {
	*x = DeleteChangeResponse{}
	mi := &file_changes_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteChangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChangeResponse) ProtoMessage() {}

func (x *DeleteChangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChangeResponse.ProtoReflect.Descriptor instead.
func (*DeleteChangeResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{86}
}

type RefreshStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshStateRequest) Reset() {
	*x = RefreshStateRequest{}
	mi := &file_changes_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshStateRequest) ProtoMessage() {}

func (x *RefreshStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshStateRequest.ProtoReflect.Descriptor instead.
func (*RefreshStateRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{87}
}

type RefreshStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshStateResponse) Reset() {
	*x = RefreshStateResponse{}
	mi := &file_changes_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshStateResponse) ProtoMessage() {}

func (x *RefreshStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshStateResponse.ProtoReflect.Descriptor instead.
func (*RefreshStateResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{88}
}

type CalculateBlastRadiusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the change to calculate the blast radius for.
	ChangeUUID []byte `protobuf:"bytes,1,opt,name=changeUUID,proto3" json:"changeUUID,omitempty"`
	// If true, the blast radius will be calculated again, even if it was already.
	// Otherwise if the blast radius has already been calculated (i.e. the status
	// is `DEFINING` and `blastRadiusBookmarkUUID` is set) an error will be
	// returned.
	Force         bool `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalculateBlastRadiusRequest) Reset() {
	*x = CalculateBlastRadiusRequest{}
	mi := &file_changes_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateBlastRadiusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateBlastRadiusRequest) ProtoMessage() {}

func (x *CalculateBlastRadiusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateBlastRadiusRequest.ProtoReflect.Descriptor instead.
func (*CalculateBlastRadiusRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{89}
}

func (x *CalculateBlastRadiusRequest) GetChangeUUID() []byte {
	if x != nil {
		return x.ChangeUUID
	}
	return nil
}

func (x *CalculateBlastRadiusRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type CalculateBlastRadiusResponse struct {
	state    protoimpl.MessageState             `protogen:"open.v1"`
	State    CalculateBlastRadiusResponse_State `protobuf:"varint,1,opt,name=state,proto3,enum=changes.CalculateBlastRadiusResponse_State" json:"state,omitempty"`
	NumItems uint32                             `protobuf:"varint,2,opt,name=numItems,proto3" json:"numItems,omitempty"`
	NumEdges uint32                             `protobuf:"varint,3,opt,name=numEdges,proto3" json:"numEdges,omitempty"`
	// A list of errors that were encountered as part of calculating the blast
	// radius. These should only be populated if the state is `STATE_DONE` to
	// avoid sending them repeatedly
	Errors        []string `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalculateBlastRadiusResponse) Reset() {
	*x = CalculateBlastRadiusResponse{}
	mi := &file_changes_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateBlastRadiusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateBlastRadiusResponse) ProtoMessage() {}

func (x *CalculateBlastRadiusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateBlastRadiusResponse.ProtoReflect.Descriptor instead.
func (*CalculateBlastRadiusResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{90}
}

func (x *CalculateBlastRadiusResponse) GetState() CalculateBlastRadiusResponse_State {
	if x != nil {
		return x.State
	}
	return CalculateBlastRadiusResponse_STATE_UNSPECIFIED
}

func (x *CalculateBlastRadiusResponse) GetNumItems() uint32 {
	if x != nil {
		return x.NumItems
	}
	return 0
}

func (x *CalculateBlastRadiusResponse) GetNumEdges() uint32 {
	if x != nil {
		return x.NumEdges
	}
	return 0
}

func (x *CalculateBlastRadiusResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type StartChangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChangeUUID    []byte                 `protobuf:"bytes,1,opt,name=changeUUID,proto3" json:"changeUUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartChangeRequest) Reset() {
	*x = StartChangeRequest{}
	mi := &file_changes_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartChangeRequest) ProtoMessage() {}

func (x *StartChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartChangeRequest.ProtoReflect.Descriptor instead.
func (*StartChangeRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{91}
}

func (x *StartChangeRequest) GetChangeUUID() []byte {
	if x != nil {
		return x.ChangeUUID
	}
	return nil
}

type StartChangeResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	State         StartChangeResponse_State `protobuf:"varint,1,opt,name=state,proto3,enum=changes.StartChangeResponse_State" json:"state,omitempty"`
	NumItems      uint32                    `protobuf:"varint,2,opt,name=numItems,proto3" json:"numItems,omitempty"`
	NumEdges      uint32                    `protobuf:"varint,3,opt,name=NumEdges,proto3" json:"NumEdges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartChangeResponse) Reset() {
	*x = StartChangeResponse{}
	mi := &file_changes_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartChangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartChangeResponse) ProtoMessage() {}

func (x *StartChangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartChangeResponse.ProtoReflect.Descriptor instead.
func (*StartChangeResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{92}
}

func (x *StartChangeResponse) GetState() StartChangeResponse_State {
	if x != nil {
		return x.State
	}
	return StartChangeResponse_STATE_UNSPECIFIED
}

func (x *StartChangeResponse) GetNumItems() uint32 {
	if x != nil {
		return x.NumItems
	}
	return 0
}

func (x *StartChangeResponse) GetNumEdges() uint32 {
	if x != nil {
		return x.NumEdges
	}
	return 0
}

type EndChangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChangeUUID    []byte                 `protobuf:"bytes,1,opt,name=changeUUID,proto3" json:"changeUUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndChangeRequest) Reset() {
	*x = EndChangeRequest{}
	mi := &file_changes_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndChangeRequest) ProtoMessage() {}

func (x *EndChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndChangeRequest.ProtoReflect.Descriptor instead.
func (*EndChangeRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{93}
}

func (x *EndChangeRequest) GetChangeUUID() []byte {
	if x != nil {
		return x.ChangeUUID
	}
	return nil
}

type EndChangeResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	State         EndChangeResponse_State `protobuf:"varint,1,opt,name=state,proto3,enum=changes.EndChangeResponse_State" json:"state,omitempty"`
	NumItems      uint32                  `protobuf:"varint,2,opt,name=numItems,proto3" json:"numItems,omitempty"`
	NumEdges      uint32                  `protobuf:"varint,3,opt,name=NumEdges,proto3" json:"NumEdges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndChangeResponse) Reset() {
	*x = EndChangeResponse{}
	mi := &file_changes_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndChangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndChangeResponse) ProtoMessage() {}

func (x *EndChangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndChangeResponse.ProtoReflect.Descriptor instead.
func (*EndChangeResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{94}
}

func (x *EndChangeResponse) GetState() EndChangeResponse_State {
	if x != nil {
		return x.State
	}
	return EndChangeResponse_STATE_UNSPECIFIED
}

func (x *EndChangeResponse) GetNumItems() uint32 {
	if x != nil {
		return x.NumItems
	}
	return 0
}

func (x *EndChangeResponse) GetNumEdges() uint32 {
	if x != nil {
		return x.NumEdges
	}
	return 0
}

// complete Onboarding information with machine-supplied and user-supplied values
type Onboarding struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// machine-generated metadata of this onboarding info
	Metadata *OnboardingMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// user-supplied properties of this onboarding info
	Properties    *OnboardingProperties `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Onboarding) Reset() {
	*x = Onboarding{}
	mi := &file_changes_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Onboarding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Onboarding) ProtoMessage() {}

func (x *Onboarding) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Onboarding.ProtoReflect.Descriptor instead.
func (*Onboarding) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{95}
}

func (x *Onboarding) GetMetadata() *OnboardingMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Onboarding) GetProperties() *OnboardingProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

// machine-generated metadata of this onboarding info
type OnboardingMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// timestamp when this onboarding info was created
	Created *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// whether or not the user already has an AWS source configured
	HasAwsSource  bool `protobuf:"varint,3,opt,name=hasAwsSource,proto3" json:"hasAwsSource,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnboardingMetadata) Reset() {
	*x = OnboardingMetadata{}
	mi := &file_changes_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnboardingMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnboardingMetadata) ProtoMessage() {}

func (x *OnboardingMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnboardingMetadata.ProtoReflect.Descriptor instead.
func (*OnboardingMetadata) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{96}
}

func (x *OnboardingMetadata) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *OnboardingMetadata) GetHasAwsSource() bool {
	if x != nil {
		return x.HasAwsSource
	}
	return false
}

// user-supplied properties of this onboarding info
type OnboardingProperties struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The current status of this onboarding info.
	Status OnboardingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=changes.OnboardingStatus" json:"status,omitempty"`
	// The UUID for the aws-source that was configured as part of onboarding
	AwsSourceUUID []byte `protobuf:"bytes,2,opt,name=awsSourceUUID,proto3" json:"awsSourceUUID,omitempty"`
	// The UUID of the app that was created as part of onboarding
	AppUUID []byte `protobuf:"bytes,3,opt,name=appUUID,proto3" json:"appUUID,omitempty"`
	// The UUID of the change that was created as part of onboarding
	ChangeUUID    []byte `protobuf:"bytes,4,opt,name=changeUUID,proto3" json:"changeUUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnboardingProperties) Reset() {
	*x = OnboardingProperties{}
	mi := &file_changes_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnboardingProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnboardingProperties) ProtoMessage() {}

func (x *OnboardingProperties) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnboardingProperties.ProtoReflect.Descriptor instead.
func (*OnboardingProperties) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{97}
}

func (x *OnboardingProperties) GetStatus() OnboardingStatus {
	if x != nil {
		return x.Status
	}
	return OnboardingStatus_ONBOARDING_STATUS_UNSPECIFIED
}

func (x *OnboardingProperties) GetAwsSourceUUID() []byte {
	if x != nil {
		return x.AwsSourceUUID
	}
	return nil
}

func (x *OnboardingProperties) GetAppUUID() []byte {
	if x != nil {
		return x.AppUUID
	}
	return nil
}

func (x *OnboardingProperties) GetChangeUUID() []byte {
	if x != nil {
		return x.ChangeUUID
	}
	return nil
}

// get the onboarding status
type GetOnboardingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOnboardingRequest) Reset() {
	*x = GetOnboardingRequest{}
	mi := &file_changes_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOnboardingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnboardingRequest) ProtoMessage() {}

func (x *GetOnboardingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnboardingRequest.ProtoReflect.Descriptor instead.
func (*GetOnboardingRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{98}
}

type GetOnboardingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Onboarding    *Onboarding            `protobuf:"bytes,1,opt,name=onboarding,proto3" json:"onboarding,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOnboardingResponse) Reset() {
	*x = GetOnboardingResponse{}
	mi := &file_changes_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOnboardingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnboardingResponse) ProtoMessage() {}

func (x *GetOnboardingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnboardingResponse.ProtoReflect.Descriptor instead.
func (*GetOnboardingResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{99}
}

func (x *GetOnboardingResponse) GetOnboarding() *Onboarding {
	if x != nil {
		return x.Onboarding
	}
	return nil
}

// update onboarding status
type UpdateOnboardingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Properties    *OnboardingProperties  `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOnboardingRequest) Reset() {
	*x = UpdateOnboardingRequest{}
	mi := &file_changes_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOnboardingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOnboardingRequest) ProtoMessage() {}

func (x *UpdateOnboardingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOnboardingRequest.ProtoReflect.Descriptor instead.
func (*UpdateOnboardingRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{100}
}

func (x *UpdateOnboardingRequest) GetProperties() *OnboardingProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

type UpdateOnboardingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Onboarding    *Onboarding            `protobuf:"bytes,1,opt,name=onboarding,proto3" json:"onboarding,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOnboardingResponse) Reset() {
	*x = UpdateOnboardingResponse{}
	mi := &file_changes_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOnboardingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOnboardingResponse) ProtoMessage() {}

func (x *UpdateOnboardingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOnboardingResponse.ProtoReflect.Descriptor instead.
func (*UpdateOnboardingResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{101}
}

func (x *UpdateOnboardingResponse) GetOnboarding() *Onboarding {
	if x != nil {
		return x.Onboarding
	}
	return nil
}

type SimulateChangeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the change to simulate
	ChangeUUID    []byte `protobuf:"bytes,1,opt,name=changeUUID,proto3" json:"changeUUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimulateChangeRequest) Reset() {
	*x = SimulateChangeRequest{}
	mi := &file_changes_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimulateChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimulateChangeRequest) ProtoMessage() {}

func (x *SimulateChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimulateChangeRequest.ProtoReflect.Descriptor instead.
func (*SimulateChangeRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{102}
}

func (x *SimulateChangeRequest) GetChangeUUID() []byte {
	if x != nil {
		return x.ChangeUUID
	}
	return nil
}

type SimulateChangeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the simulation is complete
	Done bool `protobuf:"varint,1,opt,name=done,proto3" json:"done,omitempty"`
	// How far through the simulation process we are. This will be pretty
	// approximate as it's not expected to take very long and is more to give the
	// sense of progress than to be an accurate measure
	PercentComplete uint32 `protobuf:"varint,2,opt,name=percentComplete,proto3" json:"percentComplete,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SimulateChangeResponse) Reset() {
	*x = SimulateChangeResponse{}
	mi := &file_changes_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimulateChangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimulateChangeResponse) ProtoMessage() {}

func (x *SimulateChangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimulateChangeResponse.ProtoReflect.Descriptor instead.
func (*SimulateChangeResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{103}
}

func (x *SimulateChangeResponse) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *SimulateChangeResponse) GetPercentComplete() uint32 {
	if x != nil {
		return x.PercentComplete
	}
	return 0
}

type Risk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UUID          []byte                 `protobuf:"bytes,5,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Severity      Risk_Severity          `protobuf:"varint,2,opt,name=severity,proto3,enum=changes.Risk_Severity" json:"severity,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	RelatedItems  []*Reference           `protobuf:"bytes,4,rep,name=relatedItems,proto3" json:"relatedItems,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Risk) Reset() {
	*x = Risk{}
	mi := &file_changes_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Risk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Risk) ProtoMessage() {}

func (x *Risk) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Risk.ProtoReflect.Descriptor instead.
func (*Risk) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{104}
}

func (x *Risk) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

func (x *Risk) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Risk) GetSeverity() Risk_Severity {
	if x != nil {
		return x.Severity
	}
	return Risk_SEVERITY_UNSPECIFIED
}

func (x *Risk) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Risk) GetRelatedItems() []*Reference {
	if x != nil {
		return x.RelatedItems
	}
	return nil
}

type ChangeAnalysisStatus struct {
	state  protoimpl.MessageState      `protogen:"open.v1"`
	Status ChangeAnalysisStatus_Status `protobuf:"varint,1,opt,name=status,proto3,enum=changes.ChangeAnalysisStatus_Status" json:"status,omitempty"`
	// Milestones within the risk calculation process. They will be populated when
	// the status is `STATUS_INPROGRESS` and show a more detailed breakdown of the
	// progress
	ProgressMilestones []*ChangeAnalysisStatus_ProgressMilestone `protobuf:"bytes,5,rep,name=progressMilestones,proto3" json:"progressMilestones,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChangeAnalysisStatus) Reset() {
	*x = ChangeAnalysisStatus{}
	mi := &file_changes_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeAnalysisStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAnalysisStatus) ProtoMessage() {}

func (x *ChangeAnalysisStatus) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAnalysisStatus.ProtoReflect.Descriptor instead.
func (*ChangeAnalysisStatus) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{105}
}

func (x *ChangeAnalysisStatus) GetStatus() ChangeAnalysisStatus_Status {
	if x != nil {
		return x.Status
	}
	return ChangeAnalysisStatus_STATUS_UNSPECIFIED
}

func (x *ChangeAnalysisStatus) GetProgressMilestones() []*ChangeAnalysisStatus_ProgressMilestone {
	if x != nil {
		return x.ProgressMilestones
	}
	return nil
}

type ChangeArchive struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Change                *Change                `protobuf:"bytes,1,opt,name=Change,proto3" json:"Change,omitempty"`
	ChangingItemsBookmark *Bookmark              `protobuf:"bytes,2,opt,name=changingItemsBookmark,proto3,oneof" json:"changingItemsBookmark,omitempty"`
	BlastRadiusSnapshot   *Snapshot              `protobuf:"bytes,3,opt,name=blastRadiusSnapshot,proto3,oneof" json:"blastRadiusSnapshot,omitempty"`
	SystemBeforeSnapshot  *Snapshot              `protobuf:"bytes,4,opt,name=systemBeforeSnapshot,proto3,oneof" json:"systemBeforeSnapshot,omitempty"`
	SystemAfterSnapshot   *Snapshot              `protobuf:"bytes,5,opt,name=systemAfterSnapshot,proto3,oneof" json:"systemAfterSnapshot,omitempty"`
	AffectedApps          []*App                 `protobuf:"bytes,6,rep,name=affectedApps,proto3" json:"affectedApps,omitempty"`
	Timeline              []*ChangeTimelineEntry `protobuf:"bytes,7,rep,name=timeline,proto3" json:"timeline,omitempty"`
	ChangeRiskMetadata    *ChangeRiskMetadata    `protobuf:"bytes,8,opt,name=changeRiskMetadata,proto3" json:"changeRiskMetadata,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ChangeArchive) Reset() {
	*x = ChangeArchive{}
	mi := &file_changes_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeArchive) ProtoMessage() {}

func (x *ChangeArchive) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeArchive.ProtoReflect.Descriptor instead.
func (*ChangeArchive) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{106}
}

func (x *ChangeArchive) GetChange() *Change {
	if x != nil {
		return x.Change
	}
	return nil
}

func (x *ChangeArchive) GetChangingItemsBookmark() *Bookmark {
	if x != nil {
		return x.ChangingItemsBookmark
	}
	return nil
}

func (x *ChangeArchive) GetBlastRadiusSnapshot() *Snapshot {
	if x != nil {
		return x.BlastRadiusSnapshot
	}
	return nil
}

func (x *ChangeArchive) GetSystemBeforeSnapshot() *Snapshot {
	if x != nil {
		return x.SystemBeforeSnapshot
	}
	return nil
}

func (x *ChangeArchive) GetSystemAfterSnapshot() *Snapshot {
	if x != nil {
		return x.SystemAfterSnapshot
	}
	return nil
}

func (x *ChangeArchive) GetAffectedApps() []*App {
	if x != nil {
		return x.AffectedApps
	}
	return nil
}

func (x *ChangeArchive) GetTimeline() []*ChangeTimelineEntry {
	if x != nil {
		return x.Timeline
	}
	return nil
}

func (x *ChangeArchive) GetChangeRiskMetadata() *ChangeRiskMetadata {
	if x != nil {
		return x.ChangeRiskMetadata
	}
	return nil
}

type GetChangeArchiveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UUID          []byte                 `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChangeArchiveRequest) Reset() {
	*x = GetChangeArchiveRequest{}
	mi := &file_changes_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChangeArchiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChangeArchiveRequest) ProtoMessage() {}

func (x *GetChangeArchiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChangeArchiveRequest.ProtoReflect.Descriptor instead.
func (*GetChangeArchiveRequest) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{107}
}

func (x *GetChangeArchiveRequest) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

type GetChangeArchiveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChangeArchive *ChangeArchive         `protobuf:"bytes,1,opt,name=changeArchive,proto3" json:"changeArchive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChangeArchiveResponse) Reset() {
	*x = GetChangeArchiveResponse{}
	mi := &file_changes_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChangeArchiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChangeArchiveResponse) ProtoMessage() {}

func (x *GetChangeArchiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChangeArchiveResponse.ProtoReflect.Descriptor instead.
func (*GetChangeArchiveResponse) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{108}
}

func (x *GetChangeArchiveResponse) GetChangeArchive() *ChangeArchive {
	if x != nil {
		return x.ChangeArchive
	}
	return nil
}

// Represents the current state of a given health state, and the amount that
// it has changed. This doesn't just look at the change in total number of
// items, but also the number of items that have been added and removed, even
// if they were to add to the same number
type ChangeMetadata_HealthChange struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of items that were added to this health state as part of the
	// change
	Added int32 `protobuf:"varint,1,opt,name=added,proto3" json:"added,omitempty"`
	// The number of items that were removed them this health state as part of
	// the change
	Removed int32 `protobuf:"varint,2,opt,name=removed,proto3" json:"removed,omitempty"`
	// The final number of items that were in this health state
	FinalTotal    int32 `protobuf:"varint,3,opt,name=finalTotal,proto3" json:"finalTotal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeMetadata_HealthChange) Reset() {
	*x = ChangeMetadata_HealthChange{}
	mi := &file_changes_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeMetadata_HealthChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMetadata_HealthChange) ProtoMessage() {}

func (x *ChangeMetadata_HealthChange) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMetadata_HealthChange.ProtoReflect.Descriptor instead.
func (*ChangeMetadata_HealthChange) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{68, 0}
}

func (x *ChangeMetadata_HealthChange) GetAdded() int32 {
	if x != nil {
		return x.Added
	}
	return 0
}

func (x *ChangeMetadata_HealthChange) GetRemoved() int32 {
	if x != nil {
		return x.Removed
	}
	return 0
}

func (x *ChangeMetadata_HealthChange) GetFinalTotal() int32 {
	if x != nil {
		return x.FinalTotal
	}
	return 0
}

type ChangeAnalysisStatus_ProgressMilestone struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The description of this milestone
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// The status of this milestone
	Status        ChangeAnalysisStatus_ProgressMilestone_Status `protobuf:"varint,2,opt,name=status,proto3,enum=changes.ChangeAnalysisStatus_ProgressMilestone_Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeAnalysisStatus_ProgressMilestone) Reset() {
	*x = ChangeAnalysisStatus_ProgressMilestone{}
	mi := &file_changes_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeAnalysisStatus_ProgressMilestone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAnalysisStatus_ProgressMilestone) ProtoMessage() {}

func (x *ChangeAnalysisStatus_ProgressMilestone) ProtoReflect() protoreflect.Message {
	mi := &file_changes_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAnalysisStatus_ProgressMilestone.ProtoReflect.Descriptor instead.
func (*ChangeAnalysisStatus_ProgressMilestone) Descriptor() ([]byte, []int) {
	return file_changes_proto_rawDescGZIP(), []int{105, 0}
}

func (x *ChangeAnalysisStatus_ProgressMilestone) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ChangeAnalysisStatus_ProgressMilestone) GetStatus() ChangeAnalysisStatus_ProgressMilestone_Status {
	if x != nil {
		return x.Status
	}
	return ChangeAnalysisStatus_ProgressMilestone_STATUS_PENDING
}

var File_changes_proto protoreflect.FileDescriptor

var file_changes_proto_rawDesc = string([]byte{
	0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x62, 0x6f, 0x6f, 0x6b, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x52, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x41, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x41, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x6c,
	0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d,
	0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x22, 0x9c, 0x01,
	0x0a, 0x0e, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x4b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x72, 0x0a, 0x04,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x2e, 0x52, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x4c,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x37, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x24, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x22, 0x34, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21,
	0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c,
	0x65, 0x22, 0x60, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x22, 0x37, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x72, 0x75, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x27, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x55, 0x55, 0x49, 0x44, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x0a, 0x11, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x55, 0x55, 0x49, 0x44, 0x22, 0x28, 0x0a, 0x12, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x6a,
	0x0a, 0x0f, 0x54, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e,
	0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x22, 0x79, 0x0a, 0x10, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49,
	0x44, 0x22, 0x53, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0xc4, 0x01, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2d,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x68, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x68, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x22,
	0xdb, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x66, 0x66, 0x52, 0x0d, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3b, 0x0a, 0x0f,
	0x75, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x66, 0x66, 0x52, 0x0f, 0x75, 0x6e, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x05, 0x65, 0x64, 0x67,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x52,
	0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x66, 0x66, 0x52,
	0x0c, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x41, 0x0a,
	0x1f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44,
	0x22, 0x52, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x44, 0x69, 0x66, 0x66, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x38, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x22, 0x42,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x70, 0x70,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x61, 0x70, 0x70,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x04, 0x61, 0x70,
	0x70, 0x73, 0x22, 0x6e, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44,
	0x12, 0x30, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x79, 0x0a, 0x0e, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x69, 0x66, 0x66, 0x12, 0x25, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x44, 0x69, 0x66, 0x66, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x2f, 0x0a, 0x0c, 0x6d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0xcd, 0x02,
	0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x12, 0x3d, 0x0a,
	0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x4d,
	0x61, 0x70, 0x70, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x66, 0x66, 0x52, 0x0d, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x5c, 0x0a, 0x19,
	0x62, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x61,
	0x64, 0x69, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x19, 0x62, 0x6c,
	0x61, 0x73, 0x74, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x53, 0x0a, 0x18, 0x61, 0x75,
	0x74, 0x6f, 0x54, 0x61, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x4f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x18, 0x61, 0x75, 0x74, 0x6f, 0x54, 0x61, 0x67, 0x67, 0x69,
	0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x42,
	0x1c, 0x0a, 0x1a, 0x5f, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x22, 0x38, 0x0a,
	0x1c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x70, 0x70, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x61, 0x70, 0x70, 0x55, 0x55, 0x49, 0x44, 0x22, 0x51, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x2a, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x22, 0x3e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x03, 0x61, 0x70, 0x70, 0x22, 0x2e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x55, 0x55, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x05, 0x55, 0x55, 0x49, 0x44, 0x73, 0x22, 0x42, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x04, 0x61, 0x70, 0x70, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x16, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x22, 0xda, 0x02, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x65, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x2c, 0x0a, 0x05, 0x72, 0x69, 0x73, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x2e, 0x53, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x05, 0x72, 0x69, 0x73, 0x6b, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x6f,
	0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e,
	0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x22, 0x80, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x33,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x1e, 0x0a, 0x1c, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x4f, 0x0a, 0x1d, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6d, 0x65,
	0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x14, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x04, 0x61, 0x70, 0x70, 0x73, 0x22, 0x8d, 0x01, 0x0a,
	0x0f, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x66, 0x66, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x1e, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44,
	0x69, 0x66, 0x66, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x29, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52,
	0x0b, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x22, 0x97, 0x01, 0x0a,
	0x08, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x66, 0x66, 0x12, 0x1e, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x66, 0x66, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x06, 0x62, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x22, 0xb6, 0x02, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x30, 0x0a, 0x13, 0x6e, 0x75, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x41, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6e, 0x75,
	0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x38, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x62,
	0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x55, 0x55, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x55, 0x55, 0x49, 0x44, 0x22,
	0x6f, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x12, 0x30, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x22, 0x81, 0x03, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x55, 0x55, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x46, 0x0a, 0x10, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x6e, 0x75, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x6e, 0x75, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x41, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x22, 0x69, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x62,
	0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x55, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x55, 0x55, 0x49, 0x44, 0x22,
	0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x34, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x41,
	0x70, 0x70, 0x52, 0x04, 0x61, 0x70, 0x70, 0x73, 0x22, 0x4a, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x03, 0x61, 0x70, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x2e, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61, 0x70, 0x70, 0x22, 0x60, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x39, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x70,
	0x70, 0x52, 0x03, 0x61, 0x70, 0x70, 0x22, 0x23, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x22, 0x30, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61, 0x70, 0x70, 0x22, 0x5e, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x33, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61,
	0x70, 0x70, 0x22, 0x26, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2b, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x22, 0x43, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x22, 0x9f, 0x01, 0x0a, 0x0c, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x65, 0x64, 0x54, 0x61,
	0x67, 0x73, 0x12, 0x3f, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x12,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x45,
	0x6e, 0x72, 0x69, 0x63, 0x68, 0x65, 0x64, 0x54, 0x61, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x74, 0x61, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x4e, 0x0a, 0x0d, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e,
	0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x8d, 0x01, 0x0a, 0x08, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x3b, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3b, 0x0a,
	0x0c, 0x61, 0x75, 0x74, 0x6f, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x75,
	0x74, 0x6f, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x75,
	0x74, 0x6f, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x24, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x0c, 0x41, 0x75, 0x74,
	0x6f, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0xd6, 0x05,
	0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x55,
	0x55, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x41,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x70,
	0x70, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6e, 0x75,
	0x6d, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2a,
	0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x64, 0x67,
	0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x41, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x64, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x75,
	0x6d, 0x4c, 0x6f, 0x77, 0x52, 0x69, 0x73, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x6e, 0x75, 0x6d, 0x4c, 0x6f, 0x77, 0x52, 0x69, 0x73, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x75,
	0x6d, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x52, 0x69, 0x73, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x52, 0x69, 0x73, 0x6b,
	0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x48, 0x69, 0x67, 0x68, 0x52, 0x69, 0x73, 0x6b, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x48, 0x69, 0x67, 0x68, 0x52, 0x69,
	0x73, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x54,
	0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x02, 0x18, 0x01, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x39, 0x0a, 0x0c, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x65, 0x64, 0x54, 0x61,
	0x67, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x2e, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x65, 0x64, 0x54, 0x61, 0x67, 0x73, 0x52,
	0x0c, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x65, 0x64, 0x54, 0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a,
	0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x78, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x22, 0xf1, 0x08, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41,
	0x70, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x41, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x75,
	0x6d, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x41, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x64, 0x67, 0x65, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x6e, 0x75, 0x6d, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x64, 0x67,
	0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x55, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6e,
	0x75, 0x6d, 0x55, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x75,
	0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x6e, 0x75, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x56, 0x0a, 0x13, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x13, 0x55,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x4f, 0x6b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x0e, 0x4f, 0x6b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x56, 0x0a, 0x13, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x13, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x52, 0x0a, 0x11, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x11, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x56, 0x0a, 0x13,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x13, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x1a, 0x5e, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9c, 0x09, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x63, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x63, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x3c, 0x0a, 0x19, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x55, 0x55, 0x49, 0x44,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x19, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x55, 0x55, 0x49,
	0x44, 0x12, 0x38, 0x0a, 0x17, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x17, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x18, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x18, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x17, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x55,
	0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x17, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x55, 0x49,
	0x44, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x70, 0x70,
	0x73, 0x55, 0x55, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x10, 0x61, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x55, 0x55, 0x49, 0x44, 0x12, 0x39, 0x0a,
	0x0e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x66, 0x66, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65,
	0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x77, 0x50,
	0x6c, 0x61, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x77, 0x50, 0x6c,
	0x61, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x39, 0x0a, 0x0c, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x65,
	0x64, 0x54, 0x61, 0x67, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x65, 0x64, 0x54, 0x61,
	0x67, 0x73, 0x52, 0x0c, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x65, 0x64, 0x54, 0x61, 0x67, 0x73,
	0x12, 0x58, 0x0a, 0x0f, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x41, 0x75, 0x74, 0x6f, 0x54,
	0x61, 0x67, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x41, 0x75, 0x74, 0x6f,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x73, 0x6b, 0x69, 0x70, 0x70,
	0x65, 0x64, 0x41, 0x75, 0x74, 0x6f, 0x54, 0x61, 0x67, 0x73, 0x12, 0x65, 0x0a, 0x15, 0x61, 0x75,
	0x74, 0x6f, 0x54, 0x61, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x54, 0x61, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x75, 0x6c, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x15, 0x61, 0x75, 0x74, 0x6f,
	0x54, 0x61, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x59, 0x0a, 0x14, 0x53, 0x6b,
	0x69, 0x70, 0x70, 0x65, 0x64, 0x41, 0x75, 0x74, 0x6f, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x75,
	0x74, 0x6f, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x85, 0x01, 0x0a, 0x15, 0x41, 0x75, 0x74, 0x6f, 0x54, 0x61,
	0x67, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x28, 0x0a, 0x24, 0x41, 0x55, 0x54, 0x4f, 0x5f, 0x54, 0x41, 0x47, 0x47, 0x49, 0x4e, 0x47, 0x5f,
	0x52, 0x55, 0x4c, 0x45, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x55, 0x54,
	0x4f, 0x5f, 0x54, 0x41, 0x47, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b,
	0x41, 0x55, 0x54, 0x4f, 0x5f, 0x54, 0x41, 0x47, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x55, 0x4c,
	0x45, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x49, 0x10, 0x02, 0x4a, 0x04, 0x08,
	0x01, 0x10, 0x02, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x4b, 0x0a, 0x1a, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x48, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x22, 0x50, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x22, 0x3f, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x3a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6c, 0x69, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x6c, 0x69,
	0x6d, 0x22, 0x3c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22,
	0x2b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x69, 0x73, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x22, 0xf4, 0x01, 0x0a,
	0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x14, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x14, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x72, 0x69, 0x73, 0x6b, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e,
	0x52, 0x69, 0x73, 0x6b, 0x52, 0x05, 0x72, 0x69, 0x73, 0x6b, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6e,
	0x75, 0x6d, 0x4c, 0x6f, 0x77, 0x52, 0x69, 0x73, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x6e, 0x75, 0x6d, 0x4c, 0x6f, 0x77, 0x52, 0x69, 0x73, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x6e,
	0x75, 0x6d, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x52, 0x69, 0x73, 0x6b, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x52, 0x69, 0x73,
	0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x48, 0x69, 0x67, 0x68, 0x52, 0x69, 0x73, 0x6b,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x48, 0x69, 0x67, 0x68, 0x52,
	0x69, 0x73, 0x6b, 0x22, 0x65, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x69, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x12, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x69,
	0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x64, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x22, 0x3f, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x22, 0x29, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x22, 0x36, 0x0a, 0x20,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x42, 0x79, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x55, 0x55, 0x49, 0x44, 0x22, 0x4e, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x42, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x55, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x0a, 0x1b, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x61, 0x64,
	0x69, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x22, 0xa2, 0x02, 0x0a, 0x1c, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x6c,
	0x61, 0x73, 0x74, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2b, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x45, 0x64, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x45, 0x64, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x22, 0x6f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a,
	0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x49,
	0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x16, 0x0a,
	0x12, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x49, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x41,
	0x50, 0x50, 0x53, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44,
	0x4f, 0x4e, 0x45, 0x10, 0x04, 0x22, 0x34, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x22, 0xed, 0x01, 0x0a, 0x13,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x75, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x6e, 0x75, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x75, 0x6d,
	0x45, 0x64, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x4e, 0x75, 0x6d,
	0x45, 0x64, 0x67, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15,
	0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54,
	0x41, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x10, 0x01,
	0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x49, 0x4e, 0x47,
	0x5f, 0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x22, 0x32, 0x0a, 0x10, 0x45,
	0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x22,
	0xe9, 0x01, 0x0a, 0x11, 0x45, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x45,
	0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x75, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x6e, 0x75, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x75, 0x6d,
	0x45, 0x64, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x4e, 0x75, 0x6d,
	0x45, 0x64, 0x67, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15,
	0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54,
	0x41, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x10, 0x01,
	0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x49, 0x4e, 0x47,
	0x5f, 0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x22, 0x84, 0x01, 0x0a, 0x0a,
	0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x2e, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x22, 0x6e, 0x0a, 0x12, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x68, 0x61, 0x73, 0x41, 0x77, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x41, 0x77, 0x73, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x14, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x61, 0x77, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x61, 0x77, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x55, 0x55, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x55, 0x55, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x70, 0x70, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x4a, 0x04,
	0x08, 0x05, 0x10, 0x06, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4c, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x2e, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0a,
	0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x58, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x2e, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x22, 0x4f, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x0a, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x4f,
	0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x6f, 0x6e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x37, 0x0a, 0x15, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x22, 0x56,
	0x0a, 0x16, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x96, 0x02, 0x0a, 0x04, 0x52, 0x69, 0x73, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x55,
	0x55, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x73, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2e, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x5e, 0x0a, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x14, 0x53,
	0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54,
	0x59, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45, 0x56, 0x45, 0x52,
	0x49, 0x54, 0x59, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d,
	0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x03, 0x22,
	0x99, 0x04, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5f, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74,
	0x6f, 0x6e, 0x65, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x69, 0x6c,
	0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x73, 0x1a, 0xf1, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x4e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x36, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x6a, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45,
	0x53, 0x53, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44,
	0x4f, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x04, 0x22, 0x6e, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45,
	0x53, 0x53, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53,
	0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x22, 0x8a, 0x05, 0x0a, 0x0d,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x27, 0x0a,
	0x06, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x4e, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x69,
	0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b,
	0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x48, 0x00, 0x52, 0x15, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x6d,
	0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x4a, 0x0a, 0x13, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x52,
	0x61, 0x64, 0x69, 0x75, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x2e,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x01, 0x52, 0x13, 0x62, 0x6c, 0x61, 0x73,
	0x74, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x4c, 0x0a, 0x14, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x42, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x02, 0x52, 0x14, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x42,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x4a, 0x0a, 0x13, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x48, 0x03, 0x52, 0x13, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x0c,
	0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x70,
	0x52, 0x0c, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x12, 0x38,
	0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x4b, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x69, 0x73, 0x6b, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x69,
	0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x42,
	0x16, 0x0a, 0x14, 0x5f, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x42, 0x16, 0x0a, 0x14, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x2d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x22, 0x58, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x2a, 0xcb, 0x01, 0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x66, 0x66, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x1c, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x44, 0x49, 0x46,
	0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x44,
	0x49, 0x46, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x43, 0x48, 0x41,
	0x4e, 0x47, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x44,
	0x49, 0x46, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x44, 0x49, 0x46,
	0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44,
	0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x44, 0x49, 0x46, 0x46, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x04,
	0x12, 0x1d, 0x0a, 0x19, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x44, 0x49, 0x46, 0x46, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x44, 0x10, 0x05, 0x2a,
	0x9c, 0x01, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1d, 0x0a, 0x19, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1a, 0x0a, 0x16, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x43,
	0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x48, 0x41, 0x50,
	0x50, 0x45, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53,
	0x53, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x04, 0x2a, 0xe3,
	0x01, 0x0a, 0x10, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x1d, 0x4f, 0x4e, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x49, 0x4e,
	0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x4f, 0x4e, 0x42, 0x4f, 0x41, 0x52,
	0x44, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x44, 0x44, 0x5f,
	0x41, 0x57, 0x53, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x1d, 0x0a,
	0x19, 0x4f, 0x4e, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x41, 0x50, 0x50, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f,
	0x4f, 0x4e, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10,
	0x03, 0x12, 0x25, 0x0a, 0x21, 0x4f, 0x4e, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x49, 0x4e, 0x47, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x49, 0x4d, 0x55, 0x4c, 0x41, 0x54, 0x45, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x4f, 0x4e, 0x42, 0x4f,
	0x41, 0x52, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x4f,
	0x4e, 0x45, 0x10, 0x05, 0x32, 0x82, 0x17, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x73, 0x12, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x12,
	0x1f, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x12, 0x16, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x19, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x19,
	0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x60, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x42, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x42, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x19, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x69, 0x73, 0x6b, 0x73, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x69, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x69, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b,
	0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c,
	0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x42, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x29, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x42, 0x79, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x42, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x14, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x24, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x61, 0x64, 0x69,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x4a, 0x0a, 0x0b,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x44, 0x0a, 0x09, 0x45, 0x6e, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e,
	0x45, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x6e, 0x64, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x53,
	0x0a, 0x0e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x30, 0x01, 0x12, 0x4e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x70, 0x70, 0x73, 0x12, 0x1c, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x41,
	0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x70, 0x70,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x6f, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6d, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x54, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x63, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x69,
	0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x42, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x65, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x24, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x61, 0x64, 0x69,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x54, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x12,
	0x1f, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6f, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x69,
	0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x28,
	0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66, 0x12, 0x17,
	0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x66, 0x0a, 0x15, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x25, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x70, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf5, 0x03, 0x0a, 0x12, 0x41, 0x75,
	0x74, 0x6f, 0x54, 0x61, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x42, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75,
	0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x45, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1a,
	0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x54,
	0x65, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30,
	0x01, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6f, 0x76, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x73, 0x64, 0x70, 0x2d, 0x67, 0x6f, 0x3b, 0x73, 0x64,
	0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_changes_proto_rawDescOnce sync.Once
	file_changes_proto_rawDescData []byte
)

func file_changes_proto_rawDescGZIP() []byte {
	file_changes_proto_rawDescOnce.Do(func() {
		file_changes_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_changes_proto_rawDesc), len(file_changes_proto_rawDesc)))
	})
	return file_changes_proto_rawDescData
}

var file_changes_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_changes_proto_msgTypes = make([]protoimpl.MessageInfo, 116)
var file_changes_proto_goTypes = []any{
	(ItemDiffStatus)(0),                                // 0: changes.ItemDiffStatus
	(ChangeStatus)(0),                                  // 1: changes.ChangeStatus
	(OnboardingStatus)(0),                              // 2: changes.OnboardingStatus
	(ChangeProperties_AutoTaggingRuleSource)(0),        // 3: changes.ChangeProperties.AutoTaggingRuleSource
	(CalculateBlastRadiusResponse_State)(0),            // 4: changes.CalculateBlastRadiusResponse.State
	(StartChangeResponse_State)(0),                     // 5: changes.StartChangeResponse.State
	(EndChangeResponse_State)(0),                       // 6: changes.EndChangeResponse.State
	(Risk_Severity)(0),                                 // 7: changes.Risk.Severity
	(ChangeAnalysisStatus_Status)(0),                   // 8: changes.ChangeAnalysisStatus.Status
	(ChangeAnalysisStatus_ProgressMilestone_Status)(0), // 9: changes.ChangeAnalysisStatus.ProgressMilestone.Status
	(*RuleMetadata)(nil),                               // 10: changes.RuleMetadata
	(*RuleProperties)(nil),                             // 11: changes.RuleProperties
	(*Rule)(nil),                                       // 12: changes.Rule
	(*ListRulesRequest)(nil),                           // 13: changes.ListRulesRequest
	(*ListRulesResponse)(nil),                          // 14: changes.ListRulesResponse
	(*CreateRuleRequest)(nil),                          // 15: changes.CreateRuleRequest
	(*CreateRuleResponse)(nil),                         // 16: changes.CreateRuleResponse
	(*GetRuleRequest)(nil),                             // 17: changes.GetRuleRequest
	(*GetRuleResponse)(nil),                            // 18: changes.GetRuleResponse
	(*UpdateRuleRequest)(nil),                          // 19: changes.UpdateRuleRequest
	(*UpdateRuleResponse)(nil),                         // 20: changes.UpdateRuleResponse
	(*DeleteRuleRequest)(nil),                          // 21: changes.DeleteRuleRequest
	(*DeleteRuleResponse)(nil),                         // 22: changes.DeleteRuleResponse
	(*ExportRuleRequest)(nil),                          // 23: changes.ExportRuleRequest
	(*ExportRuleResponse)(nil),                         // 24: changes.ExportRuleResponse
	(*TestRuleRequest)(nil),                            // 25: changes.TestRuleRequest
	(*TestRuleResponse)(nil),                           // 26: changes.TestRuleResponse
	(*GetChangeTimelineRequest)(nil),                   // 27: changes.GetChangeTimelineRequest
	(*GetChangeTimelineResponse)(nil),                  // 28: changes.GetChangeTimelineResponse
	(*ChangeTimelineEntry)(nil),                        // 29: changes.ChangeTimelineEntry
	(*GetDiffRequest)(nil),                             // 30: changes.GetDiffRequest
	(*GetDiffResponse)(nil),                            // 31: changes.GetDiffResponse
	(*ListChangingItemsSummaryRequest)(nil),            // 32: changes.ListChangingItemsSummaryRequest
	(*ListChangingItemsSummaryResponse)(nil),           // 33: changes.ListChangingItemsSummaryResponse
	(*GetAffectedAppsRequest)(nil),                     // 34: changes.GetAffectedAppsRequest
	(*GetAffectedAppsResponse)(nil),                    // 35: changes.GetAffectedAppsResponse
	(*UpdateChangingItemsRequest)(nil),                 // 36: changes.UpdateChangingItemsRequest
	(*MappedItemDiff)(nil),                             // 37: changes.MappedItemDiff
	(*UpdatePlannedChangesRequest)(nil),                // 38: changes.UpdatePlannedChangesRequest
	(*ListAppChangesSummaryRequest)(nil),               // 39: changes.ListAppChangesSummaryRequest
	(*ListAppChangesSummaryResponse)(nil),              // 40: changes.ListAppChangesSummaryResponse
	(*GetAppSummaryRequest)(nil),                       // 41: changes.GetAppSummaryRequest
	(*GetAppSummaryResponse)(nil),                      // 42: changes.GetAppSummaryResponse
	(*GetAppSummariesRequest)(nil),                     // 43: changes.GetAppSummariesRequest
	(*GetAppSummariesResponse)(nil),                    // 44: changes.GetAppSummariesResponse
	(*ListHomeChangesRequest)(nil),                     // 45: changes.ListHomeChangesRequest
	(*ChangeFiltersRequest)(nil),                       // 46: changes.ChangeFiltersRequest
	(*ListHomeChangesResponse)(nil),                    // 47: changes.ListHomeChangesResponse
	(*PopulateChangeFiltersRequest)(nil),               // 48: changes.PopulateChangeFiltersRequest
	(*PopulateChangeFiltersResponse)(nil),              // 49: changes.PopulateChangeFiltersResponse
	(*ListHomeAppsRequest)(nil),                        // 50: changes.ListHomeAppsRequest
	(*ListHomeAppsResponse)(nil),                       // 51: changes.ListHomeAppsResponse
	(*ItemDiffSummary)(nil),                            // 52: changes.ItemDiffSummary
	(*ItemDiff)(nil),                                   // 53: changes.ItemDiff
	(*AppSummary)(nil),                                 // 54: changes.AppSummary
	(*App)(nil),                                        // 55: changes.App
	(*AppMetadata)(nil),                                // 56: changes.AppMetadata
	(*AppProperties)(nil),                              // 57: changes.AppProperties
	(*ListAppsRequest)(nil),                            // 58: changes.ListAppsRequest
	(*ListAppsResponse)(nil),                           // 59: changes.ListAppsResponse
	(*CreateAppRequest)(nil),                           // 60: changes.CreateAppRequest
	(*CreateAppResponse)(nil),                          // 61: changes.CreateAppResponse
	(*CreateSimpleAppRequest)(nil),                     // 62: changes.CreateSimpleAppRequest
	(*CreateSimpleAppResponse)(nil),                    // 63: changes.CreateSimpleAppResponse
	(*GetAppRequest)(nil),                              // 64: changes.GetAppRequest
	(*GetAppResponse)(nil),                             // 65: changes.GetAppResponse
	(*UpdateAppRequest)(nil),                           // 66: changes.UpdateAppRequest
	(*UpdateAppResponse)(nil),                          // 67: changes.UpdateAppResponse
	(*DeleteAppRequest)(nil),                           // 68: changes.DeleteAppRequest
	(*DeleteAppResponse)(nil),                          // 69: changes.DeleteAppResponse
	(*ListAppChangesRequest)(nil),                      // 70: changes.ListAppChangesRequest
	(*ListAppChangesResponse)(nil),                     // 71: changes.ListAppChangesResponse
	(*EnrichedTags)(nil),                               // 72: changes.EnrichedTags
	(*TagValue)(nil),                                   // 73: changes.TagValue
	(*UserTagValue)(nil),                               // 74: changes.UserTagValue
	(*AutoTagValue)(nil),                               // 75: changes.AutoTagValue
	(*ChangeSummary)(nil),                              // 76: changes.ChangeSummary
	(*Change)(nil),                                     // 77: changes.Change
	(*ChangeMetadata)(nil),                             // 78: changes.ChangeMetadata
	(*ChangeProperties)(nil),                           // 79: changes.ChangeProperties
	(*ListChangesRequest)(nil),                         // 80: changes.ListChangesRequest
	(*ListChangesResponse)(nil),                        // 81: changes.ListChangesResponse
	(*ListChangesByStatusRequest)(nil),                 // 82: changes.ListChangesByStatusRequest
	(*ListChangesByStatusResponse)(nil),                // 83: changes.ListChangesByStatusResponse
	(*CreateChangeRequest)(nil),                        // 84: changes.CreateChangeRequest
	(*CreateChangeResponse)(nil),                       // 85: changes.CreateChangeResponse
	(*GetChangeRequest)(nil),                           // 86: changes.GetChangeRequest
	(*GetChangeResponse)(nil),                          // 87: changes.GetChangeResponse
	(*GetChangeRisksRequest)(nil),                      // 88: changes.GetChangeRisksRequest
	(*ChangeRiskMetadata)(nil),                         // 89: changes.ChangeRiskMetadata
	(*GetChangeRisksResponse)(nil),                     // 90: changes.GetChangeRisksResponse
	(*UpdateChangeRequest)(nil),                        // 91: changes.UpdateChangeRequest
	(*UpdateChangeResponse)(nil),                       // 92: changes.UpdateChangeResponse
	(*DeleteChangeRequest)(nil),                        // 93: changes.DeleteChangeRequest
	(*ListChangesBySnapshotUUIDRequest)(nil),           // 94: changes.ListChangesBySnapshotUUIDRequest
	(*ListChangesBySnapshotUUIDResponse)(nil),          // 95: changes.ListChangesBySnapshotUUIDResponse
	(*DeleteChangeResponse)(nil),                       // 96: changes.DeleteChangeResponse
	(*RefreshStateRequest)(nil),                        // 97: changes.RefreshStateRequest
	(*RefreshStateResponse)(nil),                       // 98: changes.RefreshStateResponse
	(*CalculateBlastRadiusRequest)(nil),                // 99: changes.CalculateBlastRadiusRequest
	(*CalculateBlastRadiusResponse)(nil),               // 100: changes.CalculateBlastRadiusResponse
	(*StartChangeRequest)(nil),                         // 101: changes.StartChangeRequest
	(*StartChangeResponse)(nil),                        // 102: changes.StartChangeResponse
	(*EndChangeRequest)(nil),                           // 103: changes.EndChangeRequest
	(*EndChangeResponse)(nil),                          // 104: changes.EndChangeResponse
	(*Onboarding)(nil),                                 // 105: changes.Onboarding
	(*OnboardingMetadata)(nil),                         // 106: changes.OnboardingMetadata
	(*OnboardingProperties)(nil),                       // 107: changes.OnboardingProperties
	(*GetOnboardingRequest)(nil),                       // 108: changes.GetOnboardingRequest
	(*GetOnboardingResponse)(nil),                      // 109: changes.GetOnboardingResponse
	(*UpdateOnboardingRequest)(nil),                    // 110: changes.UpdateOnboardingRequest
	(*UpdateOnboardingResponse)(nil),                   // 111: changes.UpdateOnboardingResponse
	(*SimulateChangeRequest)(nil),                      // 112: changes.SimulateChangeRequest
	(*SimulateChangeResponse)(nil),                     // 113: changes.SimulateChangeResponse
	(*Risk)(nil),                                       // 114: changes.Risk
	(*ChangeAnalysisStatus)(nil),                       // 115: changes.ChangeAnalysisStatus
	(*ChangeArchive)(nil),                              // 116: changes.ChangeArchive
	(*GetChangeArchiveRequest)(nil),                    // 117: changes.GetChangeArchiveRequest
	(*GetChangeArchiveResponse)(nil),                   // 118: changes.GetChangeArchiveResponse
	nil,                                                // 119: changes.ChangeFiltersRequest.TagsEntry
	nil,                                                // 120: changes.EnrichedTags.TagValueEntry
	nil,                                                // 121: changes.ChangeSummary.TagsEntry
	(*ChangeMetadata_HealthChange)(nil),                // 122: changes.ChangeMetadata.HealthChange
	nil,                                                // 123: changes.ChangeProperties.TagsEntry
	nil,                                                // 124: changes.ChangeProperties.SkippedAutoTagsEntry
	(*ChangeAnalysisStatus_ProgressMilestone)(nil),     // 125: changes.ChangeAnalysisStatus.ProgressMilestone
	(*timestamppb.Timestamp)(nil),                      // 126: google.protobuf.Timestamp
	(*Edge)(nil),                                       // 127: Edge
	(*Reference)(nil),                                  // 128: Reference
	(*Query)(nil),                                      // 129: Query
	(*BlastRadiusConfig)(nil),                          // 130: config.BlastRadiusConfig
	(*PaginationRequest)(nil),                          // 131: PaginationRequest
	(SortOrder)(0),                                     // 132: SortOrder
	(*PaginationResponse)(nil),                         // 133: PaginationResponse
	(Health)(0),                                        // 134: Health
	(*Item)(nil),                                       // 135: Item
	(*Bookmark)(nil),                                   // 136: bookmarks.Bookmark
	(*Snapshot)(nil),                                   // 137: snapshots.Snapshot
}
var file_changes_proto_depIdxs = []int32{
	126, // 0: changes.RuleMetadata.createdAt:type_name -> google.protobuf.Timestamp
	126, // 1: changes.RuleMetadata.lastRunAt:type_name -> google.protobuf.Timestamp
	126, // 2: changes.RuleMetadata.lastActivated:type_name -> google.protobuf.Timestamp
	10,  // 3: changes.Rule.metadata:type_name -> changes.RuleMetadata
	11,  // 4: changes.Rule.properties:type_name -> changes.RuleProperties
	12,  // 5: changes.ListRulesResponse.rules:type_name -> changes.Rule
	11,  // 6: changes.CreateRuleRequest.properties:type_name -> changes.RuleProperties
	12,  // 7: changes.CreateRuleResponse.rule:type_name -> changes.Rule
	12,  // 8: changes.GetRuleResponse.rule:type_name -> changes.Rule
	11,  // 9: changes.UpdateRuleRequest.properties:type_name -> changes.RuleProperties
	12,  // 10: changes.UpdateRuleResponse.rule:type_name -> changes.Rule
	11,  // 11: changes.TestRuleRequest.properties:type_name -> changes.RuleProperties
	75,  // 12: changes.TestRuleResponse.value:type_name -> changes.AutoTagValue
	29,  // 13: changes.GetChangeTimelineResponse.entries:type_name -> changes.ChangeTimelineEntry
	1,   // 14: changes.ChangeTimelineEntry.status:type_name -> changes.ChangeStatus
	126, // 15: changes.ChangeTimelineEntry.happenedAt:type_name -> google.protobuf.Timestamp
	53,  // 16: changes.GetDiffResponse.expectedItems:type_name -> changes.ItemDiff
	53,  // 17: changes.GetDiffResponse.unexpectedItems:type_name -> changes.ItemDiff
	127, // 18: changes.GetDiffResponse.edges:type_name -> Edge
	53,  // 19: changes.GetDiffResponse.missingItems:type_name -> changes.ItemDiff
	52,  // 20: changes.ListChangingItemsSummaryResponse.items:type_name -> changes.ItemDiffSummary
	54,  // 21: changes.GetAffectedAppsResponse.apps:type_name -> changes.AppSummary
	128, // 22: changes.UpdateChangingItemsRequest.changingItems:type_name -> Reference
	53,  // 23: changes.MappedItemDiff.item:type_name -> changes.ItemDiff
	129, // 24: changes.MappedItemDiff.mappingQuery:type_name -> Query
	37,  // 25: changes.UpdatePlannedChangesRequest.changingItems:type_name -> changes.MappedItemDiff
	130, // 26: changes.UpdatePlannedChangesRequest.blastRadiusConfigOverride:type_name -> config.BlastRadiusConfig
	11,  // 27: changes.UpdatePlannedChangesRequest.autoTaggingRulesOverride:type_name -> changes.RuleProperties
	76,  // 28: changes.ListAppChangesSummaryResponse.changes:type_name -> changes.ChangeSummary
	54,  // 29: changes.GetAppSummaryResponse.app:type_name -> changes.AppSummary
	54,  // 30: changes.GetAppSummariesResponse.apps:type_name -> changes.AppSummary
	131, // 31: changes.ListHomeChangesRequest.pagination:type_name -> PaginationRequest
	46,  // 32: changes.ListHomeChangesRequest.filters:type_name -> changes.ChangeFiltersRequest
	119, // 33: changes.ChangeFiltersRequest.tags:type_name -> changes.ChangeFiltersRequest.TagsEntry
	7,   // 34: changes.ChangeFiltersRequest.risks:type_name -> changes.Risk.Severity
	1,   // 35: changes.ChangeFiltersRequest.statuses:type_name -> changes.ChangeStatus
	132, // 36: changes.ChangeFiltersRequest.sortOrder:type_name -> SortOrder
	76,  // 37: changes.ListHomeChangesResponse.changes:type_name -> changes.ChangeSummary
	133, // 38: changes.ListHomeChangesResponse.pagination:type_name -> PaginationResponse
	54,  // 39: changes.ListHomeAppsResponse.apps:type_name -> changes.AppSummary
	128, // 40: changes.ItemDiffSummary.item:type_name -> Reference
	0,   // 41: changes.ItemDiffSummary.status:type_name -> changes.ItemDiffStatus
	134, // 42: changes.ItemDiffSummary.healthAfter:type_name -> Health
	128, // 43: changes.ItemDiff.item:type_name -> Reference
	0,   // 44: changes.ItemDiff.status:type_name -> changes.ItemDiffStatus
	135, // 45: changes.ItemDiff.before:type_name -> Item
	135, // 46: changes.ItemDiff.after:type_name -> Item
	126, // 47: changes.AppSummary.createdAt:type_name -> google.protobuf.Timestamp
	56,  // 48: changes.App.metadata:type_name -> changes.AppMetadata
	57,  // 49: changes.App.properties:type_name -> changes.AppProperties
	126, // 50: changes.AppMetadata.createdAt:type_name -> google.protobuf.Timestamp
	126, // 51: changes.AppMetadata.updatedAt:type_name -> google.protobuf.Timestamp
	128, // 52: changes.AppMetadata.items:type_name -> Reference
	126, // 53: changes.AppMetadata.itemsLastUpdated:type_name -> google.protobuf.Timestamp
	55,  // 54: changes.ListAppsResponse.apps:type_name -> changes.App
	57,  // 55: changes.CreateAppRequest.properties:type_name -> changes.AppProperties
	55,  // 56: changes.CreateAppResponse.app:type_name -> changes.App
	55,  // 57: changes.CreateSimpleAppResponse.app:type_name -> changes.App
	55,  // 58: changes.GetAppResponse.app:type_name -> changes.App
	57,  // 59: changes.UpdateAppRequest.properties:type_name -> changes.AppProperties
	55,  // 60: changes.UpdateAppResponse.app:type_name -> changes.App
	77,  // 61: changes.ListAppChangesResponse.changes:type_name -> changes.Change
	120, // 62: changes.EnrichedTags.tagValue:type_name -> changes.EnrichedTags.TagValueEntry
	74,  // 63: changes.TagValue.userTagValue:type_name -> changes.UserTagValue
	75,  // 64: changes.TagValue.autoTagValue:type_name -> changes.AutoTagValue
	1,   // 65: changes.ChangeSummary.status:type_name -> changes.ChangeStatus
	126, // 66: changes.ChangeSummary.createdAt:type_name -> google.protobuf.Timestamp
	121, // 67: changes.ChangeSummary.tags:type_name -> changes.ChangeSummary.TagsEntry
	72,  // 68: changes.ChangeSummary.enrichedTags:type_name -> changes.EnrichedTags
	78,  // 69: changes.Change.metadata:type_name -> changes.ChangeMetadata
	79,  // 70: changes.Change.properties:type_name -> changes.ChangeProperties
	126, // 71: changes.ChangeMetadata.createdAt:type_name -> google.protobuf.Timestamp
	126, // 72: changes.ChangeMetadata.updatedAt:type_name -> google.protobuf.Timestamp
	1,   // 73: changes.ChangeMetadata.status:type_name -> changes.ChangeStatus
	122, // 74: changes.ChangeMetadata.UnknownHealthChange:type_name -> changes.ChangeMetadata.HealthChange
	122, // 75: changes.ChangeMetadata.OkHealthChange:type_name -> changes.ChangeMetadata.HealthChange
	122, // 76: changes.ChangeMetadata.WarningHealthChange:type_name -> changes.ChangeMetadata.HealthChange
	122, // 77: changes.ChangeMetadata.ErrorHealthChange:type_name -> changes.ChangeMetadata.HealthChange
	122, // 78: changes.ChangeMetadata.PendingHealthChange:type_name -> changes.ChangeMetadata.HealthChange
	53,  // 79: changes.ChangeProperties.plannedChanges:type_name -> changes.ItemDiff
	123, // 80: changes.ChangeProperties.tags:type_name -> changes.ChangeProperties.TagsEntry
	72,  // 81: changes.ChangeProperties.enrichedTags:type_name -> changes.EnrichedTags
	124, // 82: changes.ChangeProperties.skippedAutoTags:type_name -> changes.ChangeProperties.SkippedAutoTagsEntry
	3,   // 83: changes.ChangeProperties.autoTaggingRuleSource:type_name -> changes.ChangeProperties.AutoTaggingRuleSource
	77,  // 84: changes.ListChangesResponse.changes:type_name -> changes.Change
	1,   // 85: changes.ListChangesByStatusRequest.status:type_name -> changes.ChangeStatus
	77,  // 86: changes.ListChangesByStatusResponse.changes:type_name -> changes.Change
	79,  // 87: changes.CreateChangeRequest.properties:type_name -> changes.ChangeProperties
	77,  // 88: changes.CreateChangeResponse.change:type_name -> changes.Change
	77,  // 89: changes.GetChangeResponse.change:type_name -> changes.Change
	115, // 90: changes.ChangeRiskMetadata.changeAnalysisStatus:type_name -> changes.ChangeAnalysisStatus
	114, // 91: changes.ChangeRiskMetadata.risks:type_name -> changes.Risk
	89,  // 92: changes.GetChangeRisksResponse.changeRiskMetadata:type_name -> changes.ChangeRiskMetadata
	79,  // 93: changes.UpdateChangeRequest.properties:type_name -> changes.ChangeProperties
	77,  // 94: changes.UpdateChangeResponse.change:type_name -> changes.Change
	77,  // 95: changes.ListChangesBySnapshotUUIDResponse.changes:type_name -> changes.Change
	4,   // 96: changes.CalculateBlastRadiusResponse.state:type_name -> changes.CalculateBlastRadiusResponse.State
	5,   // 97: changes.StartChangeResponse.state:type_name -> changes.StartChangeResponse.State
	6,   // 98: changes.EndChangeResponse.state:type_name -> changes.EndChangeResponse.State
	106, // 99: changes.Onboarding.metadata:type_name -> changes.OnboardingMetadata
	107, // 100: changes.Onboarding.properties:type_name -> changes.OnboardingProperties
	126, // 101: changes.OnboardingMetadata.created:type_name -> google.protobuf.Timestamp
	2,   // 102: changes.OnboardingProperties.status:type_name -> changes.OnboardingStatus
	105, // 103: changes.GetOnboardingResponse.onboarding:type_name -> changes.Onboarding
	107, // 104: changes.UpdateOnboardingRequest.properties:type_name -> changes.OnboardingProperties
	105, // 105: changes.UpdateOnboardingResponse.onboarding:type_name -> changes.Onboarding
	7,   // 106: changes.Risk.severity:type_name -> changes.Risk.Severity
	128, // 107: changes.Risk.relatedItems:type_name -> Reference
	8,   // 108: changes.ChangeAnalysisStatus.status:type_name -> changes.ChangeAnalysisStatus.Status
	125, // 109: changes.ChangeAnalysisStatus.progressMilestones:type_name -> changes.ChangeAnalysisStatus.ProgressMilestone
	77,  // 110: changes.ChangeArchive.Change:type_name -> changes.Change
	136, // 111: changes.ChangeArchive.changingItemsBookmark:type_name -> bookmarks.Bookmark
	137, // 112: changes.ChangeArchive.blastRadiusSnapshot:type_name -> snapshots.Snapshot
	137, // 113: changes.ChangeArchive.systemBeforeSnapshot:type_name -> snapshots.Snapshot
	137, // 114: changes.ChangeArchive.systemAfterSnapshot:type_name -> snapshots.Snapshot
	55,  // 115: changes.ChangeArchive.affectedApps:type_name -> changes.App
	29,  // 116: changes.ChangeArchive.timeline:type_name -> changes.ChangeTimelineEntry
	89,  // 117: changes.ChangeArchive.changeRiskMetadata:type_name -> changes.ChangeRiskMetadata
	116, // 118: changes.GetChangeArchiveResponse.changeArchive:type_name -> changes.ChangeArchive
	73,  // 119: changes.EnrichedTags.TagValueEntry.value:type_name -> changes.TagValue
	75,  // 120: changes.ChangeProperties.SkippedAutoTagsEntry.value:type_name -> changes.AutoTagValue
	9,   // 121: changes.ChangeAnalysisStatus.ProgressMilestone.status:type_name -> changes.ChangeAnalysisStatus.ProgressMilestone.Status
	58,  // 122: changes.ChangesService.ListApps:input_type -> changes.ListAppsRequest
	60,  // 123: changes.ChangesService.CreateApp:input_type -> changes.CreateAppRequest
	62,  // 124: changes.ChangesService.CreateSimpleApp:input_type -> changes.CreateSimpleAppRequest
	64,  // 125: changes.ChangesService.GetApp:input_type -> changes.GetAppRequest
	66,  // 126: changes.ChangesService.UpdateApp:input_type -> changes.UpdateAppRequest
	68,  // 127: changes.ChangesService.DeleteApp:input_type -> changes.DeleteAppRequest
	80,  // 128: changes.ChangesService.ListChanges:input_type -> changes.ListChangesRequest
	82,  // 129: changes.ChangesService.ListChangesByStatus:input_type -> changes.ListChangesByStatusRequest
	84,  // 130: changes.ChangesService.CreateChange:input_type -> changes.CreateChangeRequest
	86,  // 131: changes.ChangesService.GetChange:input_type -> changes.GetChangeRequest
	88,  // 132: changes.ChangesService.GetChangeRisks:input_type -> changes.GetChangeRisksRequest
	117, // 133: changes.ChangesService.GetChangeArchive:input_type -> changes.GetChangeArchiveRequest
	91,  // 134: changes.ChangesService.UpdateChange:input_type -> changes.UpdateChangeRequest
	93,  // 135: changes.ChangesService.DeleteChange:input_type -> changes.DeleteChangeRequest
	94,  // 136: changes.ChangesService.ListChangesBySnapshotUUID:input_type -> changes.ListChangesBySnapshotUUIDRequest
	27,  // 137: changes.ChangesService.GetChangeTimeline:input_type -> changes.GetChangeTimelineRequest
	97,  // 138: changes.ChangesService.RefreshState:input_type -> changes.RefreshStateRequest
	99,  // 139: changes.ChangesService.CalculateBlastRadius:input_type -> changes.CalculateBlastRadiusRequest
	101, // 140: changes.ChangesService.StartChange:input_type -> changes.StartChangeRequest
	103, // 141: changes.ChangesService.EndChange:input_type -> changes.EndChangeRequest
	112, // 142: changes.ChangesService.SimulateChange:input_type -> changes.SimulateChangeRequest
	108, // 143: changes.ChangesService.GetOnboarding:input_type -> changes.GetOnboardingRequest
	110, // 144: changes.ChangesService.UpdateOnboarding:input_type -> changes.UpdateOnboardingRequest
	50,  // 145: changes.ChangesService.ListHomeApps:input_type -> changes.ListHomeAppsRequest
	45,  // 146: changes.ChangesService.ListHomeChanges:input_type -> changes.ListHomeChangesRequest
	41,  // 147: changes.ChangesService.GetAppSummary:input_type -> changes.GetAppSummaryRequest
	43,  // 148: changes.ChangesService.GetAppSummaries:input_type -> changes.GetAppSummariesRequest
	70,  // 149: changes.ChangesService.ListAppChanges:input_type -> changes.ListAppChangesRequest
	39,  // 150: changes.ChangesService.ListAppChangesSummary:input_type -> changes.ListAppChangesSummaryRequest
	36,  // 151: changes.ChangesService.UpdateChangingItems:input_type -> changes.UpdateChangingItemsRequest
	38,  // 152: changes.ChangesService.UpdatePlannedChanges:input_type -> changes.UpdatePlannedChangesRequest
	34,  // 153: changes.ChangesService.GetAffectedApps:input_type -> changes.GetAffectedAppsRequest
	32,  // 154: changes.ChangesService.ListChangingItemsSummary:input_type -> changes.ListChangingItemsSummaryRequest
	30,  // 155: changes.ChangesService.GetDiff:input_type -> changes.GetDiffRequest
	48,  // 156: changes.ChangesService.PopulateChangeFilters:input_type -> changes.PopulateChangeFiltersRequest
	13,  // 157: changes.AutoTaggingService.ListRules:input_type -> changes.ListRulesRequest
	15,  // 158: changes.AutoTaggingService.CreateRule:input_type -> changes.CreateRuleRequest
	17,  // 159: changes.AutoTaggingService.GetRule:input_type -> changes.GetRuleRequest
	19,  // 160: changes.AutoTaggingService.UpdateRule:input_type -> changes.UpdateRuleRequest
	21,  // 161: changes.AutoTaggingService.DeleteRule:input_type -> changes.DeleteRuleRequest
	23,  // 162: changes.AutoTaggingService.ExportRule:input_type -> changes.ExportRuleRequest
	25,  // 163: changes.AutoTaggingService.TestRule:input_type -> changes.TestRuleRequest
	59,  // 164: changes.ChangesService.ListApps:output_type -> changes.ListAppsResponse
	61,  // 165: changes.ChangesService.CreateApp:output_type -> changes.CreateAppResponse
	63,  // 166: changes.ChangesService.CreateSimpleApp:output_type -> changes.CreateSimpleAppResponse
	65,  // 167: changes.ChangesService.GetApp:output_type -> changes.GetAppResponse
	67,  // 168: changes.ChangesService.UpdateApp:output_type -> changes.UpdateAppResponse
	69,  // 169: changes.ChangesService.DeleteApp:output_type -> changes.DeleteAppResponse
	81,  // 170: changes.ChangesService.ListChanges:output_type -> changes.ListChangesResponse
	83,  // 171: changes.ChangesService.ListChangesByStatus:output_type -> changes.ListChangesByStatusResponse
	85,  // 172: changes.ChangesService.CreateChange:output_type -> changes.CreateChangeResponse
	87,  // 173: changes.ChangesService.GetChange:output_type -> changes.GetChangeResponse
	90,  // 174: changes.ChangesService.GetChangeRisks:output_type -> changes.GetChangeRisksResponse
	118, // 175: changes.ChangesService.GetChangeArchive:output_type -> changes.GetChangeArchiveResponse
	92,  // 176: changes.ChangesService.UpdateChange:output_type -> changes.UpdateChangeResponse
	96,  // 177: changes.ChangesService.DeleteChange:output_type -> changes.DeleteChangeResponse
	95,  // 178: changes.ChangesService.ListChangesBySnapshotUUID:output_type -> changes.ListChangesBySnapshotUUIDResponse
	28,  // 179: changes.ChangesService.GetChangeTimeline:output_type -> changes.GetChangeTimelineResponse
	98,  // 180: changes.ChangesService.RefreshState:output_type -> changes.RefreshStateResponse
	100, // 181: changes.ChangesService.CalculateBlastRadius:output_type -> changes.CalculateBlastRadiusResponse
	102, // 182: changes.ChangesService.StartChange:output_type -> changes.StartChangeResponse
	104, // 183: changes.ChangesService.EndChange:output_type -> changes.EndChangeResponse
	113, // 184: changes.ChangesService.SimulateChange:output_type -> changes.SimulateChangeResponse
	109, // 185: changes.ChangesService.GetOnboarding:output_type -> changes.GetOnboardingResponse
	111, // 186: changes.ChangesService.UpdateOnboarding:output_type -> changes.UpdateOnboardingResponse
	51,  // 187: changes.ChangesService.ListHomeApps:output_type -> changes.ListHomeAppsResponse
	47,  // 188: changes.ChangesService.ListHomeChanges:output_type -> changes.ListHomeChangesResponse
	42,  // 189: changes.ChangesService.GetAppSummary:output_type -> changes.GetAppSummaryResponse
	44,  // 190: changes.ChangesService.GetAppSummaries:output_type -> changes.GetAppSummariesResponse
	71,  // 191: changes.ChangesService.ListAppChanges:output_type -> changes.ListAppChangesResponse
	40,  // 192: changes.ChangesService.ListAppChangesSummary:output_type -> changes.ListAppChangesSummaryResponse
	100, // 193: changes.ChangesService.UpdateChangingItems:output_type -> changes.CalculateBlastRadiusResponse
	100, // 194: changes.ChangesService.UpdatePlannedChanges:output_type -> changes.CalculateBlastRadiusResponse
	35,  // 195: changes.ChangesService.GetAffectedApps:output_type -> changes.GetAffectedAppsResponse
	33,  // 196: changes.ChangesService.ListChangingItemsSummary:output_type -> changes.ListChangingItemsSummaryResponse
	31,  // 197: changes.ChangesService.GetDiff:output_type -> changes.GetDiffResponse
	49,  // 198: changes.ChangesService.PopulateChangeFilters:output_type -> changes.PopulateChangeFiltersResponse
	14,  // 199: changes.AutoTaggingService.ListRules:output_type -> changes.ListRulesResponse
	16,  // 200: changes.AutoTaggingService.CreateRule:output_type -> changes.CreateRuleResponse
	18,  // 201: changes.AutoTaggingService.GetRule:output_type -> changes.GetRuleResponse
	20,  // 202: changes.AutoTaggingService.UpdateRule:output_type -> changes.UpdateRuleResponse
	22,  // 203: changes.AutoTaggingService.DeleteRule:output_type -> changes.DeleteRuleResponse
	24,  // 204: changes.AutoTaggingService.ExportRule:output_type -> changes.ExportRuleResponse
	26,  // 205: changes.AutoTaggingService.TestRule:output_type -> changes.TestRuleResponse
	164, // [164:206] is the sub-list for method output_type
	122, // [122:164] is the sub-list for method input_type
	122, // [122:122] is the sub-list for extension type_name
	122, // [122:122] is the sub-list for extension extendee
	0,   // [0:122] is the sub-list for field type_name
}

func init() { file_changes_proto_init() }
func file_changes_proto_init() {
	if File_changes_proto != nil {
		return
	}
	file_bookmarks_proto_init()
	file_items_proto_init()
	file_snapshots_proto_init()
	file_config_proto_init()
	file_util_proto_init()
	file_changes_proto_msgTypes[27].OneofWrappers = []any{}
	file_changes_proto_msgTypes[28].OneofWrappers = []any{}
	file_changes_proto_msgTypes[35].OneofWrappers = []any{}
	file_changes_proto_msgTypes[36].OneofWrappers = []any{}
	file_changes_proto_msgTypes[63].OneofWrappers = []any{
		(*TagValue_UserTagValue)(nil),
		(*TagValue_AutoTagValue)(nil),
	}
	file_changes_proto_msgTypes[106].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_changes_proto_rawDesc), len(file_changes_proto_rawDesc)),
			NumEnums:      10,
			NumMessages:   116,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_changes_proto_goTypes,
		DependencyIndexes: file_changes_proto_depIdxs,
		EnumInfos:         file_changes_proto_enumTypes,
		MessageInfos:      file_changes_proto_msgTypes,
	}.Build()
	File_changes_proto = out.File
	file_changes_proto_goTypes = nil
	file_changes_proto_depIdxs = nil
}
