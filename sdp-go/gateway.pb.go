// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: gateway.proto

package sdp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A union of all request made to the gateway.
type GatewayRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to RequestType:
	//
	//	*GatewayRequest_Query
	//	*GatewayRequest_CancelQuery
	//	*GatewayRequest_Expand
	//	*GatewayRequest_StoreSnapshot
	//	*GatewayRequest_LoadSnapshot
	//	*GatewayRequest_StoreBookmark
	//	*GatewayRequest_LoadBookmark
	//	*GatewayRequest_ChatMessage
	RequestType       isGatewayRequest_RequestType `protobuf_oneof:"request_type"`
	MinStatusInterval *durationpb.Duration         `protobuf:"bytes,2,opt,name=minStatusInterval,proto3,oneof" json:"minStatusInterval,omitempty"` // Minimum time between status updates. Setting this value too low can result in too many status messages
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GatewayRequest) Reset() {
	*x = GatewayRequest{}
	mi := &file_gateway_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayRequest) ProtoMessage() {}

func (x *GatewayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayRequest.ProtoReflect.Descriptor instead.
func (*GatewayRequest) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *GatewayRequest) GetRequestType() isGatewayRequest_RequestType {
	if x != nil {
		return x.RequestType
	}
	return nil
}

func (x *GatewayRequest) GetQuery() *Query {
	if x != nil {
		if x, ok := x.RequestType.(*GatewayRequest_Query); ok {
			return x.Query
		}
	}
	return nil
}

func (x *GatewayRequest) GetCancelQuery() *CancelQuery {
	if x != nil {
		if x, ok := x.RequestType.(*GatewayRequest_CancelQuery); ok {
			return x.CancelQuery
		}
	}
	return nil
}

func (x *GatewayRequest) GetExpand() *Expand {
	if x != nil {
		if x, ok := x.RequestType.(*GatewayRequest_Expand); ok {
			return x.Expand
		}
	}
	return nil
}

func (x *GatewayRequest) GetStoreSnapshot() *StoreSnapshot {
	if x != nil {
		if x, ok := x.RequestType.(*GatewayRequest_StoreSnapshot); ok {
			return x.StoreSnapshot
		}
	}
	return nil
}

func (x *GatewayRequest) GetLoadSnapshot() *LoadSnapshot {
	if x != nil {
		if x, ok := x.RequestType.(*GatewayRequest_LoadSnapshot); ok {
			return x.LoadSnapshot
		}
	}
	return nil
}

func (x *GatewayRequest) GetStoreBookmark() *StoreBookmark {
	if x != nil {
		if x, ok := x.RequestType.(*GatewayRequest_StoreBookmark); ok {
			return x.StoreBookmark
		}
	}
	return nil
}

func (x *GatewayRequest) GetLoadBookmark() *LoadBookmark {
	if x != nil {
		if x, ok := x.RequestType.(*GatewayRequest_LoadBookmark); ok {
			return x.LoadBookmark
		}
	}
	return nil
}

func (x *GatewayRequest) GetChatMessage() *ChatMessage {
	if x != nil {
		if x, ok := x.RequestType.(*GatewayRequest_ChatMessage); ok {
			return x.ChatMessage
		}
	}
	return nil
}

func (x *GatewayRequest) GetMinStatusInterval() *durationpb.Duration {
	if x != nil {
		return x.MinStatusInterval
	}
	return nil
}

type isGatewayRequest_RequestType interface {
	isGatewayRequest_RequestType()
}

type GatewayRequest_Query struct {
	// Adds a new query for items to the session, starting it immediately
	Query *Query `protobuf:"bytes,1,opt,name=query,proto3,oneof"`
}

type GatewayRequest_CancelQuery struct {
	// Cancel a running query
	CancelQuery *CancelQuery `protobuf:"bytes,3,opt,name=cancelQuery,proto3,oneof"`
}

type GatewayRequest_Expand struct {
	// Expand all linked items for the given item
	Expand *Expand `protobuf:"bytes,7,opt,name=expand,proto3,oneof"`
}

type GatewayRequest_StoreSnapshot struct {
	// store the current session state as snapshot
	StoreSnapshot *StoreSnapshot `protobuf:"bytes,10,opt,name=storeSnapshot,proto3,oneof"`
}

type GatewayRequest_LoadSnapshot struct {
	// load a snapshot into the current state
	LoadSnapshot *LoadSnapshot `protobuf:"bytes,11,opt,name=loadSnapshot,proto3,oneof"`
}

type GatewayRequest_StoreBookmark struct {
	// store the current set of queries as bookmarks
	StoreBookmark *StoreBookmark `protobuf:"bytes,14,opt,name=storeBookmark,proto3,oneof"`
}

type GatewayRequest_LoadBookmark struct {
	// load and execute a bookmark into the current state
	LoadBookmark *LoadBookmark `protobuf:"bytes,15,opt,name=loadBookmark,proto3,oneof"`
}

type GatewayRequest_ChatMessage struct {
	// // cancel the loading of a Bookmark
	// CancelLoadBookmark cancelLoadBookmark = ??;
	// // undo the loading of a Bookmark
	// UndoLoadBookmark undoLoadBookmark = ??;
	ChatMessage *ChatMessage `protobuf:"bytes,16,opt,name=chatMessage,proto3,oneof"`
}

func (*GatewayRequest_Query) isGatewayRequest_RequestType() {}

func (*GatewayRequest_CancelQuery) isGatewayRequest_RequestType() {}

func (*GatewayRequest_Expand) isGatewayRequest_RequestType() {}

func (*GatewayRequest_StoreSnapshot) isGatewayRequest_RequestType() {}

func (*GatewayRequest_LoadSnapshot) isGatewayRequest_RequestType() {}

func (*GatewayRequest_StoreBookmark) isGatewayRequest_RequestType() {}

func (*GatewayRequest_LoadBookmark) isGatewayRequest_RequestType() {}

func (*GatewayRequest_ChatMessage) isGatewayRequest_RequestType() {}

// The gateway will always respond with this type of message,
// however the purpose of it is purely as a wrapper to the many different types
// of messages that the gateway can send
type GatewayResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ResponseType:
	//
	//	*GatewayResponse_NewItem
	//	*GatewayResponse_NewEdge
	//	*GatewayResponse_Status
	//	*GatewayResponse_Error
	//	*GatewayResponse_QueryError
	//	*GatewayResponse_DeleteItem
	//	*GatewayResponse_DeleteEdge
	//	*GatewayResponse_UpdateItem
	//	*GatewayResponse_SnapshotStoreResult
	//	*GatewayResponse_SnapshotLoadResult
	//	*GatewayResponse_BookmarkStoreResult
	//	*GatewayResponse_BookmarkLoadResult
	//	*GatewayResponse_QueryStatus
	//	*GatewayResponse_ChatResponse
	//	*GatewayResponse_ToolStart
	//	*GatewayResponse_ToolFinish
	ResponseType  isGatewayResponse_ResponseType `protobuf_oneof:"response_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GatewayResponse) Reset() {
	*x = GatewayResponse{}
	mi := &file_gateway_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayResponse) ProtoMessage() {}

func (x *GatewayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayResponse.ProtoReflect.Descriptor instead.
func (*GatewayResponse) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *GatewayResponse) GetResponseType() isGatewayResponse_ResponseType {
	if x != nil {
		return x.ResponseType
	}
	return nil
}

func (x *GatewayResponse) GetNewItem() *Item {
	if x != nil {
		if x, ok := x.ResponseType.(*GatewayResponse_NewItem); ok {
			return x.NewItem
		}
	}
	return nil
}

func (x *GatewayResponse) GetNewEdge() *Edge {
	if x != nil {
		if x, ok := x.ResponseType.(*GatewayResponse_NewEdge); ok {
			return x.NewEdge
		}
	}
	return nil
}

func (x *GatewayResponse) GetStatus() *GatewayRequestStatus {
	if x != nil {
		if x, ok := x.ResponseType.(*GatewayResponse_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *GatewayResponse) GetError() string {
	if x != nil {
		if x, ok := x.ResponseType.(*GatewayResponse_Error); ok {
			return x.Error
		}
	}
	return ""
}

func (x *GatewayResponse) GetQueryError() *QueryError {
	if x != nil {
		if x, ok := x.ResponseType.(*GatewayResponse_QueryError); ok {
			return x.QueryError
		}
	}
	return nil
}

func (x *GatewayResponse) GetDeleteItem() *Reference {
	if x != nil {
		if x, ok := x.ResponseType.(*GatewayResponse_DeleteItem); ok {
			return x.DeleteItem
		}
	}
	return nil
}

func (x *GatewayResponse) GetDeleteEdge() *Edge {
	if x != nil {
		if x, ok := x.ResponseType.(*GatewayResponse_DeleteEdge); ok {
			return x.DeleteEdge
		}
	}
	return nil
}

func (x *GatewayResponse) GetUpdateItem() *Item {
	if x != nil {
		if x, ok := x.ResponseType.(*GatewayResponse_UpdateItem); ok {
			return x.UpdateItem
		}
	}
	return nil
}

func (x *GatewayResponse) GetSnapshotStoreResult() *SnapshotStoreResult {
	if x != nil {
		if x, ok := x.ResponseType.(*GatewayResponse_SnapshotStoreResult); ok {
			return x.SnapshotStoreResult
		}
	}
	return nil
}

func (x *GatewayResponse) GetSnapshotLoadResult() *SnapshotLoadResult {
	if x != nil {
		if x, ok := x.ResponseType.(*GatewayResponse_SnapshotLoadResult); ok {
			return x.SnapshotLoadResult
		}
	}
	return nil
}

func (x *GatewayResponse) GetBookmarkStoreResult() *BookmarkStoreResult {
	if x != nil {
		if x, ok := x.ResponseType.(*GatewayResponse_BookmarkStoreResult); ok {
			return x.BookmarkStoreResult
		}
	}
	return nil
}

func (x *GatewayResponse) GetBookmarkLoadResult() *BookmarkLoadResult {
	if x != nil {
		if x, ok := x.ResponseType.(*GatewayResponse_BookmarkLoadResult); ok {
			return x.BookmarkLoadResult
		}
	}
	return nil
}

func (x *GatewayResponse) GetQueryStatus() *QueryStatus {
	if x != nil {
		if x, ok := x.ResponseType.(*GatewayResponse_QueryStatus); ok {
			return x.QueryStatus
		}
	}
	return nil
}

func (x *GatewayResponse) GetChatResponse() *ChatResponse {
	if x != nil {
		if x, ok := x.ResponseType.(*GatewayResponse_ChatResponse); ok {
			return x.ChatResponse
		}
	}
	return nil
}

func (x *GatewayResponse) GetToolStart() *ToolStart {
	if x != nil {
		if x, ok := x.ResponseType.(*GatewayResponse_ToolStart); ok {
			return x.ToolStart
		}
	}
	return nil
}

func (x *GatewayResponse) GetToolFinish() *ToolFinish {
	if x != nil {
		if x, ok := x.ResponseType.(*GatewayResponse_ToolFinish); ok {
			return x.ToolFinish
		}
	}
	return nil
}

type isGatewayResponse_ResponseType interface {
	isGatewayResponse_ResponseType()
}

type GatewayResponse_NewItem struct {
	NewItem *Item `protobuf:"bytes,2,opt,name=newItem,proto3,oneof"` // A new item that has been discovered
}

type GatewayResponse_NewEdge struct {
	NewEdge *Edge `protobuf:"bytes,3,opt,name=newEdge,proto3,oneof"` // A new edge between two items
}

type GatewayResponse_Status struct {
	Status *GatewayRequestStatus `protobuf:"bytes,4,opt,name=status,proto3,oneof"` // Status of the overall request
}

type GatewayResponse_Error struct {
	Error string `protobuf:"bytes,5,opt,name=error,proto3,oneof"` // An error that means the request couldn't be executed
}

type GatewayResponse_QueryError struct {
	QueryError *QueryError `protobuf:"bytes,6,opt,name=queryError,proto3,oneof"` // A new error that was encountered as part of a query
}

type GatewayResponse_DeleteItem struct {
	DeleteItem *Reference `protobuf:"bytes,7,opt,name=deleteItem,proto3,oneof"` // An item that should be deleted from local state
}

type GatewayResponse_DeleteEdge struct {
	DeleteEdge *Edge `protobuf:"bytes,8,opt,name=deleteEdge,proto3,oneof"` // An edge that should be deleted form local state
}

type GatewayResponse_UpdateItem struct {
	UpdateItem *Item `protobuf:"bytes,9,opt,name=updateItem,proto3,oneof"` // An item that has already been sent, but contains new data, it should be updated to reflect this version
}

type GatewayResponse_SnapshotStoreResult struct {
	SnapshotStoreResult *SnapshotStoreResult `protobuf:"bytes,11,opt,name=snapshotStoreResult,proto3,oneof"`
}

type GatewayResponse_SnapshotLoadResult struct {
	SnapshotLoadResult *SnapshotLoadResult `protobuf:"bytes,12,opt,name=snapshotLoadResult,proto3,oneof"`
}

type GatewayResponse_BookmarkStoreResult struct {
	BookmarkStoreResult *BookmarkStoreResult `protobuf:"bytes,15,opt,name=bookmarkStoreResult,proto3,oneof"`
}

type GatewayResponse_BookmarkLoadResult struct {
	BookmarkLoadResult *BookmarkLoadResult `protobuf:"bytes,16,opt,name=bookmarkLoadResult,proto3,oneof"`
}

type GatewayResponse_QueryStatus struct {
	QueryStatus *QueryStatus `protobuf:"bytes,17,opt,name=queryStatus,proto3,oneof"` // Status of requested queries
}

type GatewayResponse_ChatResponse struct {
	ChatResponse *ChatResponse `protobuf:"bytes,18,opt,name=chatResponse,proto3,oneof"`
}

type GatewayResponse_ToolStart struct {
	ToolStart *ToolStart `protobuf:"bytes,19,opt,name=toolStart,proto3,oneof"`
}

type GatewayResponse_ToolFinish struct {
	ToolFinish *ToolFinish `protobuf:"bytes,20,opt,name=toolFinish,proto3,oneof"`
}

func (*GatewayResponse_NewItem) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_NewEdge) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_Status) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_Error) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_QueryError) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_DeleteItem) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_DeleteEdge) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_UpdateItem) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_SnapshotStoreResult) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_SnapshotLoadResult) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_BookmarkStoreResult) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_BookmarkLoadResult) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_QueryStatus) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_ChatResponse) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_ToolStart) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_ToolFinish) isGatewayResponse_ResponseType() {}

// Contains the status of the gateway request.
type GatewayRequestStatus struct {
	state   protoimpl.MessageState        `protogen:"open.v1"`
	Summary *GatewayRequestStatus_Summary `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	// Whether all items have finished being processed by the gateway. It is
	// possible for all responders to be complete, but the gateway is still
	// working. A request should only be considered complete when all working ==
	// 0 and postProcessingComplete == true
	PostProcessingComplete bool `protobuf:"varint,4,opt,name=postProcessingComplete,proto3" json:"postProcessingComplete,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GatewayRequestStatus) Reset() {
	*x = GatewayRequestStatus{}
	mi := &file_gateway_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewayRequestStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayRequestStatus) ProtoMessage() {}

func (x *GatewayRequestStatus) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayRequestStatus.ProtoReflect.Descriptor instead.
func (*GatewayRequestStatus) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *GatewayRequestStatus) GetSummary() *GatewayRequestStatus_Summary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *GatewayRequestStatus) GetPostProcessingComplete() bool {
	if x != nil {
		return x.PostProcessingComplete
	}
	return false
}

// Ask the gateway to store the current state as bookmark with the specified details.
// Returns a BookmarkStored message when the bookmark is stored
type StoreBookmark struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// user supplied name of this bookmark
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// user supplied description of this bookmark
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// a correlation ID to match up requests and responses. set this to a value unique per connection
	MsgID []byte `protobuf:"bytes,3,opt,name=msgID,proto3" json:"msgID,omitempty"`
	// whether this bookmark should be stored as a system bookmark. System
	// bookmarks are hidden and can only be returned via the UUID, they don't
	// show up in lists
	IsSystem      bool `protobuf:"varint,4,opt,name=isSystem,proto3" json:"isSystem,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreBookmark) Reset() {
	*x = StoreBookmark{}
	mi := &file_gateway_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreBookmark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreBookmark) ProtoMessage() {}

func (x *StoreBookmark) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreBookmark.ProtoReflect.Descriptor instead.
func (*StoreBookmark) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *StoreBookmark) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoreBookmark) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StoreBookmark) GetMsgID() []byte {
	if x != nil {
		return x.MsgID
	}
	return nil
}

func (x *StoreBookmark) GetIsSystem() bool {
	if x != nil {
		return x.IsSystem
	}
	return false
}

// After a bookmark is successfully stored, this reply with the new bookmark's details is sent.
type BookmarkStoreResult struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Success      bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage string                 `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// a correlation ID to match up requests and responses. this field returns the contents of the request's msgID
	MsgID []byte `protobuf:"bytes,4,opt,name=msgID,proto3" json:"msgID,omitempty"`
	// UUID of the newly created bookmark
	BookmarkID    []byte `protobuf:"bytes,5,opt,name=bookmarkID,proto3" json:"bookmarkID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BookmarkStoreResult) Reset() {
	*x = BookmarkStoreResult{}
	mi := &file_gateway_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BookmarkStoreResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookmarkStoreResult) ProtoMessage() {}

func (x *BookmarkStoreResult) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookmarkStoreResult.ProtoReflect.Descriptor instead.
func (*BookmarkStoreResult) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *BookmarkStoreResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BookmarkStoreResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *BookmarkStoreResult) GetMsgID() []byte {
	if x != nil {
		return x.MsgID
	}
	return nil
}

func (x *BookmarkStoreResult) GetBookmarkID() []byte {
	if x != nil {
		return x.BookmarkID
	}
	return nil
}

// Ask the gateway to load the specified bookmark into the current state.
// Results are streamed to the client in the same way query results are.
type LoadBookmark struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unique id of the bookmark to load
	UUID []byte `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// a correlation ID to match up requests and responses. set this to a value unique per connection
	MsgID []byte `protobuf:"bytes,2,opt,name=msgID,proto3" json:"msgID,omitempty"`
	// set to true to force fetching fresh data
	IgnoreCache bool `protobuf:"varint,3,opt,name=ignoreCache,proto3" json:"ignoreCache,omitempty"`
	// The time at which the gateway should stop processing the queries spawned by this request
	Deadline      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=deadline,proto3" json:"deadline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadBookmark) Reset() {
	*x = LoadBookmark{}
	mi := &file_gateway_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadBookmark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadBookmark) ProtoMessage() {}

func (x *LoadBookmark) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadBookmark.ProtoReflect.Descriptor instead.
func (*LoadBookmark) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *LoadBookmark) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

func (x *LoadBookmark) GetMsgID() []byte {
	if x != nil {
		return x.MsgID
	}
	return nil
}

func (x *LoadBookmark) GetIgnoreCache() bool {
	if x != nil {
		return x.IgnoreCache
	}
	return false
}

func (x *LoadBookmark) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

type BookmarkLoadResult struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Success      bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage string                 `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// UUIDs of all queries that have been started as a result of loading this bookmark
	StartedQueryUUIDs [][]byte `protobuf:"bytes,3,rep,name=startedQueryUUIDs,proto3" json:"startedQueryUUIDs,omitempty"`
	// a correlation ID to match up requests and responses. this field returns the contents of the request's msgID
	MsgID         []byte `protobuf:"bytes,4,opt,name=msgID,proto3" json:"msgID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BookmarkLoadResult) Reset() {
	*x = BookmarkLoadResult{}
	mi := &file_gateway_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BookmarkLoadResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookmarkLoadResult) ProtoMessage() {}

func (x *BookmarkLoadResult) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookmarkLoadResult.ProtoReflect.Descriptor instead.
func (*BookmarkLoadResult) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{6}
}

func (x *BookmarkLoadResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BookmarkLoadResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *BookmarkLoadResult) GetStartedQueryUUIDs() [][]byte {
	if x != nil {
		return x.StartedQueryUUIDs
	}
	return nil
}

func (x *BookmarkLoadResult) GetMsgID() []byte {
	if x != nil {
		return x.MsgID
	}
	return nil
}

// Ask the gateway to store the current state as snapshot with the specified details.
// Returns a SnapshotStored message when the snapshot is stored
type StoreSnapshot struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// user supplied name of this snapshot
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// user supplied description of this snapshot
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// a correlation ID to match up requests and responses. set this to a value unique per connection
	MsgID         []byte `protobuf:"bytes,3,opt,name=msgID,proto3" json:"msgID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreSnapshot) Reset() {
	*x = StoreSnapshot{}
	mi := &file_gateway_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreSnapshot) ProtoMessage() {}

func (x *StoreSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreSnapshot.ProtoReflect.Descriptor instead.
func (*StoreSnapshot) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{7}
}

func (x *StoreSnapshot) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoreSnapshot) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StoreSnapshot) GetMsgID() []byte {
	if x != nil {
		return x.MsgID
	}
	return nil
}

// After a snapshot is successfully stored, this reply with the new snapshot's details is sent.
type SnapshotStoreResult struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Success      bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage string                 `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// a correlation ID to match up requests and responses. this field returns the contents of the request's msgID
	MsgID         []byte `protobuf:"bytes,4,opt,name=msgID,proto3" json:"msgID,omitempty"`
	SnapshotID    []byte `protobuf:"bytes,5,opt,name=snapshotID,proto3" json:"snapshotID,omitempty"` // The UUID of the newly stored snapshot
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotStoreResult) Reset() {
	*x = SnapshotStoreResult{}
	mi := &file_gateway_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotStoreResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotStoreResult) ProtoMessage() {}

func (x *SnapshotStoreResult) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotStoreResult.ProtoReflect.Descriptor instead.
func (*SnapshotStoreResult) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{8}
}

func (x *SnapshotStoreResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SnapshotStoreResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SnapshotStoreResult) GetMsgID() []byte {
	if x != nil {
		return x.MsgID
	}
	return nil
}

func (x *SnapshotStoreResult) GetSnapshotID() []byte {
	if x != nil {
		return x.SnapshotID
	}
	return nil
}

// Ask the gateway to load the specified snapshot into the current state.
// Results are streamed to the client in the same way query results are.
type LoadSnapshot struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unique id of the snapshot to load
	UUID []byte `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// a correlation ID to match up requests and responses. set this to a value unique per connection
	MsgID         []byte `protobuf:"bytes,2,opt,name=msgID,proto3" json:"msgID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadSnapshot) Reset() {
	*x = LoadSnapshot{}
	mi := &file_gateway_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSnapshot) ProtoMessage() {}

func (x *LoadSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSnapshot.ProtoReflect.Descriptor instead.
func (*LoadSnapshot) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{9}
}

func (x *LoadSnapshot) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

func (x *LoadSnapshot) GetMsgID() []byte {
	if x != nil {
		return x.MsgID
	}
	return nil
}

type SnapshotLoadResult struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Success      bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage string                 `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// a correlation ID to match up requests and responses. this field returns the contents of the request's msgID
	MsgID         []byte `protobuf:"bytes,4,opt,name=msgID,proto3" json:"msgID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotLoadResult) Reset() {
	*x = SnapshotLoadResult{}
	mi := &file_gateway_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotLoadResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotLoadResult) ProtoMessage() {}

func (x *SnapshotLoadResult) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotLoadResult.ProtoReflect.Descriptor instead.
func (*SnapshotLoadResult) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{10}
}

func (x *SnapshotLoadResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SnapshotLoadResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SnapshotLoadResult) GetMsgID() []byte {
	if x != nil {
		return x.MsgID
	}
	return nil
}

type ChatMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The message to create
	//
	// Types that are valid to be assigned to RequestType:
	//
	//	*ChatMessage_Text
	//	*ChatMessage_Cancel
	RequestType   isChatMessage_RequestType `protobuf_oneof:"request_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_gateway_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{11}
}

func (x *ChatMessage) GetRequestType() isChatMessage_RequestType {
	if x != nil {
		return x.RequestType
	}
	return nil
}

func (x *ChatMessage) GetText() string {
	if x != nil {
		if x, ok := x.RequestType.(*ChatMessage_Text); ok {
			return x.Text
		}
	}
	return ""
}

func (x *ChatMessage) GetCancel() bool {
	if x != nil {
		if x, ok := x.RequestType.(*ChatMessage_Cancel); ok {
			return x.Cancel
		}
	}
	return false
}

type isChatMessage_RequestType interface {
	isChatMessage_RequestType()
}

type ChatMessage_Text struct {
	Text string `protobuf:"bytes,1,opt,name=text,proto3,oneof"`
}

type ChatMessage_Cancel struct {
	// Cancel the last message sent to openAI, includes the message and tools that were started
	Cancel bool `protobuf:"varint,2,opt,name=cancel,proto3,oneof"`
}

func (*ChatMessage_Text) isChatMessage_RequestType() {}

func (*ChatMessage_Cancel) isChatMessage_RequestType() {}

type ToolMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A unique ID that tracks this tool call and can be used to correlate messages
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolMetadata) Reset() {
	*x = ToolMetadata{}
	mi := &file_gateway_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolMetadata) ProtoMessage() {}

func (x *ToolMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolMetadata.ProtoReflect.Descriptor instead.
func (*ToolMetadata) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{12}
}

func (x *ToolMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type QueryToolStart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Method        QueryMethod            `protobuf:"varint,2,opt,name=method,proto3,enum=QueryMethod" json:"method,omitempty"`
	Query         string                 `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	Scope         string                 `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryToolStart) Reset() {
	*x = QueryToolStart{}
	mi := &file_gateway_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryToolStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryToolStart) ProtoMessage() {}

func (x *QueryToolStart) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryToolStart.ProtoReflect.Descriptor instead.
func (*QueryToolStart) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{13}
}

func (x *QueryToolStart) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *QueryToolStart) GetMethod() QueryMethod {
	if x != nil {
		return x.Method
	}
	return QueryMethod_GET
}

func (x *QueryToolStart) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *QueryToolStart) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type QueryToolFinish struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NumItems      int32                  `protobuf:"varint,1,opt,name=numItems,proto3" json:"numItems,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryToolFinish) Reset() {
	*x = QueryToolFinish{}
	mi := &file_gateway_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryToolFinish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryToolFinish) ProtoMessage() {}

func (x *QueryToolFinish) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryToolFinish.ProtoReflect.Descriptor instead.
func (*QueryToolFinish) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{14}
}

func (x *QueryToolFinish) GetNumItems() int32 {
	if x != nil {
		return x.NumItems
	}
	return 0
}

type RelationshipToolStart struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Type                 string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	UniqueAttributeValue string                 `protobuf:"bytes,2,opt,name=uniqueAttributeValue,proto3" json:"uniqueAttributeValue,omitempty"`
	Scope                string                 `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *RelationshipToolStart) Reset() {
	*x = RelationshipToolStart{}
	mi := &file_gateway_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelationshipToolStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationshipToolStart) ProtoMessage() {}

func (x *RelationshipToolStart) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationshipToolStart.ProtoReflect.Descriptor instead.
func (*RelationshipToolStart) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{15}
}

func (x *RelationshipToolStart) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RelationshipToolStart) GetUniqueAttributeValue() string {
	if x != nil {
		return x.UniqueAttributeValue
	}
	return ""
}

func (x *RelationshipToolStart) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type RelationshipToolFinish struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NumItems      int32                  `protobuf:"varint,1,opt,name=numItems,proto3" json:"numItems,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RelationshipToolFinish) Reset() {
	*x = RelationshipToolFinish{}
	mi := &file_gateway_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelationshipToolFinish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationshipToolFinish) ProtoMessage() {}

func (x *RelationshipToolFinish) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationshipToolFinish.ProtoReflect.Descriptor instead.
func (*RelationshipToolFinish) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{16}
}

func (x *RelationshipToolFinish) GetNumItems() int32 {
	if x != nil {
		return x.NumItems
	}
	return 0
}

type ChangesByReferenceToolStart struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Type                 string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	UniqueAttributeValue string                 `protobuf:"bytes,2,opt,name=uniqueAttributeValue,proto3" json:"uniqueAttributeValue,omitempty"`
	Scope                string                 `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ChangesByReferenceToolStart) Reset() {
	*x = ChangesByReferenceToolStart{}
	mi := &file_gateway_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangesByReferenceToolStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangesByReferenceToolStart) ProtoMessage() {}

func (x *ChangesByReferenceToolStart) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangesByReferenceToolStart.ProtoReflect.Descriptor instead.
func (*ChangesByReferenceToolStart) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{17}
}

func (x *ChangesByReferenceToolStart) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ChangesByReferenceToolStart) GetUniqueAttributeValue() string {
	if x != nil {
		return x.UniqueAttributeValue
	}
	return ""
}

func (x *ChangesByReferenceToolStart) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type ChangeByReferenceSummary struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Title            string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                          // from ChangeProperties
	UUID             []byte                 `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`                                            // from ChangeMetadata
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`                                  // From ChangeMetadata
	Owner            string                 `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`                                          // From ChangeProperties
	NumAffectedItems int32                  `protobuf:"varint,5,opt,name=numAffectedItems,proto3" json:"numAffectedItems,omitempty"`                   // From ChangeMetadata
	ChangeStatus     ChangeStatus           `protobuf:"varint,6,opt,name=changeStatus,proto3,enum=changes.ChangeStatus" json:"changeStatus,omitempty"` // From ChangeMetadata
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ChangeByReferenceSummary) Reset() {
	*x = ChangeByReferenceSummary{}
	mi := &file_gateway_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeByReferenceSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeByReferenceSummary) ProtoMessage() {}

func (x *ChangeByReferenceSummary) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeByReferenceSummary.ProtoReflect.Descriptor instead.
func (*ChangeByReferenceSummary) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{18}
}

func (x *ChangeByReferenceSummary) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChangeByReferenceSummary) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

func (x *ChangeByReferenceSummary) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChangeByReferenceSummary) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ChangeByReferenceSummary) GetNumAffectedItems() int32 {
	if x != nil {
		return x.NumAffectedItems
	}
	return 0
}

func (x *ChangeByReferenceSummary) GetChangeStatus() ChangeStatus {
	if x != nil {
		return x.ChangeStatus
	}
	return ChangeStatus_CHANGE_STATUS_UNSPECIFIED
}

type ChangesByReferenceToolFinish struct {
	state           protoimpl.MessageState      `protogen:"open.v1"`
	ChangeSummaries []*ChangeByReferenceSummary `protobuf:"bytes,1,rep,name=changeSummaries,proto3" json:"changeSummaries,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ChangesByReferenceToolFinish) Reset() {
	*x = ChangesByReferenceToolFinish{}
	mi := &file_gateway_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangesByReferenceToolFinish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangesByReferenceToolFinish) ProtoMessage() {}

func (x *ChangesByReferenceToolFinish) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangesByReferenceToolFinish.ProtoReflect.Descriptor instead.
func (*ChangesByReferenceToolFinish) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{19}
}

func (x *ChangesByReferenceToolFinish) GetChangeSummaries() []*ChangeByReferenceSummary {
	if x != nil {
		return x.ChangeSummaries
	}
	return nil
}

type ToolStart struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Metadata *ToolMetadata          `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Types that are valid to be assigned to ToolType:
	//
	//	*ToolStart_Query
	//	*ToolStart_Relationship
	//	*ToolStart_ChangesByReference
	ToolType      isToolStart_ToolType `protobuf_oneof:"tool_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolStart) Reset() {
	*x = ToolStart{}
	mi := &file_gateway_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolStart) ProtoMessage() {}

func (x *ToolStart) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolStart.ProtoReflect.Descriptor instead.
func (*ToolStart) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{20}
}

func (x *ToolStart) GetMetadata() *ToolMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ToolStart) GetToolType() isToolStart_ToolType {
	if x != nil {
		return x.ToolType
	}
	return nil
}

func (x *ToolStart) GetQuery() *QueryToolStart {
	if x != nil {
		if x, ok := x.ToolType.(*ToolStart_Query); ok {
			return x.Query
		}
	}
	return nil
}

func (x *ToolStart) GetRelationship() *RelationshipToolStart {
	if x != nil {
		if x, ok := x.ToolType.(*ToolStart_Relationship); ok {
			return x.Relationship
		}
	}
	return nil
}

func (x *ToolStart) GetChangesByReference() *ChangesByReferenceToolStart {
	if x != nil {
		if x, ok := x.ToolType.(*ToolStart_ChangesByReference); ok {
			return x.ChangesByReference
		}
	}
	return nil
}

type isToolStart_ToolType interface {
	isToolStart_ToolType()
}

type ToolStart_Query struct {
	Query *QueryToolStart `protobuf:"bytes,2,opt,name=query,proto3,oneof"`
}

type ToolStart_Relationship struct {
	Relationship *RelationshipToolStart `protobuf:"bytes,3,opt,name=relationship,proto3,oneof"`
}

type ToolStart_ChangesByReference struct {
	ChangesByReference *ChangesByReferenceToolStart `protobuf:"bytes,4,opt,name=changesByReference,proto3,oneof"`
}

func (*ToolStart_Query) isToolStart_ToolType() {}

func (*ToolStart_Relationship) isToolStart_ToolType() {}

func (*ToolStart_ChangesByReference) isToolStart_ToolType() {}

type ToolFinish struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Metadata *ToolMetadata          `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Error    string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// Types that are valid to be assigned to ToolType:
	//
	//	*ToolFinish_Query
	//	*ToolFinish_Relationship
	//	*ToolFinish_ChangesByReference
	ToolType      isToolFinish_ToolType `protobuf_oneof:"tool_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolFinish) Reset() {
	*x = ToolFinish{}
	mi := &file_gateway_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolFinish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolFinish) ProtoMessage() {}

func (x *ToolFinish) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolFinish.ProtoReflect.Descriptor instead.
func (*ToolFinish) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{21}
}

func (x *ToolFinish) GetMetadata() *ToolMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ToolFinish) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ToolFinish) GetToolType() isToolFinish_ToolType {
	if x != nil {
		return x.ToolType
	}
	return nil
}

func (x *ToolFinish) GetQuery() *QueryToolFinish {
	if x != nil {
		if x, ok := x.ToolType.(*ToolFinish_Query); ok {
			return x.Query
		}
	}
	return nil
}

func (x *ToolFinish) GetRelationship() *RelationshipToolFinish {
	if x != nil {
		if x, ok := x.ToolType.(*ToolFinish_Relationship); ok {
			return x.Relationship
		}
	}
	return nil
}

func (x *ToolFinish) GetChangesByReference() *ChangesByReferenceToolFinish {
	if x != nil {
		if x, ok := x.ToolType.(*ToolFinish_ChangesByReference); ok {
			return x.ChangesByReference
		}
	}
	return nil
}

type isToolFinish_ToolType interface {
	isToolFinish_ToolType()
}

type ToolFinish_Query struct {
	Query *QueryToolFinish `protobuf:"bytes,3,opt,name=query,proto3,oneof"`
}

type ToolFinish_Relationship struct {
	Relationship *RelationshipToolFinish `protobuf:"bytes,4,opt,name=relationship,proto3,oneof"`
}

type ToolFinish_ChangesByReference struct {
	ChangesByReference *ChangesByReferenceToolFinish `protobuf:"bytes,5,opt,name=changesByReference,proto3,oneof"`
}

func (*ToolFinish_Query) isToolFinish_ToolType() {}

func (*ToolFinish_Relationship) isToolFinish_ToolType() {}

func (*ToolFinish_ChangesByReference) isToolFinish_ToolType() {}

type ChatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatResponse) Reset() {
	*x = ChatResponse{}
	mi := &file_gateway_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatResponse) ProtoMessage() {}

func (x *ChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatResponse.ProtoReflect.Descriptor instead.
func (*ChatResponse) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{22}
}

func (x *ChatResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ChatResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GatewayRequestStatus_Summary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Working       int32                  `protobuf:"varint,1,opt,name=working,proto3" json:"working,omitempty"`
	Stalled       int32                  `protobuf:"varint,2,opt,name=stalled,proto3" json:"stalled,omitempty"`
	Complete      int32                  `protobuf:"varint,3,opt,name=complete,proto3" json:"complete,omitempty"`
	Error         int32                  `protobuf:"varint,4,opt,name=error,proto3" json:"error,omitempty"`
	Cancelled     int32                  `protobuf:"varint,5,opt,name=cancelled,proto3" json:"cancelled,omitempty"`
	Responders    int32                  `protobuf:"varint,6,opt,name=responders,proto3" json:"responders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GatewayRequestStatus_Summary) Reset() {
	*x = GatewayRequestStatus_Summary{}
	mi := &file_gateway_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewayRequestStatus_Summary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayRequestStatus_Summary) ProtoMessage() {}

func (x *GatewayRequestStatus_Summary) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayRequestStatus_Summary.ProtoReflect.Descriptor instead.
func (*GatewayRequestStatus_Summary) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{2, 0}
}

func (x *GatewayRequestStatus_Summary) GetWorking() int32 {
	if x != nil {
		return x.Working
	}
	return 0
}

func (x *GatewayRequestStatus_Summary) GetStalled() int32 {
	if x != nil {
		return x.Stalled
	}
	return 0
}

func (x *GatewayRequestStatus_Summary) GetComplete() int32 {
	if x != nil {
		return x.Complete
	}
	return 0
}

func (x *GatewayRequestStatus_Summary) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *GatewayRequestStatus_Summary) GetCancelled() int32 {
	if x != nil {
		return x.Cancelled
	}
	return 0
}

func (x *GatewayRequestStatus_Summary) GetResponders() int32 {
	if x != nil {
		return x.Responders
	}
	return 0
}

var File_gateway_proto protoreflect.FileDescriptor

const file_gateway_proto_rawDesc = "" +
	"\n" +
	"\rgateway.proto\x12\agateway\x1a\rchanges.proto\x1a\vitems.proto\x1a\x0fresponses.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xad\x04\n" +
	"\x0eGatewayRequest\x12\x1e\n" +
	"\x05query\x18\x01 \x01(\v2\x06.QueryH\x00R\x05query\x120\n" +
	"\vcancelQuery\x18\x03 \x01(\v2\f.CancelQueryH\x00R\vcancelQuery\x12!\n" +
	"\x06expand\x18\a \x01(\v2\a.ExpandH\x00R\x06expand\x12>\n" +
	"\rstoreSnapshot\x18\n" +
	" \x01(\v2\x16.gateway.StoreSnapshotH\x00R\rstoreSnapshot\x12;\n" +
	"\floadSnapshot\x18\v \x01(\v2\x15.gateway.LoadSnapshotH\x00R\floadSnapshot\x12>\n" +
	"\rstoreBookmark\x18\x0e \x01(\v2\x16.gateway.StoreBookmarkH\x00R\rstoreBookmark\x12;\n" +
	"\floadBookmark\x18\x0f \x01(\v2\x15.gateway.LoadBookmarkH\x00R\floadBookmark\x128\n" +
	"\vchatMessage\x18\x10 \x01(\v2\x14.gateway.ChatMessageH\x00R\vchatMessage\x12L\n" +
	"\x11minStatusInterval\x18\x02 \x01(\v2\x19.google.protobuf.DurationH\x01R\x11minStatusInterval\x88\x01\x01B\x0e\n" +
	"\frequest_typeB\x14\n" +
	"\x12_minStatusInterval\"\x84\a\n" +
	"\x0fGatewayResponse\x12!\n" +
	"\anewItem\x18\x02 \x01(\v2\x05.ItemH\x00R\anewItem\x12!\n" +
	"\anewEdge\x18\x03 \x01(\v2\x05.EdgeH\x00R\anewEdge\x127\n" +
	"\x06status\x18\x04 \x01(\v2\x1d.gateway.GatewayRequestStatusH\x00R\x06status\x12\x16\n" +
	"\x05error\x18\x05 \x01(\tH\x00R\x05error\x12-\n" +
	"\n" +
	"queryError\x18\x06 \x01(\v2\v.QueryErrorH\x00R\n" +
	"queryError\x12,\n" +
	"\n" +
	"deleteItem\x18\a \x01(\v2\n" +
	".ReferenceH\x00R\n" +
	"deleteItem\x12'\n" +
	"\n" +
	"deleteEdge\x18\b \x01(\v2\x05.EdgeH\x00R\n" +
	"deleteEdge\x12'\n" +
	"\n" +
	"updateItem\x18\t \x01(\v2\x05.ItemH\x00R\n" +
	"updateItem\x12P\n" +
	"\x13snapshotStoreResult\x18\v \x01(\v2\x1c.gateway.SnapshotStoreResultH\x00R\x13snapshotStoreResult\x12M\n" +
	"\x12snapshotLoadResult\x18\f \x01(\v2\x1b.gateway.SnapshotLoadResultH\x00R\x12snapshotLoadResult\x12P\n" +
	"\x13bookmarkStoreResult\x18\x0f \x01(\v2\x1c.gateway.BookmarkStoreResultH\x00R\x13bookmarkStoreResult\x12M\n" +
	"\x12bookmarkLoadResult\x18\x10 \x01(\v2\x1b.gateway.BookmarkLoadResultH\x00R\x12bookmarkLoadResult\x120\n" +
	"\vqueryStatus\x18\x11 \x01(\v2\f.QueryStatusH\x00R\vqueryStatus\x12;\n" +
	"\fchatResponse\x18\x12 \x01(\v2\x15.gateway.ChatResponseH\x00R\fchatResponse\x122\n" +
	"\ttoolStart\x18\x13 \x01(\v2\x12.gateway.ToolStartH\x00R\ttoolStart\x125\n" +
	"\n" +
	"toolFinish\x18\x14 \x01(\v2\x13.gateway.ToolFinishH\x00R\n" +
	"toolFinishB\x0f\n" +
	"\rresponse_type\"\xc5\x02\n" +
	"\x14GatewayRequestStatus\x12?\n" +
	"\asummary\x18\x03 \x01(\v2%.gateway.GatewayRequestStatus.SummaryR\asummary\x126\n" +
	"\x16postProcessingComplete\x18\x04 \x01(\bR\x16postProcessingComplete\x1a\xad\x01\n" +
	"\aSummary\x12\x18\n" +
	"\aworking\x18\x01 \x01(\x05R\aworking\x12\x18\n" +
	"\astalled\x18\x02 \x01(\x05R\astalled\x12\x1a\n" +
	"\bcomplete\x18\x03 \x01(\x05R\bcomplete\x12\x14\n" +
	"\x05error\x18\x04 \x01(\x05R\x05error\x12\x1c\n" +
	"\tcancelled\x18\x05 \x01(\x05R\tcancelled\x12\x1e\n" +
	"\n" +
	"responders\x18\x06 \x01(\x05R\n" +
	"respondersJ\x04\b\x01\x10\x02\"w\n" +
	"\rStoreBookmark\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x14\n" +
	"\x05msgID\x18\x03 \x01(\fR\x05msgID\x12\x1a\n" +
	"\bisSystem\x18\x04 \x01(\bR\bisSystem\"\x8f\x01\n" +
	"\x13BookmarkStoreResult\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\"\n" +
	"\ferrorMessage\x18\x02 \x01(\tR\ferrorMessage\x12\x14\n" +
	"\x05msgID\x18\x04 \x01(\fR\x05msgID\x12\x1e\n" +
	"\n" +
	"bookmarkID\x18\x05 \x01(\fR\n" +
	"bookmarkIDJ\x04\b\x03\x10\x04\"\x92\x01\n" +
	"\fLoadBookmark\x12\x12\n" +
	"\x04UUID\x18\x01 \x01(\fR\x04UUID\x12\x14\n" +
	"\x05msgID\x18\x02 \x01(\fR\x05msgID\x12 \n" +
	"\vignoreCache\x18\x03 \x01(\bR\vignoreCache\x126\n" +
	"\bdeadline\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\bdeadline\"\x96\x01\n" +
	"\x12BookmarkLoadResult\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\"\n" +
	"\ferrorMessage\x18\x02 \x01(\tR\ferrorMessage\x12,\n" +
	"\x11startedQueryUUIDs\x18\x03 \x03(\fR\x11startedQueryUUIDs\x12\x14\n" +
	"\x05msgID\x18\x04 \x01(\fR\x05msgID\"[\n" +
	"\rStoreSnapshot\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x14\n" +
	"\x05msgID\x18\x03 \x01(\fR\x05msgID\"\x8f\x01\n" +
	"\x13SnapshotStoreResult\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\"\n" +
	"\ferrorMessage\x18\x02 \x01(\tR\ferrorMessage\x12\x14\n" +
	"\x05msgID\x18\x04 \x01(\fR\x05msgID\x12\x1e\n" +
	"\n" +
	"snapshotID\x18\x05 \x01(\fR\n" +
	"snapshotIDJ\x04\b\x03\x10\x04\"8\n" +
	"\fLoadSnapshot\x12\x12\n" +
	"\x04UUID\x18\x01 \x01(\fR\x04UUID\x12\x14\n" +
	"\x05msgID\x18\x02 \x01(\fR\x05msgID\"h\n" +
	"\x12SnapshotLoadResult\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\"\n" +
	"\ferrorMessage\x18\x02 \x01(\tR\ferrorMessage\x12\x14\n" +
	"\x05msgID\x18\x04 \x01(\fR\x05msgID\"M\n" +
	"\vChatMessage\x12\x14\n" +
	"\x04text\x18\x01 \x01(\tH\x00R\x04text\x12\x18\n" +
	"\x06cancel\x18\x02 \x01(\bH\x00R\x06cancelB\x0e\n" +
	"\frequest_type\"\x1e\n" +
	"\fToolMetadata\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"v\n" +
	"\x0eQueryToolStart\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12$\n" +
	"\x06method\x18\x02 \x01(\x0e2\f.QueryMethodR\x06method\x12\x14\n" +
	"\x05query\x18\x03 \x01(\tR\x05query\x12\x14\n" +
	"\x05scope\x18\x04 \x01(\tR\x05scope\"-\n" +
	"\x0fQueryToolFinish\x12\x1a\n" +
	"\bnumItems\x18\x01 \x01(\x05R\bnumItems\"u\n" +
	"\x15RelationshipToolStart\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x122\n" +
	"\x14uniqueAttributeValue\x18\x02 \x01(\tR\x14uniqueAttributeValue\x12\x14\n" +
	"\x05scope\x18\x03 \x01(\tR\x05scope\"4\n" +
	"\x16RelationshipToolFinish\x12\x1a\n" +
	"\bnumItems\x18\x01 \x01(\x05R\bnumItems\"{\n" +
	"\x1bChangesByReferenceToolStart\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x122\n" +
	"\x14uniqueAttributeValue\x18\x02 \x01(\tR\x14uniqueAttributeValue\x12\x14\n" +
	"\x05scope\x18\x03 \x01(\tR\x05scope\"\xfb\x01\n" +
	"\x18ChangeByReferenceSummary\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x12\n" +
	"\x04UUID\x18\x02 \x01(\fR\x04UUID\x128\n" +
	"\tcreatedAt\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x14\n" +
	"\x05owner\x18\x04 \x01(\tR\x05owner\x12*\n" +
	"\x10numAffectedItems\x18\x05 \x01(\x05R\x10numAffectedItems\x129\n" +
	"\fchangeStatus\x18\x06 \x01(\x0e2\x15.changes.ChangeStatusR\fchangeStatus\"k\n" +
	"\x1cChangesByReferenceToolFinish\x12K\n" +
	"\x0fchangeSummaries\x18\x01 \x03(\v2!.gateway.ChangeByReferenceSummaryR\x0fchangeSummaries\"\x9a\x02\n" +
	"\tToolStart\x121\n" +
	"\bmetadata\x18\x01 \x01(\v2\x15.gateway.ToolMetadataR\bmetadata\x12/\n" +
	"\x05query\x18\x02 \x01(\v2\x17.gateway.QueryToolStartH\x00R\x05query\x12D\n" +
	"\frelationship\x18\x03 \x01(\v2\x1e.gateway.RelationshipToolStartH\x00R\frelationship\x12V\n" +
	"\x12changesByReference\x18\x04 \x01(\v2$.gateway.ChangesByReferenceToolStartH\x00R\x12changesByReferenceB\v\n" +
	"\ttool_type\"\xb4\x02\n" +
	"\n" +
	"ToolFinish\x121\n" +
	"\bmetadata\x18\x01 \x01(\v2\x15.gateway.ToolMetadataR\bmetadata\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x120\n" +
	"\x05query\x18\x03 \x01(\v2\x18.gateway.QueryToolFinishH\x00R\x05query\x12E\n" +
	"\frelationship\x18\x04 \x01(\v2\x1f.gateway.RelationshipToolFinishH\x00R\frelationship\x12W\n" +
	"\x12changesByReference\x18\x05 \x01(\v2%.gateway.ChangesByReferenceToolFinishH\x00R\x12changesByReferenceB\v\n" +
	"\ttool_type\"8\n" +
	"\fChatResponse\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05errorB.Z,github.com/overmindtech/cli/sdp-go;sdpb\x06proto3"

var (
	file_gateway_proto_rawDescOnce sync.Once
	file_gateway_proto_rawDescData []byte
)

func file_gateway_proto_rawDescGZIP() []byte {
	file_gateway_proto_rawDescOnce.Do(func() {
		file_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gateway_proto_rawDesc), len(file_gateway_proto_rawDesc)))
	})
	return file_gateway_proto_rawDescData
}

var file_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_gateway_proto_goTypes = []any{
	(*GatewayRequest)(nil),               // 0: gateway.GatewayRequest
	(*GatewayResponse)(nil),              // 1: gateway.GatewayResponse
	(*GatewayRequestStatus)(nil),         // 2: gateway.GatewayRequestStatus
	(*StoreBookmark)(nil),                // 3: gateway.StoreBookmark
	(*BookmarkStoreResult)(nil),          // 4: gateway.BookmarkStoreResult
	(*LoadBookmark)(nil),                 // 5: gateway.LoadBookmark
	(*BookmarkLoadResult)(nil),           // 6: gateway.BookmarkLoadResult
	(*StoreSnapshot)(nil),                // 7: gateway.StoreSnapshot
	(*SnapshotStoreResult)(nil),          // 8: gateway.SnapshotStoreResult
	(*LoadSnapshot)(nil),                 // 9: gateway.LoadSnapshot
	(*SnapshotLoadResult)(nil),           // 10: gateway.SnapshotLoadResult
	(*ChatMessage)(nil),                  // 11: gateway.ChatMessage
	(*ToolMetadata)(nil),                 // 12: gateway.ToolMetadata
	(*QueryToolStart)(nil),               // 13: gateway.QueryToolStart
	(*QueryToolFinish)(nil),              // 14: gateway.QueryToolFinish
	(*RelationshipToolStart)(nil),        // 15: gateway.RelationshipToolStart
	(*RelationshipToolFinish)(nil),       // 16: gateway.RelationshipToolFinish
	(*ChangesByReferenceToolStart)(nil),  // 17: gateway.ChangesByReferenceToolStart
	(*ChangeByReferenceSummary)(nil),     // 18: gateway.ChangeByReferenceSummary
	(*ChangesByReferenceToolFinish)(nil), // 19: gateway.ChangesByReferenceToolFinish
	(*ToolStart)(nil),                    // 20: gateway.ToolStart
	(*ToolFinish)(nil),                   // 21: gateway.ToolFinish
	(*ChatResponse)(nil),                 // 22: gateway.ChatResponse
	(*GatewayRequestStatus_Summary)(nil), // 23: gateway.GatewayRequestStatus.Summary
	(*Query)(nil),                        // 24: Query
	(*CancelQuery)(nil),                  // 25: CancelQuery
	(*Expand)(nil),                       // 26: Expand
	(*durationpb.Duration)(nil),          // 27: google.protobuf.Duration
	(*Item)(nil),                         // 28: Item
	(*Edge)(nil),                         // 29: Edge
	(*QueryError)(nil),                   // 30: QueryError
	(*Reference)(nil),                    // 31: Reference
	(*QueryStatus)(nil),                  // 32: QueryStatus
	(*timestamppb.Timestamp)(nil),        // 33: google.protobuf.Timestamp
	(QueryMethod)(0),                     // 34: QueryMethod
	(ChangeStatus)(0),                    // 35: changes.ChangeStatus
}
var file_gateway_proto_depIdxs = []int32{
	24, // 0: gateway.GatewayRequest.query:type_name -> Query
	25, // 1: gateway.GatewayRequest.cancelQuery:type_name -> CancelQuery
	26, // 2: gateway.GatewayRequest.expand:type_name -> Expand
	7,  // 3: gateway.GatewayRequest.storeSnapshot:type_name -> gateway.StoreSnapshot
	9,  // 4: gateway.GatewayRequest.loadSnapshot:type_name -> gateway.LoadSnapshot
	3,  // 5: gateway.GatewayRequest.storeBookmark:type_name -> gateway.StoreBookmark
	5,  // 6: gateway.GatewayRequest.loadBookmark:type_name -> gateway.LoadBookmark
	11, // 7: gateway.GatewayRequest.chatMessage:type_name -> gateway.ChatMessage
	27, // 8: gateway.GatewayRequest.minStatusInterval:type_name -> google.protobuf.Duration
	28, // 9: gateway.GatewayResponse.newItem:type_name -> Item
	29, // 10: gateway.GatewayResponse.newEdge:type_name -> Edge
	2,  // 11: gateway.GatewayResponse.status:type_name -> gateway.GatewayRequestStatus
	30, // 12: gateway.GatewayResponse.queryError:type_name -> QueryError
	31, // 13: gateway.GatewayResponse.deleteItem:type_name -> Reference
	29, // 14: gateway.GatewayResponse.deleteEdge:type_name -> Edge
	28, // 15: gateway.GatewayResponse.updateItem:type_name -> Item
	8,  // 16: gateway.GatewayResponse.snapshotStoreResult:type_name -> gateway.SnapshotStoreResult
	10, // 17: gateway.GatewayResponse.snapshotLoadResult:type_name -> gateway.SnapshotLoadResult
	4,  // 18: gateway.GatewayResponse.bookmarkStoreResult:type_name -> gateway.BookmarkStoreResult
	6,  // 19: gateway.GatewayResponse.bookmarkLoadResult:type_name -> gateway.BookmarkLoadResult
	32, // 20: gateway.GatewayResponse.queryStatus:type_name -> QueryStatus
	22, // 21: gateway.GatewayResponse.chatResponse:type_name -> gateway.ChatResponse
	20, // 22: gateway.GatewayResponse.toolStart:type_name -> gateway.ToolStart
	21, // 23: gateway.GatewayResponse.toolFinish:type_name -> gateway.ToolFinish
	23, // 24: gateway.GatewayRequestStatus.summary:type_name -> gateway.GatewayRequestStatus.Summary
	33, // 25: gateway.LoadBookmark.deadline:type_name -> google.protobuf.Timestamp
	34, // 26: gateway.QueryToolStart.method:type_name -> QueryMethod
	33, // 27: gateway.ChangeByReferenceSummary.createdAt:type_name -> google.protobuf.Timestamp
	35, // 28: gateway.ChangeByReferenceSummary.changeStatus:type_name -> changes.ChangeStatus
	18, // 29: gateway.ChangesByReferenceToolFinish.changeSummaries:type_name -> gateway.ChangeByReferenceSummary
	12, // 30: gateway.ToolStart.metadata:type_name -> gateway.ToolMetadata
	13, // 31: gateway.ToolStart.query:type_name -> gateway.QueryToolStart
	15, // 32: gateway.ToolStart.relationship:type_name -> gateway.RelationshipToolStart
	17, // 33: gateway.ToolStart.changesByReference:type_name -> gateway.ChangesByReferenceToolStart
	12, // 34: gateway.ToolFinish.metadata:type_name -> gateway.ToolMetadata
	14, // 35: gateway.ToolFinish.query:type_name -> gateway.QueryToolFinish
	16, // 36: gateway.ToolFinish.relationship:type_name -> gateway.RelationshipToolFinish
	19, // 37: gateway.ToolFinish.changesByReference:type_name -> gateway.ChangesByReferenceToolFinish
	38, // [38:38] is the sub-list for method output_type
	38, // [38:38] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_gateway_proto_init() }
func file_gateway_proto_init() {
	if File_gateway_proto != nil {
		return
	}
	file_changes_proto_init()
	file_items_proto_init()
	file_responses_proto_init()
	file_gateway_proto_msgTypes[0].OneofWrappers = []any{
		(*GatewayRequest_Query)(nil),
		(*GatewayRequest_CancelQuery)(nil),
		(*GatewayRequest_Expand)(nil),
		(*GatewayRequest_StoreSnapshot)(nil),
		(*GatewayRequest_LoadSnapshot)(nil),
		(*GatewayRequest_StoreBookmark)(nil),
		(*GatewayRequest_LoadBookmark)(nil),
		(*GatewayRequest_ChatMessage)(nil),
	}
	file_gateway_proto_msgTypes[1].OneofWrappers = []any{
		(*GatewayResponse_NewItem)(nil),
		(*GatewayResponse_NewEdge)(nil),
		(*GatewayResponse_Status)(nil),
		(*GatewayResponse_Error)(nil),
		(*GatewayResponse_QueryError)(nil),
		(*GatewayResponse_DeleteItem)(nil),
		(*GatewayResponse_DeleteEdge)(nil),
		(*GatewayResponse_UpdateItem)(nil),
		(*GatewayResponse_SnapshotStoreResult)(nil),
		(*GatewayResponse_SnapshotLoadResult)(nil),
		(*GatewayResponse_BookmarkStoreResult)(nil),
		(*GatewayResponse_BookmarkLoadResult)(nil),
		(*GatewayResponse_QueryStatus)(nil),
		(*GatewayResponse_ChatResponse)(nil),
		(*GatewayResponse_ToolStart)(nil),
		(*GatewayResponse_ToolFinish)(nil),
	}
	file_gateway_proto_msgTypes[11].OneofWrappers = []any{
		(*ChatMessage_Text)(nil),
		(*ChatMessage_Cancel)(nil),
	}
	file_gateway_proto_msgTypes[20].OneofWrappers = []any{
		(*ToolStart_Query)(nil),
		(*ToolStart_Relationship)(nil),
		(*ToolStart_ChangesByReference)(nil),
	}
	file_gateway_proto_msgTypes[21].OneofWrappers = []any{
		(*ToolFinish_Query)(nil),
		(*ToolFinish_Relationship)(nil),
		(*ToolFinish_ChangesByReference)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gateway_proto_rawDesc), len(file_gateway_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gateway_proto_goTypes,
		DependencyIndexes: file_gateway_proto_depIdxs,
		MessageInfos:      file_gateway_proto_msgTypes,
	}.Build()
	File_gateway_proto = out.File
	file_gateway_proto_goTypes = nil
	file_gateway_proto_depIdxs = nil
}
