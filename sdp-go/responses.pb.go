// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: responses.proto

package sdp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ResponderState represents the state of the responder, note that both
// COMPLETE and ERROR are completion states i.e. do not expect any more items
// to be returned from the query
type ResponderState int32

const (
	// The responder is still gathering data
	ResponderState_WORKING ResponderState = 0
	// The query is complete
	ResponderState_COMPLETE ResponderState = 1
	// All sources have returned errors
	ResponderState_ERROR ResponderState = 2
	// Work has been cancelled while in progress
	ResponderState_CANCELLED ResponderState = 3
	// The responder has not set a response in the expected interval
	ResponderState_STALLED ResponderState = 4
)

// Enum value maps for ResponderState.
var (
	ResponderState_name = map[int32]string{
		0: "WORKING",
		1: "COMPLETE",
		2: "ERROR",
		3: "CANCELLED",
		4: "STALLED",
	}
	ResponderState_value = map[string]int32{
		"WORKING":   0,
		"COMPLETE":  1,
		"ERROR":     2,
		"CANCELLED": 3,
		"STALLED":   4,
	}
)

func (x ResponderState) Enum() *ResponderState {
	p := new(ResponderState)
	*p = x
	return p
}

func (x ResponderState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponderState) Descriptor() protoreflect.EnumDescriptor {
	return file_responses_proto_enumTypes[0].Descriptor()
}

func (ResponderState) Type() protoreflect.EnumType {
	return &file_responses_proto_enumTypes[0]
}

func (x ResponderState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponderState.Descriptor instead.
func (ResponderState) EnumDescriptor() ([]byte, []int) {
	return file_responses_proto_rawDescGZIP(), []int{0}
}

// Response is returned when a query is made
type Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the responder that is working on a response. This is purely
	// informational
	Responder string `protobuf:"bytes,1,opt,name=responder,proto3" json:"responder,omitempty"`
	// The state of the responder
	State ResponderState `protobuf:"varint,2,opt,name=state,proto3,enum=ResponderState" json:"state,omitempty"`
	// The timespan within which to expect the next update. (e.g. 10s) If no
	// further interim responses are received within this time the connection
	// can be considered stale and the requester may give up
	NextUpdateIn *durationpb.Duration `protobuf:"bytes,3,opt,name=nextUpdateIn,proto3" json:"nextUpdateIn,omitempty"`
	// UUID of the item query that this response is in relation to (in binary
	// format)
	UUID []byte `protobuf:"bytes,4,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// The ID of the responder that is working on a response. This is used for
	// internal bookkeeping and should remain constant for the duration of a
	// request, preferably over the lifetime of the source process.
	ResponderUUID []byte `protobuf:"bytes,5,opt,name=responderUUID,proto3" json:"responderUUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_responses_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_responses_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_responses_proto_rawDescGZIP(), []int{0}
}

func (x *Response) GetResponder() string {
	if x != nil {
		return x.Responder
	}
	return ""
}

func (x *Response) GetState() ResponderState {
	if x != nil {
		return x.State
	}
	return ResponderState_WORKING
}

func (x *Response) GetNextUpdateIn() *durationpb.Duration {
	if x != nil {
		return x.NextUpdateIn
	}
	return nil
}

func (x *Response) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

func (x *Response) GetResponderUUID() []byte {
	if x != nil {
		return x.ResponderUUID
	}
	return nil
}

var File_responses_proto protoreflect.FileDescriptor

const file_responses_proto_rawDesc = "" +
	"\n" +
	"\x0fresponses.proto\x1a\x1egoogle/protobuf/duration.proto\"\xc8\x01\n" +
	"\bResponse\x12\x1c\n" +
	"\tresponder\x18\x01 \x01(\tR\tresponder\x12%\n" +
	"\x05state\x18\x02 \x01(\x0e2\x0f.ResponderStateR\x05state\x12=\n" +
	"\fnextUpdateIn\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\fnextUpdateIn\x12\x12\n" +
	"\x04UUID\x18\x04 \x01(\fR\x04UUID\x12$\n" +
	"\rresponderUUID\x18\x05 \x01(\fR\rresponderUUID*R\n" +
	"\x0eResponderState\x12\v\n" +
	"\aWORKING\x10\x00\x12\f\n" +
	"\bCOMPLETE\x10\x01\x12\t\n" +
	"\x05ERROR\x10\x02\x12\r\n" +
	"\tCANCELLED\x10\x03\x12\v\n" +
	"\aSTALLED\x10\x04B.Z,github.com/overmindtech/workspace/sdp-go;sdpb\x06proto3"

var (
	file_responses_proto_rawDescOnce sync.Once
	file_responses_proto_rawDescData []byte
)

func file_responses_proto_rawDescGZIP() []byte {
	file_responses_proto_rawDescOnce.Do(func() {
		file_responses_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_responses_proto_rawDesc), len(file_responses_proto_rawDesc)))
	})
	return file_responses_proto_rawDescData
}

var file_responses_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_responses_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_responses_proto_goTypes = []any{
	(ResponderState)(0),         // 0: ResponderState
	(*Response)(nil),            // 1: Response
	(*durationpb.Duration)(nil), // 2: google.protobuf.Duration
}
var file_responses_proto_depIdxs = []int32{
	0, // 0: Response.state:type_name -> ResponderState
	2, // 1: Response.nextUpdateIn:type_name -> google.protobuf.Duration
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_responses_proto_init() }
func file_responses_proto_init() {
	if File_responses_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_responses_proto_rawDesc), len(file_responses_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_responses_proto_goTypes,
		DependencyIndexes: file_responses_proto_depIdxs,
		EnumInfos:         file_responses_proto_enumTypes,
		MessageInfos:      file_responses_proto_msgTypes,
	}.Build()
	File_responses_proto = out.File
	file_responses_proto_goTypes = nil
	file_responses_proto_depIdxs = nil
}
