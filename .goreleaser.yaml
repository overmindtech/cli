# Make sure to check the documentation at https://goreleaser.com
version: 2
builds:
  - binary: overmind
    id: overmind
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
    ldflags:
      - -s -w -X github.com/overmindtech/cli/tracing.version={{.Version}}
  - binary: overmind
    id: overmind-macos
    env:
      - CGO_ENABLED=0
    goos:
      - darwin
    ldflags:
      - -s -w -X github.com/overmindtech/cli/tracing.version={{.Version}}

# For now we are going to disable signing MacOS packages. This works on Dylan's
# person laptop, but we haven't worked out a way to get this set up in a github
# action yet.
# signs:
#   - id: amd64
#     signature: "overmind-cli-amd64.dmg"
#     ids:
#       - overmind-macos # here we filter the macos only build id
#     cmd: ./gon
#     args:
#       - gon-amd64.json
#     artifacts: all
#   - id: arm64
#     signature: "overmind-cli-arm64.dmg"
#     ids:
#       - overmind-macos # here we filter the macos only build id
#     cmd: ./gon
#     args:
#       - gon-arm64.json
#     artifacts: all

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .Binary }}_
      {{- .ProjectName }}_
      {{- .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip
    files:
      - LICENSE
      - README.md

nfpms:
  - id: nfpm
    package_name: overmind-cli
    file_name_template: "{{ .ConventionalFileName }}"

    # Build IDs for the builds you want to create NFPM packages for.
    # Defaults empty, which means no filtering.
    builds:
      - overmind
    vendor: Overmind
    homepage: https://overmind.tech/
    maintainer: Overmind <engineering@overmind.tech>
    description: |-
      Predict what will happen for any given change
    license: Apache 2.0
    formats:
      - apk
      - deb
      - rpm
      - archlinux
    bindir: /usr/bin
    section: default
    priority: extra

winget:
  - name: OvermindCLI
    publisher: Overmind
    short_description: "Predict what will happen for any given change"
    license: "FSL-1.1-Apache-2.0"
    publisher_url: https://overmind.tech/
    publisher_support_url: "https://github.com/overmindtech/cli/issues/new"
    package_identifier: Overmind.OvermindCLI
    homepage: "https://overmind.tech/"
    description: "Overmind calculates the impact of Terraform changes in your infrastructure, including the blast radius and likely risks."
    license_url: "https://github.com/overmindtech/cli?tab=License-1-ov-file#readme"
    copyright: "Copyright 2024 Overmind Technology Inc."

    # Setting this will prevent goreleaser to actually try to commit the updated
    # package - instead, it will be stored on the dist directory only,
    # leaving the responsibility of publishing it to the user.
    #
    # If set to auto, the release will not be uploaded to the repository
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    skip_upload: auto

    # Release notes.
    #
    # If you want to use the release notes generated by GoReleaser, use
    # `{{.Changelog}}` as the value.
    #
    # Templates: allowed
    release_notes: "{{.Changelog}}"

    # Repository to push the generated files to.
    repository:
      owner: overmindtech
      name: winget-pkgs
      branch: "{{.ProjectName}}-{{.Version}}"

      # Optionally a token can be provided, if it differs from the token
      # provided to GoReleaser
      token: "{{ .Env.WINGET_TOKEN }}"

      # Sets up pull request creation instead of just pushing to the given branch.
      # Make sure the 'branch' property is different from base before enabling
      # it.
      #
      # Since: v1.17
      pull_request:
        enabled: true
        draft: false
        # Base can also be another repository, in which case the owner and name
        # above will be used as HEAD, allowing cross-repository pull requests.
        #
        # Since: v1.19
        base:
          owner: microsoft
          name: winget-pkgs
          branch: master

checksum:
  name_template: "checksums.txt"

snapshot:
  version_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
